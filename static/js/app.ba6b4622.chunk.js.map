{"version":3,"sources":["D2App/components/JobOverview/JobOverview.module.css","D2App/components/Schemas/Schemas.module.css","D2App/App.module.css","D2App/components/FormField/FormField.module.css","D2App/components/ImportButtonStrip/ImportButtonStrip.module.css","D2App/components/JobOverview/MenuLabel/MenuLabel.module.css","D2App/components/JobSummary/JobSummary.module.css","D2App/components/JobSummary/Summary/Summary.module.css","D2App/components/MoreOptions/MoreOptions.module.css","D2App/components/OrgUnitTree/OrgUnitTreeField.module.css","D2App/components/Page/Page.module.css","D2App/components/ProgramStages/ProgramStages.module.css","D2App/components/RadioGroup/RadioGroup.module.css","D2App/pages/JobOverview/JobOverview.module.css","D2App/pages/Home/HomeCard.module.css","D2App/pages/Home/Home.module.css","D2App/components/Select/Select.module.css","D2App/components/Sidebar/Sidebar.module.css","D2App/components/Sidebar/MenuSectionHeader.module.css","D2App/components/ResourcePicker/ResourcePicker.module.css","D2App/components/BasicOptions/BasicOptions.module.css","D2App/components/ElementSchemes/SchemeContainer.module.css","D2App/components/StyledField/StyledField.module.css","D2App/components/ValidationSummary/ValidationSummary.module.css","D2App/locales/index.js","D2App/contexts/User.js","D2App/contexts/Task.js","D2App/components/Icon/Icon.js","D2App/utils/tasks.js","D2App/hooks/useTasks.js","D2App/hooks/useUser.js","D2App/hooks/useProgramStages.js","D2App/hooks/useClassKeys.js","D2App/utils/mime.js","D2App/utils/xhr.js","D2App/utils/helper.js","D2App/utils/options.js","D2App/components/ElementSchemes/DataElementIdScheme.js","D2App/components/DatePicker/DatePicker.js","D2App/components/DatePicker/DatePickerField.js","D2App/components/ElementSchemes/EventIdScheme.js","D2App/components/FileUpload/FileUpload.js","D2App/components/FormAlerts/FormAlerts.js","D2App/components/FormField/FormField.js","D2App/components/ElementSchemes/IdScheme.js","D2App/components/ImportButtonStrip/ImportButtonStrip.js","D2App/components/JobOverview/helper.js","D2App/components/JobOverview/MenuLabel/MenuLabel.js","D2App/components/JobOverview/ChipContainer.js","D2App/components/JobOverview/JobOverview.js","D2App/components/JobSummary/Log/Log.js","D2App/components/JobSummary/helper.js","D2App/components/JobSummary/SingleStatusTable/SingleStatusTable.js","D2App/components/JobSummary/SingleSummary/SingleSummary.js","D2App/components/JobSummary/TypeCount/TypeCount.js","D2App/components/JobSummary/Messages/Messages.js","D2App/components/JobSummary/TypeReportSummary/TypeReportSummary.js","D2App/components/JobSummary/Summary/Summary.js","D2App/components/JobSummary/Details/Details.js","D2App/components/JobSummary/JobSummary.js","D2App/components/JobSummary/MiniJobSummary/MiniJobSummary.js","D2App/components/MoreOptions/MoreOptions.js","D2App/components/ElementSchemes/OrgUnitIdScheme.js","D2App/components/OrgUnitTree/OrgUnitTreeField.js","D2App/components/Page/Page.js","D2App/components/ProgramStages/ProgramStages.js","D2App/components/RadioGroup/RadioGroup.js","D2App/components/RadioGroup/RadioGroupField.js","D2App/components/Router/ScrollToTop.js","D2App/components/Inputs/FileUpload.js","D2App/components/Inputs/ImportButtonStrip.js","D2App/components/Inputs/FormAlerts.js","D2App/components/Inputs/Format.js","D2App/components/Inputs/FirstRowIsHeader.js","D2App/components/Inputs/ClassKey.js","D2App/components/Inputs/Strategy.js","D2App/components/Inputs/PreheatCache.js","D2App/components/Inputs/SkipAudit.js","D2App/components/Inputs/SkipExistingCheck.js","D2App/components/Inputs/Identifier.js","D2App/components/Inputs/ImportReportMode.js","D2App/components/Inputs/PreheatMode.js","D2App/components/Inputs/ImportStrategy.js","D2App/components/Inputs/AtomicMode.js","D2App/components/Inputs/MergeMode.js","D2App/components/Inputs/FlushMode.js","D2App/components/Inputs/InclusionStrategy.js","D2App/components/Inputs/SkipSharing.js","D2App/components/Inputs/SkipValidation.js","D2App/components/Inputs/IsAsync.js","D2App/components/Inputs/OrgUnitTree.js","D2App/components/ResourcePicker/resourceTypes.js","D2App/components/Inputs/DataSetPicker.js","D2App/components/Inputs/ProgramPicker.js","D2App/components/Inputs/IncludeChildren.js","D2App/components/Inputs/IncludeDeleted.js","D2App/components/Inputs/Compression.js","D2App/components/Inputs/Inclusion.js","D2App/components/Inputs/StartDate.js","D2App/components/Inputs/EndDate.js","D2App/components/Inputs/ExportButton.js","D2App/components/Inputs/ProgramStages.js","D2App/components/Schemas/SchemasField.js","D2App/components/Inputs/Schemas.js","D2App/components/Inputs/ObjectType.js","D2App/components/Inputs/Objects.js","D2App/hooks/useObjects.js","D2App/components/Inputs/DataElementIdScheme.js","D2App/components/Inputs/EventIdScheme.js","D2App/components/Inputs/IdScheme.js","D2App/components/Inputs/OrgUnitIdScheme.js","D2App/components/WithAuthority/predicates.js","D2App/components/Inputs/OrgUnitMode.js","D2App/components/Inputs/TEITypeFilter.js","D2App/components/Inputs/ProgramStatus.js","D2App/components/Inputs/FollowUpStatus.js","D2App/components/Inputs/ProgramStartDate.js","D2App/components/Inputs/ProgramEndDate.js","D2App/components/Inputs/TETypePicker.js","D2App/components/Inputs/LastUpdatedFilter.js","D2App/components/Inputs/LastUpdatedStartDate.js","D2App/components/Inputs/LastUpdatedEndDate.js","D2App/components/Duration/DurationField.js","D2App/components/Inputs/LastUpdatedDuration.js","D2App/components/Inputs/AssignedUserMode.js","D2App/components/Inputs/UserPicker.js","D2App/components/Inputs/IncludeAllAttributes.js","D2App/components/Inputs/Dates.js","D2App/utils/final-form.js","D2App/pages/MetadataImport/form-helper.js","D2App/pages/MetadataImport/MetadataImport.js","D2App/pages/MetadataExport/MetadataExport.js","D2App/pages/MetadataExport/form-helper.js","D2App/pages/MetadataDependencyExport/MetadataDependencyExport.js","D2App/pages/MetadataDependencyExport/form-helper.js","D2App/pages/JobOverview/JobOverview.js","D2App/pages/GMLImport/GMLImport.js","D2App/pages/GMLImport/form-helper.js","D2App/pages/EventImport/EventImport.js","D2App/pages/EventImport/form-helper.js","D2App/pages/EventExport/form-helper.js","D2App/pages/EventExport/EventExport.js","D2App/pages/DataImport/DataImport.js","D2App/pages/DataImport/form-helper.js","D2App/pages/DataExport/form-helper.js","D2App/pages/DataExport/DataExport.js","D2App/pages/TEIExport/form-helper.js","D2App/pages/TEIExport/TEIExport.js","D2App/pages/TEIImport/form-helper.js","D2App/pages/TEIImport/TEIImport.js","D2App/pages/Home/HomeCard.js","D2App/pages/Home/pages.js","D2App/pages/Home/Home.js","D2App/components/Router/Router.js","D2App/components/Schemas/helper.js","D2App/components/Schemas/SchemaGroup.js","D2App/components/Schemas/Schemas.js","D2App/components/Select/Select.js","D2App/components/Select/SelectField.js","D2App/components/Sidebar/MenuSectionHeader.js","D2App/components/Sidebar/ImportMenuSectionHeader.js","D2App/components/Sidebar/ExportMenuSectionHeader.js","D2App/components/Sidebar/Sidebar.js","D2App/components/Switch/Switch.js","D2App/components/WithAuthority/WithAuthority.js","D2App/components/ResourcePicker/queries.js","D2App/components/ResourcePicker/ResourcePicker.js","D2App/components/ResourcePicker/ResourcePickerField.js","D2App/components/BasicOptions/BasicOptions.js","D2App/components/ElementSchemes/SchemeContainer.js","D2App/components/StyledField/StyledField.js","D2App/components/ValidationSummary/ValidationSummary.js","D2App/App.js"],"names":["module","exports","i18n","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","es_419Translations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","nlTranslations","orTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","roTranslations","ruTranslations","siTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","UserContext","React","createContext","undefined","TaskContext","getNewestTask","tasks","Object","keys","map","k","sort","a","b","created","createStyle","width","height","display","fill","color","userSelect","MetadataImportIcon","viewBox","style","data-test","d","MetadataExportIcon","MetadataDependencyExportIcon","DataIcon","EventIcon","GMLIcon","TasksIcon","TEIIcon","ImportIcon","ExportIcon","categoryTypes","key","importType","icon","label","t","allCategories","jobEventQuery","events","resource","id","type","taskId","jobSummaryQuery","summary","defaultTasks","data","event","gml","metadata","tei","defaultJobOverview","activeTypes","selectedJob","useTasks","engine","useDataEngine","setTasks","useState","jobOverview","setJobOverview","fetchSummary","async","task","newTask","error","query","variables","console","status","createFetchSummary","fetchEvents","completed","length","newEvents","filter","e","some","te","uid","level","text","message","date","Date","time","errorEvent","find","reverse","lastUpdated","setTimeout","createFetchEvents","addTask","entry","createAddTask","updateJobOverview","val","createUpdateJobOverview","userQuery","user","programStageQuery","fields","params","paging","ALL_LABEL","classKeyQuery","mapping","json","xml","csv","adx","pdf","getUploadXHR","url","upload","onResponse","onError","setProgress","format","xhr","XMLHttpRequest","contentType","getMimeType","withCredentials","open","setRequestHeader","name","onreadystatechange","onReadyStateChange","onprogress","onProgress","Math","floor","readyState","idAndMsg","extractIdAndMessage","JSON","parse","responseText","typeReports","response","Array","isArray","objectReports","errorReports","msg","evt","lengthComputable","percentComplete","parseInt","loaded","total","max","pathToId","path","pathSplit","split","jsDateToISO8601","getFullYear","toString","getMonth","padStart","getDate","jsDateToString","getHours","getMinutes","getSeconds","compressionToName","compression","fetchAttributes","apiBaseUrl","attribute","filters","fetch","credentials","then","resp","Promise","resolve","catch","Error","statusText","reject","fetcher","attributes","displayName","value","genericErrorMessage","errorGenerator","timestamp","getTime","critical","uploadFile","file","isAsync","addEntry","errF","ev","target","e2","send","downloadWindowTitle","downloadWindowHtml","locationAssign","setExportEnabled","window","downloadWindow","document","title","body","innerHTML","enableExport","onbeforeunload","onabort","onerror","getPrevJobDetails","job","jobDetails","getInitialBoolValue","prevValue","defaultValue","optionPropType","PropTypes","exact","string","isRequired","DataElementIdScheme","arrayOf","dataElementIdSchemeOptions","dataTest","baseUrl","useConfig","loading","setLoading","schemes","setSchemes","setError","useEffect","validationText","options","StyledField","component","SingleSelectFieldFF","DatePicker","onChange","inputWidth","Field","ReactFinalForm","OPTIONAL_DATE_VALIDATOR","DATE_VALIDATOR","DATE_BEFORE_VALIDATOR","date1","date2","DATE_AFTER_VALIDATOR","Wrapper","input","meta","inputName","rest","DatePickerField","validator","validate","EventIdScheme","eventIdSchemeOptions","FileUpload","initialValue","required","helpText","accept","FormField","FileInputFieldFF","FormAlerts","alerts","warning","info","success","duration","children","className","styles","container","IdScheme","idSchemeOptions","err","dataElementAttributes","organisationUnitAttributes","sharedAttributes","reduce","shared","collection","attributeFoundIn","f","DRYRUN_HELPTEXT","ImportButtonStrip","dryRunDataTest","importDataTest","form","primary","onClick","change","dryRun","secondary","categoryTypesObj","acc","cur","MenuLabel","filename","files","ChipContainer","chips","JobOverview","setActiveTypes","setSelectedJob","useContext","allTasks","flat","createdAt","filteredTasks","includes","items","Menu","onChipClick","selected","active","JobSummary","showFileDetails","showJobDetails","to","pathname","Log","i","statsPropTypeObj","deleted","number","ignored","updated","imported","getClassName","c","s","SingleStatusTable","property","description","SingleSummary","importCount","conflicts","object","TypeCount","stats","Messages","messages","m","TypeReportSummary","overviewStats","extractStats","responseType","Summary","report","allStats","allMessages","forEach","klass","r","push","mainKlass","errorProperty","typeReportParse","typeReportSummary","overviewSummary","allSummaries","importSummaries","valueToString","File","v","join","Details","details","Header","header","taskDetails","Tags","tags","positive","neutral","negative","bold","MiniJobSummary","MoreOptions","noBottomMargin","initiallyVisible","hidden","setHidden","cx","chevronHidden","chevronVisible","defaultProps","OrgUnitIdScheme","orgUnitIdSchemeOptions","rootQuery","roots","SINGLE_ORG_VALIDATOR","selectedOrgUnits","SINGLE_EXACT_ORG_VALIDATOR","multiSelect","useDataQuery","wrapper","organisationUnits","ou","singleSelection","touched","pristine","OrgUnitTreeField","Page","desc","summaryTask","showFullSummaryTask","limitWidth","loadingEl","amount","limitedWidth","preBody","content","translucent","ProgramStages","selectedProgram","programStagesLoading","programStagesError","programStagesValidationText","programStages","program","setSelected","stages","setStages","onComplete","formattedList","useProgramStages","Label","prefix","prefixCritical","RadioGroup","checked","setValue","vertical","horizontal","o","help","RadioGroupField","ScrollToTop","history","useHistory","unlisten","listen","getElementsByClassName","scrollTo","propTypes","node","LABEL","VALIDATOR","formatOptions","formatNoCsvOptions","formatAdxPdfOptions","defaultFormatOption","IMPORT_LABEL","EXPORT_LABEL","typeToLabel","Format","availableFormats","SHORT_LABEL","HELPTEXT","FirstRowIsHeader","show","CheckboxFieldFF","ClassKey","classKeysLoading","classKeysError","classKeysValidationText","classKeys","setClassKeys","classData","useClassKeys","filterable","strategyOptions","defaultStrategyOption","DELETE_WARNING_TITLE","DELETE_WARNING","Strategy","PreheatCache","SkipAudit","SkipExistingCheck","identifierOptions","defaultIdentifierOption","Identifier","importReportModeOptions","defaultImportReportModeOption","ImportReportMode","preheatModeOptions","defaultPreheatModeOption","PreheatMode","importStrategyOptions","defaultImportStrategyOption","ImportStrategy","atomicModeOptions","defaultAtomicModeOption","AtomicMode","mergeModeOptions","defaultMergeModeOption","MergeMode","flushModeOptions","defaultFlushModeOption","FlushMode","inclusionStrategyOptions","defaultInclusionStrategyOption","InclusionStrategy","SkipSharing","SkipValidation","IsAsync","OrgUnitTree","orgValidator","composeValidators","hasValue","resourceTypes","FILTERLABEL","SELECTEDLABEL","ERRORMESSAGE","RESOURCETYPE","SINGLE_DATASET_VALIDATOR","selectedDataSets","SINGLE_EXACT_DATASET_VALIDATOR","DataSetPicker","dataSetValidator","ResourcePickerField","resourceType","errorMessage","listName","filterLabel","selectedLabel","SINGLE_PROGRAM_VALIDATOR","selectedPrograms","SINGLE_EXACT_PROGRAM_VALIDATOR","ProgramPicker","programValidator","maxWidth","autoSelectFirst","IncludeChildren","IncludeDeleted","compressionOptions","defaultCompressionOption","Compression","inclusionOptions","defaultInclusionOption","Inclusion","StartDate","EndDate","ExportButton","disabledLabel","disabled","marginBottom","programStage","props","setCheckedSchemas","SchemasField","checkedSchemas","EXCLUDE_SCHEMAS","Set","Schemas","excludeSchemas","checkedByDefault","objectTypeOptions","defaultObjectTypeOption","ObjectType","filled","initialFocus","Objects","objectType","objectsLoading","objectsError","objectsValidationText","objects","setObjects","useObjects","defaultDataElementIdSchemeOption","defaultEventIdSchemeOption","defaultIdSchemeOption","defaultOrgUnitIdSchemeOption","hasAuthorityToSkipAudit","authorities","orgUnitSelectionModeOptions","defaultOrgUnitSelectionModeOption","OrgUnitMode","teiTypeFilterOptions","defaultTEITypeFilterOption","TEITypeFilter","programStatusOptions","defaultProgramStatusOption","ProgramStatus","followUpStatusOptions","defaultFollowUpStatusOption","FollowUpStatus","ProgramStartDate","ProgramEndDate","SINGLE_TETYPE_VALIDATOR","selectedTypes","SINGLE_EXACT_TETYPE_VALIDATOR","TETypePicker","teTypeValidator","withActions","lastUpdatedFilterOptions","defaultLastUpdatedFilterOption","LastUpdatedFilter","LastUpdatedStartDate","LastUpdatedEndDate","durationRegex","formatHelpText","placeholder","DurationField","match","LastUpdatedDuration","useField","assignedUserModeOptions","defaultAssignedUserModeOption","FILTER_SHORT_LABEL","FILTER_LABEL","AssignedUserMode","filterInput","showOptions","userInput","userMode","showUserPicker","marginLeft","marginTop","UserPicker","SINGLE_USER_VALIDATOR","selectedUsers","SINGLE_EXACT_USER_VALIDATOR","userValidator","IncludeAllAttributes","Dates","FORM_ERROR","jobStartedMessage","values","classKey","Form","PAGE_NAME","PAGE_DESCRIPTION","PAGE_ICON","MetadataImport","metadataTasks","useLocation","prevJobDetails","initialValues","identifier","importReportMode","importStrategy","firstRowIsHeader","atomicMode","mergeMode","flushMode","inclusionStrategy","skipSharing","skipValidation","createInitialValues","progress","setShowFullSummaryTask","onSubmit","formErrors","onImport","subscription","submitError","render","handleSubmit","BasicOptions","nsSeparator","ValidationSummary","MetadataExport","exportEnabled","endpointExtension","schemaParams","downloadUrlParams","log","onExport","MetadataDependencyExport","endpoint","types","GMLImport","gmlTasks","EventImport","eventTasks","dataElementIdScheme","orgUnitIdScheme","eventIdScheme","idScheme","SchemeContainer","startDate","endDate","today","includeDeleted","inclusion","EventExport","DataImport","dataTasks","strategy","preheatCache","skipAudit","skipExistingCheck","WithAuthority","pred","fileExtension","includeChildren","valuesToParams","DataExport","selectedTETypes","ouMode","includeAllAttributes","assignedUserModeFilter","assignedUserMode","teiTypeFilter","programStatus","followUpStatus","programStartDate","programEndDate","lastUpdatedFilter","lastUpdatedStartDate","lastUpdatedEndDate","lastUpdatedDuration","minParams","attachment","assignedUser","trackedEntity","param","errors","TEIExport","showProgramFilters","showTEFilters","showLUDates","showLUDuration","TEIImport","teiTasks","preheatMode","HomeCard","titleText","bodyText","linkText","linkContainer","link","capitalizeFirstLetter","charAt","toUpperCase","slice","capitalizePages","pages","p","exportPages","DATA_EXPORT_PAGE_NAME","DATA_EXPORT_DESCRIPTION","EVENT_EXPORT_PAGE_NAME","EVENT_EXPORT_DESCRIPTION","METADATA_DEPENDENCY_EXPORT_PAGE_NAME","METADATA_DEPENDENCY_EXPORT_DESCRIPTION","METADATA_EXPORT_PAGE_NAME","METADATA_EXPORT_DESCRIPTION","TEI_EXPORT_PAGE_NAME","TEI_EXPORT_DESCRIPTION","importPages","DATA_IMPORT_PAGE_NAME","DATA_IMPORT_DESCRIPTION","EVENT_IMPORT_PAGE_NAME","EVENT_IMPORT_DESCRIPTION","GML_IMPORT_PAGE_NAME","GML_IMPORT_DESCRIPTION","METADATA_IMPORT_PAGE_NAME","METADATA_IMPORT_DESCRIPTION","TEI_IMPORT_PAGE_NAME","TEI_IMPORT_DESCRIPTION","Home","categoryTitle","grid","Router","from","findLabelByLowerCaseComparison","groupKey","schemas","foundLabel","schemaName","toLowerCase","isGroupKeyMatchingLowerCaseSchemaName","findKeyByCamelCaseComparison","indexOf","isGroupKeyInSchemaName","str","substr","replace","getSchemaGroups","groups","combinedGroups","groupName","group","other","combineSingleItemGroups","schema","groupSchemas","getGroupLabels","schemaGroups","entries","groupLabels","lowerCaseGroupKey","extractGroupLabelFromSchemas","pop","SchemaGroup","toggleSchema","formLabel","ind","schemaQuery","setSchemaGroups","schemaGroupLabels","setSchemaGroupLabels","schemaGroupOrder","setSchemaGroupOrder","formattedSchemas","collectionName","formatSchemas","excludedSchemas","has","filterOutExcludedSchemas","groupKeys","getGroupOrder","propagateCheckedSchemas","updatedSchemaGroups","onSelectGeneric","grAcc","showSchemas","formControl","schemaGroup","updatedGroup","MenuSectionHeader","sectionTitle","hideDivider","ImportMenuSectionHeader","ExportMenuSectionHeader","dataImportPage","code","eventImportPage","gmlImportPage","metadataImportPage","teiImportPage","dataExportPage","eventExportPage","metadataDependencyExportPage","metadataExportPage","teiExportPage","jobOverviewPage","SidebarItem","sidebarItem","sidebarItemActive","Sidebar","dataSetQuery","dataSets","programQuery","programs","TETypeQuery","trackedEntityTypes","users","ResourcePicker","withFilter","list","setList","resourceError","resourceName","resourceToQuery","showList","filterPlaceholder","rightHeader","useFormState","submitFailed","errorList","transformErrors","App","useUser","showApp","spacers","colors","Provider","sidebar"],"mappings":"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","file":"static/js/app.ba6b4622.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobOverview_container__1_oyo\",\"chips\":\"JobOverview_chips__19CJ-\",\"Menu\":\"JobOverview_Menu__2bTUp\",\"items\":\"JobOverview_items__2B1hs\",\"summary\":\"JobOverview_summary__13xs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Schemas_container__3H0XX\",\"group\":\"Schemas_group__QeGXq\",\"schema\":\"Schemas_schema__36IFP\",\"formLabel\":\"Schemas_formLabel__1geS0\",\"formControl\":\"Schemas_formControl__2ycln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2zgzu\",\"sidebar\":\"App_sidebar__10tAV\",\"content\":\"App_content__3I8HS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormField_container__3nG83\",\"label\":\"FormField_label__2Au43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ImportButtonStrip_container__12EQC\",\"dryRun\":\"ImportButtonStrip_dryRun__112kw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MenuLabel_container__ZTyjb\",\"status\":\"MenuLabel_status__1UTMj\",\"filename\":\"MenuLabel_filename__3uOu5\",\"date\":\"MenuLabel_date__1r_sY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobSummary_container__2Zh6N\",\"title\":\"JobSummary_title__sZ7p4\",\"taskDetails\":\"JobSummary_taskDetails__3aEqI\",\"tags\":\"JobSummary_tags__3qnhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Summary_container__3WKjf\",\"rest\":\"Summary_rest__GeByI\",\"typeReportSummary\":\"Summary_typeReportSummary__13eT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoreOptions_container__2zKqV\",\"header\":\"MoreOptions_header__120Ww\",\"label\":\"MoreOptions_label__1zKNe\",\"children\":\"MoreOptions_children__1atPW\",\"chevronHidden\":\"MoreOptions_chevronHidden__3r-Ts\",\"chevronVisible\":\"MoreOptions_chevronVisible__2pP_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"OrgUnitTreeField_wrapper__lSSwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page_container__3NEqL\",\"limitedWidth\":\"Page_limitedWidth__Y4JEb\",\"content\":\"Page_content__39Ql1\",\"preBody\":\"Page_preBody__3d4Jp\",\"header\":\"Page_header__13-dA\",\"title\":\"Page_title__rl9Ut\",\"desc\":\"Page_desc__2uKSe\",\"loading\":\"Page_loading__LRKhV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProgramStages_container__2q8As\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontal\":\"RadioGroup_horizontal__2D7__\",\"vertical\":\"RadioGroup_vertical__1Rhum\",\"children\":\"RadioGroup_children__2PRxP\",\"prefix\":\"RadioGroup_prefix__QEbnX\",\"prefixCritical\":\"RadioGroup_prefixCritical__2DUqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobOverview_container__F-fbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeCard_container__2Gy0p\",\"title\":\"HomeCard_title__3zY8x\",\"body\":\"HomeCard_body__3sjAV\",\"linkContainer\":\"HomeCard_linkContainer__3-ujF\",\"link\":\"HomeCard_link__ihXlJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Home_grid__3uUO2\",\"categoryTitle\":\"Home_categoryTitle__DSofY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3_2MB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Sidebar_Menu__3Gy0D\",\"sidebarItem\":\"Sidebar_sidebarItem__3GXPY\",\"sidebarItemActive\":\"Sidebar_sidebarItemActive__3d6JP\",\"jobOverview\":\"Sidebar_jobOverview__2MJ0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"MenuSectionHeader_sectionTitle__1o5Ai\",\"label\":\"MenuSectionHeader_label__30LLY\",\"icon\":\"MenuSectionHeader_icon__1i2rK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedLabel\":\"ResourcePicker_selectedLabel__2kKYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BasicOptions_container__3a0Mm\",\"label\":\"BasicOptions_label__3abuV\",\"header\":\"BasicOptions_header__2gFRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SchemeContainer_container__EmEkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StyledField_container__2GRLx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ValidationSummary_container__3VMqI\",\"errors\":\"ValidationSummary_errors__372yG\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport es_419Translations from './es_419/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport orTranslations from './or/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport roTranslations from './ro/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport siTranslations from './si/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('es_419', namespace, es_419Translations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('or', namespace, orTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ro', namespace, roTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('si', namespace, siTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nconst UserContext = React.createContext(undefined);\nexport { UserContext };","import React from 'react';\nconst TaskContext = React.createContext(undefined);\n\nconst getNewestTask = tasks => Object.keys(tasks).map(k => tasks[k]).sort((a, b) => a.created < b.created ? 1 : -1)[0];\n\nexport { TaskContext, getNewestTask };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst createStyle = (width, height) => ({\n  width: width || 24,\n  height: height || 24,\n  display: 'inline-block',\n  fill: 'currentColor',\n  color: 'currentColor',\n  userSelect: 'none'\n});\n\nexport const MetadataImportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadataimport\">\n        <path d=\"M14.039 8.968l-3.961-3.968h1.968s.991-3.178-2.985-5c6.191.222 6.972 5 6.972 5h1.967l-3.961 3.968zm6.461 5.575l-.342.195v1.717l.342-.195v-1.717zm-.844.481l-.35.199v1.717l.35-.199v-1.717zm.906-10.024l-1.306 1.55 1.62.919-6.859 3.698-8.86-5.138 4.436-2.685c-.234-.5-.626-.989-1.313-1.338l-5.124 2.978-3.156 5.487 2 1.106v5.445l12.25 6.978 9.75-5.551v-11.508l-3.438-1.941zm-16.624 2.688l7.897 4.54-1.192 2.091-7.872-4.605 1.167-2.026zm9.062 13.298l-9-5.126v-3.112l7.377 4.319 1.623-2.845v6.764zm9-3.7l-7 3.985v-8.361l7-3.773v8.149zm-4.907-.802l-.349.199v1.713l.349-.195v-1.717zm.584-.333l-.343.195v1.717l.343-.195v-1.717zm1.395-.794l-.343.195v1.717l.343-.195v-1.717zm-.574.327l-.344.196v1.717l.344-.196v-1.717z\" />\n    </svg>;\nexport const MetadataExportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadataexport\">\n        <path d=\"M13.904 9c-3.514-3.984-.1-7.598-.1-7.598l-1.393-1.389 5.589-.013v5.607l-1.372-1.391c0 .001-3.581.706-2.724 4.784zm5.752 6.024l-.35.199v1.717l.35-.199v-1.717zm.844-.481l-.342.195v1.717l.342-.195v-1.717zm-3.407 1.941l-.349.199v1.713l.349-.195v-1.717zm1.979-1.127l-.343.195v1.717l.343-.195v-1.717zm.949-10.673v2.295l.855.489-6.859 3.698-8.86-5.138 6.374-3.654-1.5-1.406-6.864 3.97-3.167 5.533 2 1.106v5.445l12.25 6.978 9.75-5.551v-11.508l-3.979-2.257zm-16.083 3.004l7.897 4.54-1.193 2.091-7.871-4.605 1.167-2.026zm9.062 13.298l-9-5.126v-3.112l5.632 3.297 1.746 1.022 1.002-1.757.62-1.088v6.764zm9-3.7l-7 3.985v-8.361l7-3.773v8.149zm-4.323-1.135l-.343.195v1.717l.343-.195v-1.717zm.821-.467l-.344.196v1.717l.344-.196v-1.717z\" />\n    </svg>;\nexport const MetadataDependencyExportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadatadependencyexport\">\n        <path d=\"M16.949 16.132h2.332c-1.092 1.728-3.605 3.638-6.281 3.852v-8.984h3v-2h-3v-1.103c0-2.39 2-2.619 2-4.897 0-1.654-1.346-3-3-3s-3 1.346-3 3c0 2.297 2 2.487 2 4.897v1.103h-3v2h3v9c-2.639-.18-5.133-2.053-6.281-3.868h2.332l-5.051-3.132v5.912l1.269-1.8c2.702 4.503 6.379 4.305 8.731 6.888 2.352-2.583 6.029-2.385 8.731-6.889l1.269 1.8v-5.911l-5.051 3.132zm-5.949-13.132c0-.551.449-1 1-1s1 .449 1 1-.448 1-1 1-1-.449-1-1z\" />\n    </svg>;\nexport const DataIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-data\">\n        <path d=\"M6.083 4c1.38 1.612 2.578 3 4.917 3h11v13h-20v-16h4.083zm.917-2h-7v20h24v-17h-13c-1.629 0-2.305-1.058-4-3z\" />\n    </svg>;\nexport const EventIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-event\">\n        <path d=\"M20 20h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm6 0h-4v4h4v-4zm-6-6h-4v4h4v-4zm16-8v22h-24v-22h3v1c0 1.103.897 2 2 2s2-.897 2-2v-1h10v1c0 1.103.897 2 2 2s2-.897 2-2v-1h3zm-2 6h-20v14h20v-14zm-2-7c0-.552-.447-1-1-1s-1 .448-1 1v2c0 .552.447 1 1 1s1-.448 1-1v-2zm-14 2c0 .552-.447 1-1 1s-1-.448-1-1v-2c0-.552.447-1 1-1s1 .448 1 1v2z\" />\n    </svg>;\nexport const GMLIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-gml\">\n        <path d=\"M13.144 8.171c-.035-.066.342-.102.409-.102.074.009-.196.452-.409.102zm-2.152-3.072l.108-.031c.064.055-.072.095-.051.136.086.155.021.248.008.332-.014.085-.104.048-.149.093-.053.066.258.075.262.085.011.033-.375.089-.304.171.096.136.824-.195.708-.176.225-.113.029-.125-.097-.19-.043-.215-.079-.547-.213-.68l.088-.102c-.206-.299-.36.362-.36.362zm13.008 6.901c0 6.627-5.373 12-12 12-6.628 0-12-5.373-12-12s5.372-12 12-12c6.627 0 12 5.373 12 12zm-8.31-5.371c-.006-.146-.19-.284-.382-.031-.135.174-.111.439-.184.557-.104.175.567.339.567.174.025-.277.732-.063.87-.025.248.069.643-.226.211-.381-.355-.13-.542-.269-.574-.523 0 0 .188-.176.106-.166-.218.027-.614.786-.614.395zm6.296 5.371c0-1.035-.177-2.08-.357-2.632-.058-.174-.189-.312-.359-.378-.256-.1-1.337.597-1.5.254-.107-.229-.324.146-.572.008-.12-.066-.454-.515-.605-.46-.309.111.474.964.688 1.076.201-.152.852-.465.992-.038.268.804-.737 1.685-1.251 2.149-.768.694-.624-.449-1.147-.852-.275-.211-.272-.66-.55-.815-.124-.07-.693-.725-.688-.813l-.017.166c-.094.071-.294-.268-.315-.321 0 .295.48.765.639 1.001.271.405.416.995.748 1.326.178.178.858.914 1.035.898.193-.017.803-.458.911-.433.644.152-1.516 3.205-1.721 3.583-.169.317.138 1.101.113 1.476-.029.433-.37.573-.693.809-.346.253-.265.745-.556.925-.517.318-.889 1.353-1.623 1.348-.216-.001-1.14.36-1.261.007-.094-.256-.22-.45-.353-.703-.13-.248-.015-.505-.173-.724-.109-.152-.475-.497-.508-.677-.002-.155.117-.626.28-.708.229-.117.044-.458.016-.656-.048-.354-.267-.646-.53-.851-.389-.299-.188-.537-.097-.964 0-.204-.124-.472-.398-.392-.564.164-.393-.44-.804-.413-.296.021-.538.209-.813.292-.346.104-.7-.082-1.042-.125-1.407-.178-1.866-1.786-1.499-2.946.037-.19-.114-.542-.048-.689.158-.352.48-.747.762-1.014.158-.15.361-.112.547-.229.287-.181.291-.553.572-.781.4-.325.946-.318 1.468-.388.278-.037 1.336-.266 1.503-.06 0 .038.191.604-.019.572.433.023 1.05.749 1.461.579.211-.088.134-.736.567-.423.262.188 1.436.272 1.68.069.15-.124.234-.93.052-1.021.116.115-.611.124-.679.098-.12-.044-.232.114-.425.025.116.055-.646-.354-.218-.667-.179.131-.346-.037-.539.107-.133.108.062.18-.128.274-.302.153-.53-.525-.644-.602-.116-.076-1.014-.706-.77-.295l.789.785c-.039.025-.207-.286-.207-.059.053-.135.02.579-.104.347-.055-.089.09-.139.006-.268 0-.085-.228-.168-.272-.226-.125-.155-.457-.497-.637-.579-.05-.023-.764.087-.824.11-.07.098-.13.201-.179.311-.148.055-.287.126-.419.214l-.157.353c-.068.061-.765.291-.769.3.029-.075-.487-.171-.453-.321.038-.165.213-.68.168-.868-.048-.197 1.074.284 1.146-.235.029-.225.046-.487-.313-.525.068.008.695-.246.799-.36.146-.168.481-.442.724-.442.284 0 .223-.413.354-.615.131.053-.07.376.087.507-.01-.103.445.057.489.033.104-.054.684-.022.594-.294-.1-.277.051-.195.181-.253-.022.009.34-.619.402-.413-.043-.212-.421.074-.553.063-.305-.024-.176-.52-.061-.665.089-.115-.243-.256-.247-.036-.006.329-.312.627-.241 1.064.108.659-.735-.159-.809-.114-.28.17-.509-.214-.364-.444.148-.235.505-.224.652-.476.104-.178.225-.385.385-.52.535-.449.683-.09 1.216-.041.521.048.176.124.104.324-.069.19.286.258.409.099.07-.092.229-.323.298-.494.089-.222.901-.197.334-.536-.374-.223-2.004-.672-3.096-.672-.236 0-.401.263-.581.412-.356.295-1.268.874-1.775.698-.519-.179-1.63.66-1.808.666-.065.004.004-.634.358-.681-.153.023 1.247-.707 1.209-.859-.046-.18-2.799.822-2.676 1.023.059.092.299.092-.016.294-.18.109-.372.801-.541.801-.505.221-.537-.435-1.099.409l-.894.36c-1.328 1.411-2.247 3.198-2.58 5.183-.013.079.334.226.379.28.112.134.112.712.167.901.138.478.479.744.74 1.179.154.259.41.914.329 1.186.108-.178 1.07.815 1.246 1.022.414.487.733 1.077.061 1.559-.217.156.33 1.129.048 1.368l-.361.093c-.356.219-.195.756.021.982 1.818 1.901 4.38 3.087 7.22 3.087 5.517 0 9.989-4.472 9.989-9.989zm-11.507-6.357c.125-.055.293-.053.311-.22.015-.148.044-.046.08-.1.035-.053-.067-.138-.11-.146-.064-.014-.108.069-.149.104l-.072.019-.068.087.008.048-.087.106c-.085.084.002.139.087.102z\" />\n    </svg>;\nexport const LogoIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-logo\">\n        <path d=\"M9 3L5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const PlusIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-plus\">\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const MinusIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-minus\">\n        <path d=\"M19 13H5v-2h14v2z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const TasksIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-tasks\">\n        <path d=\"M19 2h-4.2C14.4.8 13.3 0 12 0c-1.3 0-2.4.8-2.8 2H5C4 2 3 3 3 4v16c0 1 1 2 2 2h14c1 0 2-1 2-2V4c0-1-1-2-2-2zm-7 0c.6 0 1 .5 1 1s-.5 1-1 1-1-.5-1-1 .5-1 1-1zm7 18H5V4h2v3h10V4h2v16z\"></path>\n    </svg>;\nexport const TEIIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)}>\n        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n        <path d=\"M13 1l.001 3.062A8.004 8.004 0 0 1 19.938 11H23v2l-3.062.001a8.004 8.004 0 0 1-6.937 6.937L13 23h-2v-3.062a8.004 8.004 0 0 1-6.938-6.937L1 13v-2h3.062A8.004 8.004 0 0 1 11 4.062V1h2zm-1 9a2 2 0 1 0 0 4 2 2 0 0 0 0-4z\" />\n    </svg>;\nexport const ImportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)}>\n        <path d=\"m18 13c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm-9 0c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm9 2h-3v3h3zm-9 0h-3v3h3zm-1.38710056-12.29029539.09420734.08318861 3.50000002 3.5c.3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-3.50000002 3.50000002c-.39052429.3905243-1.02368927.3905243-1.41421356 0-.36048396-.360484-.3882135-.927715-.08318861-1.32000624l.08318861-.09420734 1.79210678-1.79289322h-5.085c-.55228475 0-1-.44771525-1-1 0-.51283584.38604019-.93550716.88337887-.99327227l.11662113-.00672773h5.085l-1.79210678-1.79289322c-.36048396-.36048396-.3882135-.92771502-.08318861-1.32000622l.08318861-.09420734c.36048396-.36048396.92771502-.3882135 1.32000622-.08318861zm10.38710056 1.29029539c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm0 2h-3v3h3z\" />\n    </svg>;\nexport const ExportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)}>\n        <path d=\"m18.6128994 12.7097046.0942074.0831886 3.5 3.5c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074-3.5 3.5c-.3905243.3905243-1.0236893.3905243-1.4142136 0-.3604839-.360484-.3882135-.927715-.0831886-1.3200062l.0831886-.0942074 1.7921068-1.7928932h-5.085c-.5522847 0-1-.4477153-1-1 0-.5128358.3860402-.9355072.8833789-.9932723l.1166211-.0067277h5.085l-1.7921068-1.7928932c-.3604839-.360484-.3882135-.927715-.0831886-1.3200062l.0831886-.0942074c.360484-.3604839.927715-.3882135 1.3200062-.0831886zm-9.6128994.2902954c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm0 2h-3v3h3zm0-11c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm9 0c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm-9 2h-3v3h3zm9 0h-3v3h3z\" />\n    </svg>;\nconst iconPropTypes = {\n  height: PropTypes.number,\n  width: PropTypes.number\n};\nDataIcon.propTypes = iconPropTypes;\nEventIcon.propTypes = iconPropTypes;\nGMLIcon.propTypes = iconPropTypes;\nLogoIcon.propTypes = iconPropTypes;\nMetadataDependencyExportIcon.propTypes = iconPropTypes;\nMetadataExportIcon.propTypes = iconPropTypes;\nMetadataImportIcon.propTypes = iconPropTypes;\nMinusIcon.propTypes = iconPropTypes;\nPlusIcon.propTypes = iconPropTypes;\nTasksIcon.propTypes = iconPropTypes;\nTEIIcon.propTypes = iconPropTypes;\nImportIcon.propTypes = iconPropTypes;\nExportIcon.propTypes = iconPropTypes;","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { DataIcon, EventIcon, GMLIcon, MetadataImportIcon, TEIIcon } from '../components/Icon/Icon';\nconst categoryTypes = [{\n  key: 'data',\n  importType: 'DATAVALUE_IMPORT',\n  icon: <DataIcon />,\n  label: i18n.t('Data')\n}, {\n  key: 'event',\n  importType: 'EVENT_IMPORT',\n  icon: <EventIcon />,\n  label: i18n.t('Event')\n}, {\n  key: 'gml',\n  importType: 'GML_IMPORT',\n  icon: <GMLIcon />,\n  label: i18n.t('GML')\n}, {\n  key: 'metadata',\n  importType: 'METADATA_IMPORT',\n  icon: <MetadataImportIcon />,\n  label: i18n.t('Metadata')\n}, {\n  key: 'tei',\n  importType: 'TEI_IMPORT',\n  icon: <TEIIcon />,\n  label: i18n.t('TEI')\n}];\nconst allCategories = categoryTypes.map(({\n  importType\n}) => importType);\nexport { categoryTypes, allCategories };","import { useState } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { allCategories } from '../utils/tasks';\nconst jobEventQuery = {\n  events: {\n    resource: 'system/tasks/',\n    id: ({\n      type,\n      taskId\n    }) => `${type}/${taskId}`\n  }\n};\nconst jobSummaryQuery = {\n  summary: {\n    resource: 'system/taskSummaries/',\n    id: ({\n      type,\n      taskId\n    }) => `${type}/${taskId}`\n  }\n};\nconst defaultTasks = {\n  data: {},\n  event: {},\n  gml: {},\n  metadata: {},\n  tei: {}\n};\nconst defaultJobOverview = {\n  activeTypes: allCategories,\n  selectedJob: undefined\n};\nconst defaultRefetchPeriod = 2000;\n\nconst createFetchEvents = (engine, setTasks, fetchSummary) => (type, id, task) => {\n  const fetchEvents = async () => {\n    if (task.completed) {\n      return;\n    }\n\n    const newTask = { ...task\n    };\n    const {\n      events,\n      error\n    } = await engine.query(jobEventQuery, {\n      variables: {\n        type: task.importType,\n        taskId: task.id\n      }\n    });\n\n    if (error) {\n      console.error('fetchEvents error: ', error);\n      return;\n    }\n\n    if (events && events.length) {\n      const newEvents = events.filter(e => !task.events.some(te => te.id == e.uid)).map(e => ({\n        id: e.uid,\n        level: e.level,\n        text: e.message,\n        date: new Date(e.time)\n      }));\n      const errorEvent = newEvents.find(e => e.level == 'ERROR');\n\n      if (errorEvent) {\n        newTask.error = errorEvent.text;\n      }\n\n      newTask.events = [...newTask.events, ...newEvents.reverse()];\n      newTask.completed = events[0].completed;\n    }\n\n    newTask.lastUpdated = new Date();\n\n    if (!newTask.completed) {\n      setTimeout(() => fetchEvents(type, id, newTask), defaultRefetchPeriod);\n    } else {\n      fetchSummary(type, id, newTask);\n    }\n\n    setTasks(tasks => ({ ...tasks,\n      [type]: { ...tasks[type],\n        [id]: newTask\n      }\n    }));\n  };\n\n  fetchEvents();\n};\n\nconst createFetchSummary = (engine, setTasks) => async (type, id, task) => {\n  const newTask = { ...task\n  };\n  const {\n    summary,\n    error\n  } = await engine.query(jobSummaryQuery, {\n    variables: {\n      type: task.importType,\n      taskId: task.id\n    }\n  });\n\n  if (error) {\n    console.error('fetchSummary error: ', error);\n    return;\n  }\n\n  if (summary && summary.status == 'ERROR' && !newTask.error) {\n    newTask.error = true;\n  }\n\n  newTask.summary = summary;\n  setTasks(tasks => ({ ...tasks,\n    [type]: { ...tasks[type],\n      [id]: newTask\n    }\n  }));\n};\n\nconst createAddTask = (setTasks, fetchEvents) => (type, id, entry) => {\n  setTasks(tasks => ({ ...tasks,\n    [type]: { ...tasks[type],\n      [id]: entry\n    }\n  }));\n  fetchEvents(type, id, entry);\n};\n\nconst createUpdateJobOverview = setJobOverview => val => {\n  setJobOverview(jobOverview => ({ ...jobOverview,\n    ...val\n  }));\n};\n\nconst useTasks = () => {\n  const engine = useDataEngine();\n  const [tasks, setTasks] = useState(defaultTasks);\n  const [jobOverview, setJobOverview] = useState(defaultJobOverview);\n  const fetchSummary = createFetchSummary(engine, setTasks);\n  const fetchEvents = createFetchEvents(engine, setTasks, fetchSummary);\n  const addTask = createAddTask(setTasks, fetchEvents);\n  const updateJobOverview = createUpdateJobOverview(setJobOverview);\n  return {\n    tasks,\n    addTask,\n    jobOverview,\n    updateJobOverview\n  };\n};\n\nexport { useTasks };","import { useDataQuery } from '@dhis2/app-runtime';\nconst userQuery = {\n  user: {\n    resource: 'me'\n  }\n};\n\nconst useUser = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(userQuery);\n\n  if (error) {\n    console.log('useUser error: ', error);\n  }\n\n  return {\n    loading,\n    error,\n    user: data && data.user\n  };\n};\n\nexport { useUser };","import { useState, useEffect } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataEngine } from '@dhis2/app-runtime';\nconst programStageQuery = {\n  data: {\n    resource: 'programs',\n    fields: 'id,displayName',\n    id: ({\n      id\n    }) => `${id}`,\n    params: {\n      fields: 'programStages[id,displayName]',\n      paging: 'false'\n    }\n  }\n};\nconst ALL_VALUE = 'ALL';\nconst ALL_LABEL = i18n.t('All program stages');\n\nconst useProgramStages = (program, setSelected) => {\n  const engine = useDataEngine();\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [stages, setStages] = useState([]);\n  useEffect(() => {\n    if (program) {\n      setLoading(true);\n      setSelected(undefined);\n    } else {\n      setLoading(false);\n    }\n\n    if (program) {\n      engine.query(programStageQuery, {\n        variables: {\n          id: program\n        },\n        onComplete: data => {\n          const list = data.data.programStages;\n          const formattedList = list.map(e => ({\n            value: e.id,\n            label: e.displayName\n          }));\n          setStages([{\n            value: ALL_VALUE,\n            label: ALL_LABEL\n          }, ...formattedList]);\n          setSelected(ALL_VALUE);\n          setLoading(false);\n        },\n        onError: error => {\n          setError(error);\n          console.error('useProgramStages error: ', error);\n        }\n      });\n    }\n  }, [program]);\n  const validationText = error && `${i18n.t('Something went wrong when loading the program stages')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    programStages: stages\n  };\n};\n\nexport { useProgramStages, ALL_VALUE };","import { useState } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataQuery } from '@dhis2/app-runtime';\nconst classKeyQuery = {\n  keys: {\n    resource: 'metadata/csvImportClasses'\n  }\n};\n\nconst useClassKeys = (setValue, prevValue) => {\n  const [classKeys, setClassKeys] = useState([]);\n  const {\n    loading,\n    error\n  } = useDataQuery(classKeyQuery, {\n    onComplete: classData => {\n      setClassKeys(classData.keys.map(k => ({\n        value: k,\n        label: k\n      })));\n\n      if (prevValue) {\n        setValue(prevValue);\n      } else {\n        setValue(classData.keys[0]);\n      }\n    },\n    onError: error => {\n      console.error('useClassKeys error: ', error);\n    }\n  });\n  const validationText = error && `${i18n.t('Something went wrong when loading the class keys')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    classKeys\n  };\n};\n\nexport { useClassKeys };","const mapping = {\n  json: 'application/json',\n  xml: 'application/xml',\n  csv: 'application/csv',\n  gml: 'application/xml',\n  adx: 'application/adx+xml',\n  pdf: 'application/pdf'\n};\nexport const getMimeType = format => mapping[format] || null;","import { getMimeType } from './mime';\n\nconst getUploadXHR = ({\n  url,\n  upload,\n  type,\n  onResponse,\n  onError,\n  setProgress,\n  format\n}) => {\n  const xhr = new XMLHttpRequest();\n  const contentType = getMimeType(format);\n  xhr.withCredentials = true;\n  xhr.open('POST', url, true);\n  xhr.setRequestHeader('Content-Type', contentType);\n  xhr.setRequestHeader('Content-Disposition', 'attachment filename=\"' + upload.name + '\"');\n  xhr.onreadystatechange = onReadyStateChange({\n    xhr,\n    type,\n    onResponse,\n    onError\n  });\n  xhr.upload.onprogress = onProgress(setProgress);\n  return xhr;\n};\n\nconst onReadyStateChange = ({\n  xhr,\n  type,\n  onResponse,\n  onError\n}) => {\n  return e => {\n    const status = Math.floor(xhr.status / 100);\n\n    if (xhr.readyState === 4 && status === 2) {\n      const idAndMsg = extractIdAndMessage(xhr);\n      onResponse({ ...idAndMsg,\n        type: type\n      });\n    } else if (xhr.readyState === 4) {\n      onError(e);\n    }\n  };\n};\n\nconst extractIdAndMessage = xhr => {\n  const data = JSON.parse(xhr.responseText);\n  const {\n    message,\n    status,\n    typeReports,\n    response\n  } = data;\n\n  if (status && status === 'ERROR') {\n    if (Array.isArray(typeReports) && Array.isArray(typeReports[0].objectReports) && Array.isArray(typeReports[0].objectReports[0].errorReports)) {\n      return {\n        error: true,\n        msg: {\n          id: 'init',\n          text: typeReports[0].objectReports[0].errorReports[0].message,\n          date: new Date()\n        },\n        typeReports: data\n      };\n    }\n  }\n\n  if (typeof response !== 'undefined') {\n    if (response.id) {\n      // the response will contain an `id` if the import was asynchronous\n      return {\n        id: response.id,\n        msg: {\n          id: 'init',\n          text: message,\n          date: new Date(response.created)\n        }\n      };\n    } else {\n      // the response will contain a report inside the response if the\n      // import was synchronous\n      return {\n        msg: {\n          id: 'completed',\n          text: 'Import:Done',\n          date: new Date()\n        },\n        typeReports: response\n      };\n    }\n  } // sync metadata import\n\n\n  if (typeReports) {\n    if (Array.isArray(typeReports) && typeReports[0] && Array.isArray(typeReports[0].objectReports) && typeReports[0].objectReports[0] && Array.isArray(typeReports[0].objectReports[0].errorReports)) {\n      return {\n        error: true,\n        msg: {\n          id: 'init',\n          text: typeReports[0].objectReports[0].errorReports[0].message,\n          date: new Date()\n        },\n        typeReports: data\n      };\n    }\n\n    return {\n      msg: {\n        id: 'completed',\n        text: 'Import:Done',\n        date: new Date()\n      },\n      typeReports: data\n    };\n  }\n\n  return {\n    error: true\n  };\n};\n\nconst onProgress = setProgress => evt => {\n  if (evt.lengthComputable) {\n    const percentComplete = parseInt(evt.loaded / evt.total * 100);\n    setProgress(Math.max(1, percentComplete));\n  }\n};\n\nexport { getUploadXHR };","import i18n from '@dhis2/d2-i18n';\nimport { getUploadXHR } from './xhr';\n\nconst trimString = (length, string) => string.length > length ? string.substring(0, length - 3) + '...' : string;\n\nconst pathToId = path => {\n  const pathSplit = path.split('/');\n  const orgId = pathSplit[pathSplit.length - 1];\n  return orgId;\n};\n\nconst jsDateToISO8601 = date => `${date.getFullYear().toString()}-${(date.getMonth() + 1).toString().padStart(2, 0)}-${date.getDate().toString().padStart(2, 0)}`;\n\nconst jsDateToString = date => `${jsDateToISO8601(date)} ${date.getHours().toString().padStart(2, 0)}:${date.getMinutes().toString().padStart(2, 0)}:${date.getSeconds().toString().padStart(2, 0)}\n`; // some parameters take the long version of the compression type\n\n\nconst compressionToName = compression => {\n  if (compression === 'gz') {\n    return 'gzip';\n  }\n\n  return compression;\n};\n\nconst fetchAttributes = async (apiBaseUrl, attribute) => {\n  const fetcher = url => fetch(url, {\n    credentials: 'include'\n  }).then(resp => {\n    if (resp.status >= 200 && resp.status < 300) {\n      return Promise.resolve(resp.json());\n    } else {\n      throw resp;\n    }\n  }).catch(resp => {\n    const error = new Error(resp.statusText || resp.status);\n    console.error(`fetchAttributes ${attribute} fetch error: `, error);\n    return Promise.reject(error);\n  });\n\n  const fields = 'id,displayName';\n  const filters = `unique:eq:true&filter=${attribute}:eq:true`;\n  const url = `${apiBaseUrl}attributes.json?paging=false&fields=${fields}&filter=${filters}`;\n  const json = await fetcher(url).catch(error => Promise.reject(error));\n  return json.attributes.map(({\n    id,\n    displayName\n  }) => ({\n    value: `ATTRIBUTE:${id}`,\n    label: displayName\n  }));\n};\n\nconst genericErrorMessage = i18n.t('An unknown error occurred. Please try again later');\n\nconst errorGenerator = setProgress => message => {\n  const timestamp = new Date().getTime();\n  setProgress(0);\n  return {\n    id: `xhr-${timestamp}`,\n    critical: true,\n    message: message ? message : genericErrorMessage\n  };\n};\n\nconst uploadFile = ({\n  url,\n  file,\n  format,\n  type,\n  isAsync,\n  setProgress,\n  addEntry\n}) => {\n  setProgress(1);\n  const errF = errorGenerator(setProgress);\n  return new Promise((resolve, reject) => {\n    try {\n      const xhr = getUploadXHR({\n        url,\n        upload: file,\n        type,\n        onResponse: ({\n          error,\n          id,\n          msg,\n          typeReports\n        }) => {\n          let entry;\n\n          if (!isAsync) {\n            // we are done\n            entry = {\n              id: new Date().getTime(),\n              level: 'INFO',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: true,\n              events: [msg],\n              summary: typeReports,\n              error: error,\n              importType: type\n            };\n          } else if (error && msg) {\n            // error but we have a message\n            entry = {\n              id: new Date().getTime(),\n              level: 'ERROR',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: true,\n              events: [msg],\n              summary: typeReports,\n              error: true,\n              importType: type\n            };\n          } else if (error) {\n            // error with no message\n            entry = {\n              id: new Date().getTime(),\n              level: 'ERROR',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: true,\n              summary: undefined,\n              error: true,\n              importType: type\n            };\n          } else {\n            // success\n            entry = {\n              id: id,\n              level: 'INFO',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: false,\n              events: [msg],\n              summary: undefined,\n              error: false,\n              importType: type\n            };\n          }\n\n          addEntry(entry.id, entry);\n\n          if (error) {\n            reject(errF(msg && msg.text));\n          }\n\n          setProgress(0);\n          resolve({});\n        },\n        onError: ev => {\n          let message;\n\n          try {\n            const response = JSON.parse(ev.target.response);\n            message = response.message;\n          } catch (e2) {\n            message = genericErrorMessage;\n          }\n\n          console.error('sendFile error', message);\n          reject(errF(message));\n        },\n        setProgress,\n        format\n      });\n      xhr.send(file);\n    } catch (e) {\n      // xhr.send can throw an exception\n      reject(errorGenerator(e));\n    }\n  });\n};\n\nconst downloadWindowTitle = i18n.t('Loading exported data');\nconst downloadWindowHtml = `\n<div style=\"height: 100%; width: 100%; display: flex; justify-content: center; align-items: center; color: rgb(33, 41, 52)\">\n    <p>${downloadWindowTitle}</p>\n</div>\n`; // call stub function if available\n\nconst locationAssign = (url, setExportEnabled) => {\n  if (window.locationAssign) {\n    window.locationAssign(url);\n  } else {\n    const downloadWindow = window.open(url, '_blank');\n    downloadWindow.document.title = downloadWindowTitle;\n    downloadWindow.document.body.innerHTML = downloadWindowHtml; // does not work in Chrome\n\n    const enableExport = () => setExportEnabled(true);\n\n    downloadWindow.onbeforeunload = enableExport;\n    downloadWindow.onabort = enableExport;\n    downloadWindow.onerror = enableExport;\n  }\n};\n\nconst getPrevJobDetails = (query, tasks) => {\n  if (!query || !query.id) return {};\n  const job = tasks[query.id];\n  if (!job) return {};\n  return job.jobDetails;\n};\n\nconst getInitialBoolValue = (prevValue, defaultValue) => {\n  if (prevValue === null || prevValue === undefined) {\n    return defaultValue;\n  }\n\n  return prevValue;\n};\n\nexport { fetchAttributes, getPrevJobDetails, getInitialBoolValue, locationAssign, jsDateToISO8601, jsDateToString, pathToId, trimString, uploadFile, compressionToName };","import PropTypes from 'prop-types';\nconst optionPropType = PropTypes.exact({\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n});\nconst optionsPropType = PropTypes.arrayOf(optionPropType);\nexport { optionPropType, optionsPropType };","import React, { useEffect, useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { StyledField } from '../index';\nimport { fetchAttributes } from '../../utils/helper';\nimport { optionsPropType } from '../../utils/options';\n\nconst DataElementIdScheme = ({\n  name,\n  label,\n  dataElementIdSchemeOptions,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    fetchAttributes(`${baseUrl}/api/`, 'dataElementAttribute').then(attributes => setSchemes(attributes)).catch(error => setError(error));\n    setLoading(false);\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional data element ID schemes')} : ${error.message}`;\n  const options = [...dataElementIdSchemeOptions, ...schemes];\n  return <StyledField component={SingleSelectFieldFF} name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} />;\n};\n\nDataElementIdScheme.propTypes = {\n  dataElementIdSchemeOptions: optionsPropType.isRequired,\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { DataElementIdScheme };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputField } from '@dhis2/ui';\nimport { jsDateToISO8601 } from '../../utils/helper';\n\nconst DatePicker = ({\n  name,\n  error,\n  label,\n  date,\n  onChange,\n  dataTest\n}) => {\n  const onChangeHelper = ({\n    value\n  }) => {\n    if (!value) {\n      onChange(value);\n    } else {\n      onChange(new Date(value));\n    }\n  };\n\n  const value = date && jsDateToISO8601(date);\n  return <InputField type=\"date\" name={name} value={value} label={label} onChange={onChangeHelper} inputWidth=\"200px\" error={!!error} validationText={error} dataTest={dataTest} />;\n};\n\nDatePicker.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]).isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\nexport { DatePicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { DatePicker } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst OPTIONAL_DATE_VALIDATOR = date => date ? DATE_VALIDATOR(date) : undefined;\n\nconst DATE_VALIDATOR = date => new Date(date) == 'Invalid Date' ? i18n.t('Invalid date') : undefined;\n\nconst DATE_BEFORE_VALIDATOR = (date1, date2) => date1 > date2 ? i18n.t('Start date must be before end date') : undefined;\n\nconst DATE_AFTER_VALIDATOR = (date2, date1) => date2 < date1 ? i18n.t('End date must be after start date') : undefined;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta: {\n    error\n  },\n  inputName,\n  ...rest\n}) => <DatePicker name={inputName} error={error} date={value} onChange={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst DatePickerField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} inputName={name} {...rest} />;\n};\n\nDatePickerField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { DatePickerField, DATE_VALIDATOR, DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR, OPTIONAL_DATE_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport { StyledField } from '../index';\nimport { optionsPropType } from '../../utils/options';\n\nconst EventIdScheme = ({\n  name,\n  label,\n  eventIdSchemeOptions,\n  dataTest\n}) => {\n  return <StyledField component={SingleSelectFieldFF} name={name} label={label} options={eventIdSchemeOptions} dataTest={dataTest} />;\n};\n\nEventIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  eventIdSchemeOptions: optionsPropType.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { EventIdScheme };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { ReactFinalForm, FileInputFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst SINGLE_FILE_VALIDATOR = files => !files || files.length == 0 ? i18n.t('Please select a file') : undefined;\n\nconst FileUpload = ({\n  initialValue,\n  required,\n  name,\n  label,\n  helpText,\n  accept = '*',\n  validator,\n  dataTest\n}) => {\n  return <FormField label={label} required={required} dataTest={dataTest}>\n            <Field component={FileInputFieldFF} name={name} accept={accept} required={required} initialValue={initialValue} validate={validator} dataTest={`${dataTest}-fileinput`} helpText={helpText} />\n        </FormField>;\n};\n\nFileUpload.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  accept: PropTypes.string,\n  helpText: PropTypes.string,\n  initialValue: PropTypes.instanceOf(File),\n  required: PropTypes.bool,\n  validator: PropTypes.func\n};\nexport { FileUpload, SINGLE_FILE_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AlertStack, AlertBar } from '@dhis2/ui';\n\nconst FormAlerts = ({\n  alerts,\n  dataTest\n}) => <AlertStack data-test={dataTest}>\n        {alerts && alerts.map(a => <AlertBar key={`alert-${a.id}`} warning={a.warning} info={a.info} critical={a.critical} success={a.success} duration={5000}>\n                    {a.message}\n                </AlertBar>)}\n    </AlertStack>;\n\nFormAlerts.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  alerts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    critical: PropTypes.bool,\n    info: PropTypes.bool,\n    warning: PropTypes.bool\n  }))\n};\nexport { FormAlerts };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FormField.module.css';\n\nconst FormField = ({\n  dataTest,\n  label,\n  required = false,\n  children\n}) => {\n  return <div className={styles.container} data-test={dataTest}>\n            <span className={styles.label}>\n                {label}\n                {required && <span> *</span>}\n            </span>\n            {children}\n        </div>;\n};\n\nFormField.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  required: PropTypes.bool\n};\nexport { FormField };","import React, { useState, useEffect } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { StyledField } from '../index';\nimport { optionsPropType } from '../../utils/options';\nimport { fetchAttributes } from '../../utils/helper';\n\nconst attributeFoundIn = (attribute, collection) => !!collection.find(({\n  value\n}) => value === attribute.value);\n\nconst IdScheme = ({\n  name,\n  label,\n  idSchemeOptions,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    const f = async () => {\n      let err;\n      const dataElementAttributes = await fetchAttributes(`${baseUrl}/api/`, 'dataElementAttribute').catch(error => err = error);\n      const organisationUnitAttributes = await fetchAttributes(`${baseUrl}/api/`, 'organisationUnitAttribute').catch(error => err = error);\n      setError(err);\n\n      if (!err) {\n        const sharedAttributes = dataElementAttributes.reduce((shared, attribute) => {\n          const foundInOrgUnits = attributeFoundIn(attribute, organisationUnitAttributes);\n          return foundInOrgUnits ? [...shared, attribute] : shared;\n        }, []);\n        setSchemes(sharedAttributes);\n      }\n\n      setLoading(false);\n    };\n\n    f();\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional ID schemes')} : ${error.message}`;\n  const options = [...idSchemeOptions, ...schemes];\n  return <StyledField component={SingleSelectFieldFF} name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} />;\n};\n\nIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  idSchemeOptions: optionsPropType.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { IdScheme };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, Help } from '@dhis2/ui';\nimport styles from './ImportButtonStrip.module.css';\nconst DRYRUN_HELPTEXT = i18n.t('A dry run tests the import settings without importing any data');\n\nconst ImportButtonStrip = ({\n  dryRunDataTest,\n  importDataTest,\n  form,\n  dataTest\n}) => {\n  return <div className={styles.container} data-test={dataTest}>\n            <ButtonStrip dataTest={`${dataTest}-button-strip`}>\n                <Button primary type=\"submit\" onClick={() => form.change('dryRun', true)} dataTest={dryRunDataTest} className={styles.dryRun}>\n                    {i18n.t('Start dry run')}\n                </Button>\n                <Button secondary type=\"submit\" onClick={() => form.change('dryRun', false)} dataTest={importDataTest}>\n                    {i18n.t('Start import')}\n                </Button>\n            </ButtonStrip>\n            <Help dataTest={`${dataTest}-help`}>{DRYRUN_HELPTEXT}</Help>\n        </div>;\n};\n\nImportButtonStrip.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  dryRunDataTest: PropTypes.string.isRequired,\n  form: PropTypes.object.isRequired,\n  importDataTest: PropTypes.string.isRequired\n};\nexport { ImportButtonStrip };","import { categoryTypes } from '../../utils/tasks';\nconst categoryTypesObj = categoryTypes.reduce((acc, cur) => {\n  acc[cur.importType] = cur;\n  return acc;\n}, {});\n\nconst jobToPath = job => ({\n  pathname: `/import/${categoryTypesObj[job.importType].key}`,\n  query: {\n    id: job.id\n  }\n});\n\nexport { categoryTypesObj, jobToPath };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './MenuLabel.module.css';\nimport { jsDateToString } from '../../../utils/helper';\n\nconst MenuLabel = ({\n  task\n}) => {\n  return <div className={styles.container} data-test={`job-overview-menu-label-${task.id}`}>\n            <div className={styles.status}>\n                <span className={styles.filename}>\n                    {task.jobDetails.files[0].name}\n                </span>\n                <br />\n                <span>\n                    {task.completed ? i18n.t('Completed') : i18n.t('In progress')}{' '}\n                </span>\n            </div>\n            <div className={styles.date}>{jsDateToString(task.created)}</div>\n        </div>;\n};\n\nMenuLabel.propTypes = {\n  task: PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    created: PropTypes.instanceOf(Date).isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    jobDetails: PropTypes.object.isRequired\n  }).isRequired\n};\nexport { MenuLabel };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './JobOverview.module.css';\n\nconst ChipContainer = ({\n  children\n}) => <div className={styles.chips} data-test=\"job-overview-chips\">\n        {children}\n    </div>;\n\nChipContainer.propTypes = {\n  children: PropTypes.node\n};\nexport { ChipContainer };","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Chip, Menu, MenuItem } from '@dhis2/ui';\nimport styles from './JobOverview.module.css';\nimport { TaskContext } from '../../contexts/';\nimport { categoryTypes } from '../../utils/tasks';\nimport { JobSummary } from '../index';\nimport { categoryTypesObj, jobToPath } from './helper';\nimport { MenuLabel } from './MenuLabel/MenuLabel';\nimport { ChipContainer } from './ChipContainer';\n\nconst JobOverview = ({\n  activeTypes,\n  setActiveTypes,\n  selectedJob,\n  setSelectedJob\n}) => {\n  const {\n    tasks\n  } = useContext(TaskContext);\n\n  const onChipClick = key => {\n    if (activeTypes.includes(key)) {\n      setActiveTypes([...activeTypes].filter(k => k != key));\n    } else {\n      setActiveTypes([...activeTypes, key]);\n    }\n  }; // all tasks sorted by type, createdAt (descending)\n\n\n  const allTasks = categoryTypes.map(({\n    key: type\n  }) => Object.keys(tasks[type]).map(id => tasks[type][id])).flat().sort((a, b) => {\n    if (a.importType > b.importType) return -1;\n    if (a.createdAt > b.createdAt) return -1;\n  });\n  const filteredTasks = allTasks.filter(t => activeTypes.includes(t.importType)); // set selected job to first job if\n  // first time user visits the job overview page\n\n  useEffect(() => {\n    if (selectedJob === undefined && allTasks.length > 0) {\n      setSelectedJob(allTasks[0]);\n    }\n  }, []);\n\n  if (allTasks.length === 0) {\n    return <p>{i18n.t('No jobs started yet.')}</p>;\n  }\n\n  return <div className={styles.container} data-test=\"job-overview-container\">\n            <div className={styles.items} data-test=\"job-overview-tasks\">\n                <Menu className={styles.Menu}>\n                    <ChipContainer>\n                        {categoryTypes.map(({\n            key,\n            importType,\n            label\n          }) => <Chip onClick={() => onChipClick(importType)} selected={activeTypes.includes(importType)} key={key} dataTest={`job-overview-chips-${key}`}>\n                                {label}\n                            </Chip>)}\n                    </ChipContainer>\n                    {filteredTasks.map(t => <MenuItem key={`job-overview-tasks-${t.id}`} active={selectedJob && selectedJob.id === t.id} label={<MenuLabel task={t} />} onClick={() => setSelectedJob(t)} icon={categoryTypesObj[t.importType].icon} />)}\n                </Menu>\n            </div>\n            <div className={styles.summary} data-test=\"job-overview-summary\">\n                {selectedJob && <>\n                        <JobSummary task={selectedJob} dataTest=\"job-summary-container\" showFileDetails={false} showJobDetails={true} />\n                        <Link to={jobToPath(selectedJob)}>\n                            <Button primary>{i18n.t('Recreate job')}</Button>\n                        </Link>\n                    </>}\n            </div>\n        </div>;\n};\n\nJobOverview.propTypes = {\n  activeTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setActiveTypes: PropTypes.func.isRequired,\n  setSelectedJob: PropTypes.func.isRequired,\n  selectedJob: PropTypes.object\n};\nexport { JobOverview, categoryTypes };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\nimport { jsDateToString } from '../../../utils/helper';\nimport { FormField } from '../../index';\n\nconst Log = ({\n  events\n}) => {\n  return <FormField label={`${i18n.t('Log')}`} dataTest=\"job-summary-log\" name=\"log\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Time')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Message')}</TableCellHead>\n                        <TableCellHead>{i18n.t('ID')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {(events || null) && events.map((e, i) => <TableRow key={`job-summary-log-${e.id}-${i}`}>\n                                <TableCell>{jsDateToString(e.date)}</TableCell>\n                                <TableCell>{e.text}</TableCell>\n                                <TableCell>{e.id}</TableCell>\n                            </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nconst eventPropType = PropTypes.shape({\n  date: PropTypes.instanceOf(Date).isRequired,\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n});\nLog.propTypes = {\n  events: PropTypes.arrayOf(eventPropType)\n};\nexport { Log };","import PropTypes from 'prop-types';\nconst statsPropTypeObj = {\n  deleted: PropTypes.number.isRequired,\n  ignored: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  updated: PropTypes.number.isRequired,\n  imported: PropTypes.number,\n  created: PropTypes.number\n};\nconst statsPropType = PropTypes.exact(statsPropTypeObj);\n\nconst getClassName = c => {\n  const s = c.split('.');\n  return s[s.length - 1];\n};\n\nconst typeReportParse = report => {\n  let allStats = [];\n  const allMessages = [];\n  Object.keys(report).forEach(i => {\n    const {\n      klass,\n      objectReports,\n      stats\n    } = report[i];\n    allStats = [...allStats, { ...stats,\n      type: getClassName(klass)\n    }];\n    objectReports && objectReports.forEach(r => {\n      const {\n        uid,\n        errorReports\n      } = r;\n      errorReports && errorReports.forEach(e => {\n        allMessages.push({\n          uid,\n          type: getClassName(e.mainKlass),\n          property: e.errorProperty,\n          message: e.message\n        });\n      });\n    });\n  });\n  return {\n    stats: allStats,\n    messages: allMessages\n  };\n};\n\nconst messagesPropType = PropTypes.arrayOf(PropTypes.exact({\n  uid: PropTypes.string,\n  type: PropTypes.string,\n  property: PropTypes.string,\n  message: PropTypes.string\n}));\nexport { typeReportParse, statsPropType, statsPropTypeObj, messagesPropType };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\n\nconst SingleStatusTable = ({\n  status,\n  description\n}) => <Table>\n        <TableHead>\n            <TableRowHead>\n                <TableCellHead>{i18n.t('Status')}</TableCellHead>\n                <TableCellHead>{i18n.t('Description')}</TableCellHead>\n            </TableRowHead>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>{status}</TableCell>\n                <TableCell>{description}</TableCell>\n            </TableRow>\n        </TableBody>\n    </Table>;\n\nSingleStatusTable.propTypes = {\n  description: PropTypes.string,\n  status: PropTypes.string\n};\nexport { SingleStatusTable };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\nimport { statsPropType } from '../helper';\nimport { SingleStatusTable } from '../SingleStatusTable/SingleStatusTable';\nimport { FormField } from '../../index';\n\nconst SingleSummary = ({\n  importCount,\n  status,\n  description,\n  conflicts,\n  id\n}) => <div>\n        <FormField label={id ? `${i18n.t('Summary')} #${id}` : i18n.t('Summary')} dataTest=\"job-summary-single-summary\" name=\"summary\">\n            <>\n                {status && <SingleStatusTable description={description} status={status} />}\n                <Table>\n                    <TableHead>\n                        <TableRowHead>\n                            <TableCellHead>{i18n.t('Created')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Deleted')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Ignored')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Updated')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Total')}</TableCellHead>\n                        </TableRowHead>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>{importCount.imported}</TableCell>\n                            <TableCell>{importCount.deleted}</TableCell>\n                            <TableCell>{importCount.ignored}</TableCell>\n                            <TableCell>{importCount.updated}</TableCell>\n                            <TableCell>{importCount.total}</TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </>\n        </FormField>\n        {conflicts && <FormField label={`${i18n.t('Conflicts')}`} dataTest=\"job-summary-conflicts\" name=\"conflicts\">\n                <Table>\n                    <TableHead>\n                        <TableRowHead>\n                            <TableCellHead>{i18n.t('Object')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Value')}</TableCellHead>\n                        </TableRowHead>\n                    </TableHead>\n                    <TableBody>\n                        {conflicts.map((c, i) => <TableRow key={`job-summary-conflicts-${c.object}-${i}`}>\n                                <TableCell>{c.object}</TableCell>\n                                <TableCell>{c.value}</TableCell>\n                            </TableRow>)}\n                    </TableBody>\n                </Table>\n            </FormField>}\n    </div>;\n\nSingleSummary.propTypes = {\n  importCount: statsPropType.isRequired,\n  conflicts: PropTypes.arrayOf(PropTypes.exact({\n    object: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })),\n  description: PropTypes.string,\n  id: PropTypes.string,\n  status: PropTypes.string\n};\nexport { SingleSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\nimport { statsPropTypeObj } from '../helper';\nimport { FormField } from '../../index';\n\nconst TypeCount = ({\n  stats\n}) => {\n  if (stats.length == 0) return null;\n  return <FormField label={`${i18n.t('Details by type')}`} dataTest=\"job-summary-type-count\" name=\"typeCount\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Type')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Created')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Deleted')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Ignored')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Updated')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Total')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {stats.map((s, i) => <TableRow key={`job-summary-type-count-${i}`}>\n                            <TableCell>{s.type}</TableCell>\n                            <TableCell>{s.created}</TableCell>\n                            <TableCell>{s.deleted}</TableCell>\n                            <TableCell>{s.ignored}</TableCell>\n                            <TableCell>{s.updated}</TableCell>\n                            <TableCell>{s.total}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nconst typeCountStatsPropTypeObj = { ...statsPropTypeObj,\n  type: PropTypes.string.isRequired\n};\nTypeCount.propTypes = {\n  stats: PropTypes.arrayOf(PropTypes.shape(typeCountStatsPropTypeObj)).isRequired\n};\nexport { TypeCount, typeCountStatsPropTypeObj };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\nimport { FormField } from '../../index';\nimport { messagesPropType } from '../helper';\n\nconst Messages = ({\n  messages\n}) => {\n  if (messages.length == 0) return null;\n  return <FormField label={`${i18n.t('Messages')}`} dataTest=\"job-summary-messages\" name=\"messages\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('UID')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Type')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Property')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Message')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {messages.map((m, i) => <TableRow key={`job-summary-messages-${i}`}>\n                            <TableCell>{m.uid}</TableCell>\n                            <TableCell>{m.type}</TableCell>\n                            <TableCell>{m.property}</TableCell>\n                            <TableCell>{m.message}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nMessages.propTypes = {\n  messages: messagesPropType.isRequired\n};\nexport { Messages, messagesPropType };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { statsPropType, messagesPropType } from '../helper';\nimport { SingleSummary } from '../SingleSummary/SingleSummary';\nimport { TypeCount, typeCountStatsPropTypeObj } from '../TypeCount/TypeCount';\nimport { Messages } from '../Messages/Messages';\n\nconst TypeReportSummary = ({\n  overviewStats,\n  stats,\n  messages\n}) => {\n  return <div>\n            <SingleSummary importCount={overviewStats} />\n            <TypeCount stats={stats} />\n            <Messages messages={messages} />\n        </div>;\n};\n\nTypeReportSummary.propTypes = {\n  messages: messagesPropType.isRequired,\n  overviewStats: statsPropType.isRequired,\n  stats: PropTypes.arrayOf(PropTypes.exact(typeCountStatsPropTypeObj)).isRequired\n};\nexport { TypeReportSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Summary.module.css';\nimport { typeReportParse } from '../helper';\nimport { SingleSummary } from '../SingleSummary/SingleSummary';\nimport { TypeReportSummary } from '../TypeReportSummary/TypeReportSummary';\n\nconst extractStats = summary => {\n  if (summary.responseType == 'ImportSummaries') {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    } = summary;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  } else if (summary.importCount) {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated\n    } = summary.importCount;\n    const total = imported + deleted + ignored + updated;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  } else if (summary.stats) {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    } = summary.stats;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  }\n};\n\nconst Summary = ({\n  summary\n}) => {\n  // gml import type object return\n  if (summary.typeReports) {\n    const overviewStats = { ...summary.stats,\n      imported: summary.stats.created\n    };\n    const {\n      stats,\n      messages\n    } = typeReportParse(summary.typeReports);\n    return <div data-test=\"job-summary-summary\" className={styles.typeReportSummary}>\n                <TypeReportSummary overviewStats={overviewStats} stats={stats} messages={messages} />\n            </div>;\n  }\n\n  const importCount = extractStats(summary);\n  const overviewSummary = <SingleSummary importCount={importCount} status={summary.status} description={summary.description} conflicts={summary.conflicts && (summary.conflicts.length || null) && summary.conflicts} />;\n  const allSummaries = summary.responseType == 'ImportSummaries' && summary.importSummaries ? summary.importSummaries.map((s, i) => {\n    const importCount = extractStats(s);\n    return <SingleSummary key={`single-summary-${i}`} importCount={importCount} status={s.status} description={s.description} conflicts={s.conflicts} id={`${i + 1}`} />;\n  }) : null;\n  return <div data-test=\"job-summary-summary\" className={styles.container}>\n            {overviewSummary}\n            <div className={styles.rest} data-test=\"job-summary-summary-rest\">\n                {allSummaries}\n            </div>\n        </div>;\n};\n\nSummary.propTypes = {\n  summary: PropTypes.object.isRequired\n};\nexport { Summary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\nimport { FormField } from '../../index';\n\nconst valueToString = value => {\n  if (value instanceof File) {\n    return value.name;\n  } else if (Array.isArray(value)) {\n    return value.map(v => valueToString(v)).join(',');\n  } else if (value instanceof Object) {\n    return value.label;\n  }\n\n  return `${value}`;\n};\n\nconst Details = ({\n  details\n}) => {\n  return <FormField label={`${i18n.t('Job details')}`} dataTest=\"job-summary-job-details\" name=\"details\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Key')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Value')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {Object.keys(details).map(key => <TableRow key={`job-summary-job-details-${key}`}>\n                            <TableCell>{key}</TableCell>\n                            <TableCell>{valueToString(details[key])}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nDetails.propTypes = {\n  details: PropTypes.object.isRequired\n};\nexport { Details };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, Tag } from '@dhis2/ui';\nimport styles from './JobSummary.module.css';\nimport { jsDateToString } from '../../utils/helper';\nimport { Log } from './Log/Log';\nimport { Summary } from './Summary/Summary';\nimport { Details } from './Details/Details';\n\nconst Header = ({\n  jobDetails,\n  task,\n  showFileDetails\n}) => <div className={styles.header}>\n        <h3 className={styles.title}>{`${i18n.t('Job summary')}`}</h3>\n        {showFileDetails && <span className={styles.taskDetails}>\n                <span data-test=\"job-summary-filename\">\n                    {jobDetails.files[0].name}\n                </span>{' '}\n                -{' '}\n                <span data-test=\"job-summary-date\">\n                    {jsDateToString(task.created)}{' '}\n                </span>\n            </span>}\n    </div>;\n\nHeader.propTypes = {\n  jobDetails: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired,\n  showFileDetails: PropTypes.bool\n};\n\nconst Tags = ({\n  jobDetails,\n  task\n}) => <div className={styles.tags} data-test=\"job-summary-tags\">\n        {task.completed ? <Tag positive>{i18n.t('Completed')}</Tag> : <Tag neutral>{i18n.t('In progress')}</Tag>}\n        {task.error && <Tag negative bold>\n                {i18n.t('Error')}\n            </Tag>}\n        {task.summary && task.summary.conflicts && (task.summary.conflicts.length || null) && <Tag negative>{i18n.t('Conflicts')}</Tag>}\n        {jobDetails.dryRun && <Tag neutral bold>\n                {i18n.t('Dry run')}\n            </Tag>}\n    </div>;\n\nTags.propTypes = {\n  jobDetails: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired\n};\n\nconst JobSummary = ({\n  task,\n  showFileDetails = true,\n  showJobDetails = false,\n  dataTest\n}) => {\n  if (!task) return null;\n  const {\n    jobDetails\n  } = task;\n  return <div className={styles.container} data-test={dataTest}>\n            <Header jobDetails={jobDetails} task={task} showFileDetails={showFileDetails} />\n            <Tags jobDetails={jobDetails} task={task} />\n            <Divider />\n            {task.completed && task.summary && <Summary summary={task.summary} />}\n            <div className={styles.events}>\n                <Log events={task.events} />\n            </div>\n            {showJobDetails && <div className={styles.jobDetails}>\n                    <Details details={task.jobDetails} />\n                </div>}\n        </div>;\n};\n\nJobSummary.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  showFileDetails: PropTypes.bool,\n  showJobDetails: PropTypes.bool,\n  task: PropTypes.object\n};\nexport { JobSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { JobSummary } from '../JobSummary';\nimport { MoreOptions } from '../../index';\n\nconst MiniJobSummary = ({\n  task,\n  dataTest\n}) => {\n  if (!task) return null;\n  return <div data-test={dataTest}>\n            <MoreOptions label={i18n.t('View summary of recently started import job')} dataTest={`${dataTest}-MoreOptions`} noBottomMargin>\n                <JobSummary task={task} dataTest={`${dataTest}-JobSummary`} />\n            </MoreOptions>\n        </div>;\n};\n\nMiniJobSummary.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  task: PropTypes.object\n};\nexport { MiniJobSummary };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider } from '@dhis2/ui';\nimport { ChevronRight } from '@dhis2/ui-icons';\nimport styles from './MoreOptions.module.css';\n\nconst MoreOptions = ({\n  children,\n  initiallyVisible,\n  noBottomMargin,\n  label = i18n.t('Advanced options'),\n  dataTest = 'interaction-more-options'\n}) => {\n  const [hidden, setHidden] = useState(!initiallyVisible);\n\n  const onToggle = () => {\n    setHidden(!hidden);\n  };\n\n  return <section className={cx({\n    [styles.container]: !noBottomMargin\n  })} data-test={dataTest}>\n            <header className={styles.header} onClick={onToggle} data-test={`${dataTest}-header`}>\n                <ChevronRight className={cx({\n        [styles.chevronHidden]: hidden,\n        [styles.chevronVisible]: !hidden\n      })} />\n                <h2 className={styles.label}>{label}</h2>\n            </header>\n            <Divider />\n            <div className={styles.children} data-test={`${dataTest}-children`}>\n                {!hidden && children}\n            </div>\n        </section>;\n};\n\nMoreOptions.defaultProps = {\n  initiallyVisible: false,\n  noBottomMargin: false\n};\nMoreOptions.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  dataTest: PropTypes.string,\n  initiallyVisible: PropTypes.bool,\n  label: PropTypes.string,\n  noBottomMargin: PropTypes.bool\n};\nexport { MoreOptions };","import React, { useEffect, useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { StyledField } from '../index';\nimport { fetchAttributes } from '../../utils/helper';\nimport { optionsPropType } from '../../utils/options';\n\nconst OrgUnitIdScheme = ({\n  name,\n  label,\n  orgUnitIdSchemeOptions,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    fetchAttributes(`${baseUrl}/api/`, 'organisationUnitAttribute').then(attributes => setSchemes(attributes)).catch(error => setError(error));\n    setLoading(false);\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional organisation unit ID schemes')} : ${error.message}`;\n  const options = [...orgUnitIdSchemeOptions, ...schemes];\n  return <StyledField component={SingleSelectFieldFF} name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} />;\n};\n\nOrgUnitIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  orgUnitIdSchemeOptions: optionsPropType.isRequired\n};\nexport { OrgUnitIdScheme };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { CircularLoader, Help } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, OrganisationUnitTree } from '@dhis2/ui';\nimport styles from './OrgUnitTreeField.module.css';\nconst {\n  Field\n} = ReactFinalForm;\nconst rootQuery = {\n  roots: {\n    resource: 'organisationUnits',\n    params: {\n      filter: 'level:eq:1',\n      fields: 'id',\n      paging: 'false'\n    }\n  }\n};\n\nconst SINGLE_ORG_VALIDATOR = selectedOrgUnits => selectedOrgUnits.length == 0 ? i18n.t('At least one organisation unit must be selected') : undefined;\n\nconst SINGLE_EXACT_ORG_VALIDATOR = selectedOrgUnits => selectedOrgUnits.length != 1 ? i18n.t('One organisation unit must be selected') : undefined;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  multiSelect,\n  ...rest\n}) => {\n  const {\n    loading,\n    data,\n    error\n  } = useDataQuery(rootQuery);\n  return <>\n            {loading && <CircularLoader />}\n            {error && <Help error>\n                    {i18n.t('Something went wrong when loading the organisation units!')}\n                </Help>}\n            {data && <div className={styles.wrapper}>\n                    <OrganisationUnitTree onChange={({\n        selected\n      }) => {\n        onChange(selected);\n      }} selected={value} roots={data.roots.organisationUnits.map(ou => ou.id)} {...rest} singleSelection={!multiSelect} />\n                </div>}\n\n            {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n        </>;\n};\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired,\n  multiSelect: PropTypes.bool\n};\n\nconst OrgUnitTreeField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nOrgUnitTreeField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { OrgUnitTreeField, SINGLE_ORG_VALIDATOR, SINGLE_EXACT_ORG_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Card, CenteredContent, CircularLoader, ComponentCover, LinearLoader } from '@dhis2/ui';\nimport styles from './Page.module.css';\nimport { JobSummary, MiniJobSummary } from '../index';\n\nconst Page = ({\n  title,\n  desc,\n  summaryTask,\n  showFullSummaryTask = false,\n  limitWidth = true,\n  children,\n  loading = false,\n  dataTest\n}) => {\n  const loadingEl = typeof loading == 'number' ? <LinearLoader amount={loading} /> : <CircularLoader />;\n  return <div className={cx(styles.container, {\n    [styles.limitedWidth]: limitWidth\n  })} data-test={dataTest}>\n            <header className={styles.header}>\n                <h1 className={styles.title}>{title}</h1>\n                <p className={styles.desc}>{desc}</p>\n            </header>\n            {summaryTask && <Card className={styles.preBody}>\n                    {showFullSummaryTask ? <JobSummary task={summaryTask} dataTest=\"job-summary-container\" /> : <MiniJobSummary task={summaryTask} dataTest=\"mini-job-summary-container\" />}\n                </Card>}\n            <div className={styles.content}>\n                {!!loading && <div className={styles.loading}>\n                        <ComponentCover translucent>\n                            <CenteredContent>{loadingEl}</CenteredContent>\n                        </ComponentCover>\n                    </div>}\n                {children}\n            </div>\n        </div>;\n};\n\nPage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  dataTest: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  limitWidth: PropTypes.bool,\n  loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  showFullSummaryTask: PropTypes.bool,\n  summaryTask: PropTypes.object\n};\nexport { Page };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport styles from './ProgramStages.module.css';\nimport { useProgramStages } from '../../hooks/index';\nimport { StyledField } from '../index';\n\nconst SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR = programStage => !programStage ? i18n.t('One program stage must be selected') : undefined;\n\nconst ProgramStages = ({\n  name,\n  label,\n  selectedProgram,\n  form,\n  validator,\n  dataTest\n}) => {\n  const setProgramStage = val => form.change(name, val);\n\n  const {\n    loading: programStagesLoading,\n    error: programStagesError,\n    validationText: programStagesValidationText,\n    programStages\n  } = useProgramStages(selectedProgram, setProgramStage);\n  return <div className={styles.container}>\n            <StyledField component={SingleSelectFieldFF} name={name} loading={programStagesLoading} label={label} validate={validator} dataTest={dataTest} options={programStages} validationText={programStagesValidationText} error={!!programStagesError} />\n        </div>;\n};\n\nProgramStages.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  form: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  selectedProgram: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { ProgramStages, SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Help, Radio } from '@dhis2/ui';\nimport { FormField } from '../index';\nimport styles from './RadioGroup.module.css';\n\nconst Label = ({\n  label,\n  prefix,\n  type\n}) => {\n  if (!prefix) {\n    return label;\n  }\n\n  return <span>\n            <span className={cx(styles.prefix, {\n      [styles.prefixCritical]: type === 'critical'\n    })}>\n                {prefix}\n            </span>\n            {label}\n        </span>;\n};\n\nLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  prefix: PropTypes.string,\n  type: PropTypes.oneOf(['critical'])\n};\n\nconst RadioGroup = ({\n  name,\n  label,\n  options,\n  checked,\n  setValue,\n  vertical,\n  helpText,\n  children,\n  dataTest\n}) => {\n  return <FormField label={label} dataTest={dataTest} name={name}>\n            <div className={cx({\n      [styles.vertical]: vertical,\n      [styles.horizontal]: !vertical\n    })}>\n                {options.map(o => <div key={o.value}>\n                        <Radio name={name} value={o.value} label={<Label label={o.label} prefix={o.prefix} type={o.type} />} checked={o.value == checked} onChange={() => setValue(o.value)} dataTest={`${dataTest}-${o.value}`} />\n                        {o.help && <Help>{o.help}</Help>}\n                    </div>)}\n            </div>\n            {helpText && <Help>{helpText}</Help>}\n            {children && <div className={styles.children}>{children}</div>}\n        </FormField>;\n};\n\nRadioGroup.propTypes = {\n  checked: PropTypes.string.isRequired,\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    prefix: PropTypes.string,\n    type: PropTypes.oneOf(['critical'])\n  })).isRequired,\n  setValue: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  helpText: PropTypes.string,\n  vertical: PropTypes.bool\n};\nexport { RadioGroup };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { RadioGroup } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta: {\n    error\n  },\n  inputName,\n  ...rest\n}) => <RadioGroup name={inputName} error={error} checked={value} setValue={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst RadioGroupField = ({\n  name,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} inputName={name} {...rest} />;\n};\n\nRadioGroupField.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport { RadioGroupField };","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nexport const ScrollToTop = ({\n  children\n}) => {\n  const history = useHistory();\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      document.getElementsByClassName('app-shell-app')[0]?.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, []);\n  return <>{children}</>;\n};\nScrollToTop.propTypes = {\n  children: PropTypes.node\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { FileUpload as FileUploadGeneric } from '../index';\nimport { SINGLE_FILE_VALIDATOR } from '../FileUpload/FileUpload';\nconst NAME = 'files';\nconst LABEL = i18n.t('Select a file to import values from');\nconst DATATEST = 'input-file-upload';\nconst VALIDATOR = SINGLE_FILE_VALIDATOR;\n\nconst FileUpload = ({\n  helpText\n}) => <FileUploadGeneric name={NAME} label={LABEL} validator={VALIDATOR} dataTest={DATATEST} helpText={helpText} />;\n\nFileUpload.propTypes = {\n  helpText: PropTypes.string\n};\nexport { FileUpload };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ImportButtonStrip as ImportButtonStripGeneric } from '../index';\nconst DRYRUNDATATEST = 'input-dry-run';\nconst IMPORTDATATEST = 'input-import-submit';\nconst DATATEST = 'input-import-button-strip';\n\nconst ImportButtonStrip = ({\n  form\n}) => <ImportButtonStripGeneric form={form} dryRunDataTest={DRYRUNDATATEST} importDataTest={IMPORTDATATEST} dataTest={DATATEST} />;\n\nImportButtonStrip.propTypes = {\n  form: PropTypes.object.isRequired\n};\nexport { ImportButtonStrip };","import React from 'react';\nimport { FormAlerts as FormAlertsGeneric } from '../index';\nconst DATATEST = 'input-form-alerts';\n\nconst FormAlerts = ({\n  alerts\n}) => <FormAlertsGeneric alerts={alerts} dataTest={DATATEST} />;\n\nFormAlerts.propTypes = {\n  alerts: FormAlertsGeneric.propTypes.alerts\n};\nexport { FormAlerts };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nimport { optionsPropType } from '../../utils/options';\nconst formatOptions = [{\n  value: 'json',\n  label: i18n.t('JSON')\n}, {\n  value: 'csv',\n  label: i18n.t('CSV')\n}, {\n  value: 'xml',\n  label: i18n.t('XML')\n}];\nconst formatNoCsvOptions = formatOptions.filter(f => f.value != 'csv');\nconst formatAdxOptions = [...formatOptions, {\n  value: 'adx',\n  label: i18n.t('ADX')\n}];\nconst formatAdxPdfOptions = [...formatAdxOptions, {\n  value: 'pdf',\n  label: i18n.t('PDF')\n}];\nconst formatJsonpOptions = [...formatOptions, {\n  value: 'jsonp',\n  label: i18n.t('JSONP')\n}];\nconst defaultFormatOption = formatOptions[0].value;\nconst NAME = 'format';\nconst DATATEST = 'input-format';\nconst IMPORT_LABEL = i18n.t('What format is the data to import?');\nconst EXPORT_LABEL = i18n.t('What format should the data be exported as?');\n\nconst typeToLabel = type => type === 'import' ? IMPORT_LABEL : EXPORT_LABEL;\n\nconst Format = ({\n  availableFormats,\n  type\n}) => <RadioGroupField name={NAME} label={typeToLabel(type)} options={availableFormats} dataTest={DATATEST} />;\n\nFormat.propTypes = {\n  availableFormats: optionsPropType.isRequired,\n  type: PropTypes.oneOf(['import', 'export'])\n};\nexport { Format, formatOptions, formatNoCsvOptions, formatAdxOptions, formatAdxPdfOptions, formatJsonpOptions, defaultFormatOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultFirstRowIsHeaderOption = false;\nconst NAME = 'firstRowIsHeader';\nconst DATATEST = 'input-first-row-is-header';\nconst SHORT_LABEL = i18n.t('Is the first row a header row?');\nconst LABEL = i18n.t('First row is header');\nconst HELPTEXT = i18n.t('A header row will be ignored during import');\n\nconst FirstRowIsHeader = ({\n  show\n}) => show && <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n            <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n        </FormField>;\n\nFirstRowIsHeader.propTypes = {\n  show: PropTypes.bool.isRequired\n};\nexport { FirstRowIsHeader, defaultFirstRowIsHeaderOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport { StyledField } from '../index';\nimport { useClassKeys } from '../../hooks/index';\nconst NAME = 'classKey';\nconst LABEL = i18n.t('Class key');\nconst DATATEST = 'input-class-key';\n\nconst ClassKey = ({\n  form,\n  prevValue,\n  show = true\n}) => {\n  const setClassKey = val => form.change(NAME, val);\n\n  const {\n    loading: classKeysLoading,\n    error: classKeysError,\n    validationText: classKeysValidationText,\n    classKeys\n  } = useClassKeys(setClassKey, prevValue);\n  return show && <StyledField component={SingleSelectFieldFF} name={NAME} label={LABEL} options={classKeys} loading={classKeysLoading} dataTest={DATATEST} validationText={classKeysValidationText} error={!!classKeysError} filterable />;\n};\n\nClassKey.propTypes = {\n  form: PropTypes.object.isRequired,\n  prevValue: PropTypes.string,\n  show: PropTypes.bool\n};\nexport { ClassKey };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox } from '@dhis2/ui';\nimport { RadioGroupField } from '../index';\nconst strategyOptions = [{\n  value: 'NEW_AND_UPDATES',\n  label: i18n.t('Import new values and update existing'),\n  prefix: i18n.t('Merge')\n}, {\n  value: 'NEW',\n  label: i18n.t('Import new values only'),\n  prefix: i18n.t('Append')\n}, {\n  value: 'UPDATES',\n  label: i18n.t('Only update existing values, ignore new values'),\n  prefix: i18n.t('Update')\n}, {\n  value: 'DELETE',\n  label: i18n.t('Remove values included in uploaded file'),\n  prefix: i18n.t('Delete'),\n  type: 'critical'\n}];\nconst defaultStrategyOption = strategyOptions[0].value;\nconst DELETE_WARNING_TITLE = i18n.t('Data will be deleted');\nconst DELETE_WARNING = i18n.t('Values in the uploaded file will be deleted from the database. Make sure this is the correct action; it cannot be undone.');\nconst NAME = 'strategy';\nconst DATATEST = 'input-strategy';\nconst LABEL = i18n.t('Strategy');\n\nconst Strategy = ({\n  value\n}) => <RadioGroupField name={NAME} label={LABEL} options={strategyOptions} dataTest={DATATEST} vertical>\n        {value === 'DELETE' && <NoticeBox title={DELETE_WARNING_TITLE} warning>\n                {DELETE_WARNING}\n            </NoticeBox>}\n    </RadioGroupField>;\n\nStrategy.propTypes = {\n  value: PropTypes.string.isRequired\n};\nexport { Strategy, defaultStrategyOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultPreheatCacheOption = false;\nconst NAME = 'preheatCache';\nconst DATATEST = 'input-preheat-cache';\nconst SHORT_LABEL = i18n.t('Preheat cache');\nconst LABEL = i18n.t('Preheat cache to make large imports faster');\nconst HELPTEXT = i18n.t('Large imports will be processed faster but will consume more resources');\n\nconst PreheatCache = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { PreheatCache, defaultPreheatCacheOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultSkipAuditOption = false;\nconst NAME = 'skipAudit';\nconst DATATEST = 'input-has-authority-to-skip-audit';\nconst SHORT_LABEL = i18n.t('Skip audit');\nconst LABEL = i18n.t('Skip audit, meaning audit values will not be generated');\nconst HELPTEXT = i18n.t('Improves performance at the cost of ability to audit changes');\n\nconst SkipAudit = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { SkipAudit, defaultSkipAuditOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultSkipExistingCheckOption = false;\nconst NAME = 'skipExistingCheck';\nconst DATATEST = 'input-skip-exisiting-check';\nconst SHORT_LABEL = i18n.t('Skip exisiting check');\nconst LABEL = i18n.t('Skip checks for existing data values');\nconst HELPTEXT = i18n.t('Improves performance and should only be used for empty databases or when the data values to import do not exist already');\n\nconst SkipExistingCheck = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { SkipExistingCheck, defaultSkipExistingCheckOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst identifierOptions = [{\n  value: 'UID',\n  label: i18n.t('UID')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}, {\n  value: 'AUTO',\n  label: i18n.t('Auto')\n}];\nconst defaultIdentifierOption = identifierOptions[0].value;\nconst NAME = 'identifier';\nconst DATATEST = 'input-identifier';\nconst LABEL = i18n.t('Identifier');\nconst HELPTEXT = i18n.t('Identifier scheme to use for reference matching');\n\nconst Identifier = () => <RadioGroupField name={NAME} label={LABEL} options={identifierOptions} helpText={HELPTEXT} dataTest={DATATEST} />;\n\nexport { Identifier, defaultIdentifierOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst importReportModeOptions = [{\n  value: 'ERRORS',\n  label: i18n.t('Only include reports for objects that have errors'),\n  prefix: i18n.t('Errors')\n}, {\n  value: 'FULL',\n  label: i18n.t('Reports for all objects imported'),\n  prefix: i18n.t('Full')\n}, {\n  value: 'DEBUG',\n  label: i18n.t('Reports for all objects imported along with their names (if available)'),\n  prefix: i18n.t('Debug')\n}];\nconst defaultImportReportModeOption = importReportModeOptions[0].value;\nconst NAME = 'importReportMode';\nconst DATATEST = 'input-import-report-mode';\nconst LABEL = i18n.t('Import report mode');\nconst HELPTEXT = i18n.t('Controls what should be reported after the import is done');\n\nconst ImportReportMode = () => <RadioGroupField name={NAME} label={LABEL} options={importReportModeOptions} helpText={HELPTEXT} dataTest={DATATEST} vertical />;\n\nexport { ImportReportMode, defaultImportReportModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst preheatModeOptions = [{\n  value: 'REFERENCE',\n  label: i18n.t('Intelligent scan (reference)')\n}, {\n  value: 'ALL',\n  label: i18n.t('All')\n}, {\n  value: 'NONE',\n  label: i18n.t('None')\n}];\nconst defaultPreheatModeOption = preheatModeOptions[0].value;\nconst NAME = 'preheatMode';\nconst DATATEST = 'input-preheat-mode';\nconst LABEL = i18n.t('Preheat mode');\nconst HELPTEXT = i18n.t('Controls the level of preheating that should be done');\n\nconst PreheatMode = () => <RadioGroupField name={NAME} label={LABEL} options={preheatModeOptions} helpText={HELPTEXT} dataTest={DATATEST} />;\n\nexport { PreheatMode, defaultPreheatModeOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox } from '@dhis2/ui';\nimport { RadioGroupField } from '../index';\nconst importStrategyOptions = [{\n  value: 'CREATE_AND_UPDATE',\n  label: i18n.t('Import new values and update existing'),\n  prefix: i18n.t('Merge')\n}, {\n  value: 'CREATE',\n  label: i18n.t('Import new values only'),\n  prefix: i18n.t('Append')\n}, {\n  value: 'UPDATES',\n  label: i18n.t('Only update existing values, ignore new values'),\n  prefix: i18n.t('Update')\n}, {\n  value: 'DELETE',\n  label: i18n.t('Remove values included in uploaded file'),\n  prefix: i18n.t('Delete'),\n  type: 'critical'\n}];\nconst defaultImportStrategyOption = importStrategyOptions[0].value;\nconst DELETE_WARNING_TITLE = i18n.t('Data will be deleted');\nconst DELETE_WARNING = i18n.t('Values in the uploaded file will be deleted from the database. Make sure this is the correct action; it cannot be undone.');\nconst NAME = 'importStrategy';\nconst DATATEST = 'input-import-strategy';\nconst LABEL = i18n.t('Import strategy');\n\nconst ImportStrategy = ({\n  value\n}) => <RadioGroupField name={NAME} label={LABEL} options={importStrategyOptions} dataTest={DATATEST} vertical>\n        {value === 'DELETE' && <NoticeBox title={DELETE_WARNING_TITLE} warning>\n                {DELETE_WARNING}\n            </NoticeBox>}\n    </RadioGroupField>;\n\nImportStrategy.propTypes = {\n  value: PropTypes.string.isRequired\n};\nexport { ImportStrategy, defaultImportStrategyOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst atomicModeOptions = [{\n  value: 'ALL',\n  label: i18n.t('Do not import')\n}, {\n  value: 'NONE',\n  label: i18n.t('Import')\n}];\nconst defaultAtomicModeOption = atomicModeOptions[0].value;\nconst NAME = 'atomicMode';\nconst DATATEST = 'input-atomic-mode';\nconst LABEL = i18n.t('Atomic mode');\nconst HELPTEXT = i18n.t('Whether to import objects even if some references do not exist');\n\nconst AtomicMode = () => <RadioGroupField name={NAME} label={LABEL} options={atomicModeOptions} helpText={HELPTEXT} dataTest={DATATEST} />;\n\nexport { AtomicMode, defaultAtomicModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst mergeModeOptions = [{\n  value: 'MERGE',\n  label: i18n.t('Only overwrite the old property if the new property value is not-null'),\n  prefix: i18n.t('Merge')\n}, {\n  value: 'REPLACE',\n  label: i18n.t('Overwrite regardless of whether the new property value is null'),\n  prefix: i18n.t('Replace')\n}];\nconst defaultMergeModeOption = mergeModeOptions[0].value;\nconst NAME = 'mergeMode';\nconst DATATEST = 'input-merge-mode';\nconst LABEL = i18n.t('Merge mode');\nconst HELPTEXT = i18n.t('Strategy to take when merging two objects');\n\nconst MergeMode = () => <RadioGroupField name={NAME} label={LABEL} options={mergeModeOptions} helpText={HELPTEXT} dataTest={DATATEST} vertical />;\n\nexport { MergeMode, defaultMergeModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst flushModeOptions = [{\n  value: 'AUTO',\n  label: i18n.t('Auto (recommended)')\n}, {\n  value: 'OBJECT',\n  label: i18n.t('Object (debugging purposes)')\n}];\nconst defaultFlushModeOption = flushModeOptions[0].value;\nconst NAME = 'flushMode';\nconst DATATEST = 'input-flush-mode';\nconst LABEL = i18n.t('Flush mode');\nconst HELPTEXT = i18n.t('Controls when to flush the internal cache');\n\nconst FlushMode = () => <RadioGroupField name={NAME} label={LABEL} options={flushModeOptions} helpText={HELPTEXT} dataTest={DATATEST} />;\n\nexport { FlushMode, defaultFlushModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst inclusionStrategyOptions = [{\n  value: 'NON_NULL',\n  label: i18n.t('Includes properties which are not null'),\n  prefix: i18n.t('Non null')\n}, {\n  value: 'ALWAYS',\n  label: i18n.t('Include all properties'),\n  prefix: i18n.t('Always')\n}, {\n  value: 'NON_EMPTY',\n  label: i18n.t('Include non-empty properties'),\n  prefix: i18n.t('Non empty')\n}];\nconst defaultInclusionStrategyOption = inclusionStrategyOptions[0].value;\nconst NAME = 'inclusionStrategy';\nconst DATATEST = 'input-inclusion-strategy';\nconst LABEL = i18n.t('Inclusion strategy');\nconst HELPTEXT = i18n.t('Controls which properties to include');\n\nconst InclusionStrategy = () => <RadioGroupField name={NAME} label={LABEL} options={inclusionStrategyOptions} helpText={HELPTEXT} dataTest={DATATEST} vertical />;\n\nexport { InclusionStrategy, defaultInclusionStrategyOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultSkipSharingOption = false;\nconst NAME = 'skipSharing';\nconst DATATEST = 'input-skip-sharing';\nconst SHORT_LABEL = i18n.t('Skip sharing');\nconst LABEL = i18n.t('Skip sharing and access settings');\nconst HELPTEXT = i18n.t('Skip sharing properties, do not merge sharing when doing updates, and do not add user group access when creating new objects');\n\nconst SkipSharing = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { SkipSharing, defaultSkipSharingOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultSkipValidationOption = false;\nconst NAME = 'skipValidation';\nconst DATATEST = 'input-skip-validation';\nconst SHORT_LABEL = i18n.t('Skip validation');\nconst LABEL = i18n.t('Skip validation for import (not recommended)');\n\nconst SkipValidation = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { SkipValidation, defaultSkipValidationOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultIsAsyncOption = true;\nconst NAME = 'isAsync';\nconst DATATEST = 'input-is-async';\nconst SHORT_LABEL = i18n.t('Async');\nconst LABEL = i18n.t('Asynchronous import');\nconst HELPTEXT = i18n.t('Controls whether the import is done asynchronously');\n\nconst IsAsync = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { IsAsync, defaultIsAsyncOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { OrgUnitTreeField, FormField } from '../index';\nimport { SINGLE_ORG_VALIDATOR, SINGLE_EXACT_ORG_VALIDATOR } from '../OrgUnitTree/OrgUnitTreeField';\nconst NAME = 'selectedOrgUnits';\nconst LABEL = i18n.t('Organisation unit(s) to export data from');\nconst DATATEST = 'input-org-unit-tree';\n\nconst OrgUnitTree = ({\n  multiSelect\n}) => {\n  const orgValidator = multiSelect ? SINGLE_ORG_VALIDATOR : SINGLE_EXACT_ORG_VALIDATOR;\n  const validator = composeValidators(hasValue, orgValidator);\n  return <FormField label={LABEL} dataTest={DATATEST}>\n            <OrgUnitTreeField name={NAME} validator={validator} multiSelect={multiSelect} label={LABEL} dataTest={DATATEST} />\n        </FormField>;\n};\n\nOrgUnitTree.defaultProps = {\n  multiSelect: true\n};\nOrgUnitTree.propTypes = {\n  multiSelect: PropTypes.bool\n};\nexport { OrgUnitTree };","const resourceTypes = {\n  DATASET: 1,\n  PROGRAM: 2,\n  TETYPE: 3,\n  USER: 4\n};\nexport { resourceTypes };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedDataSets';\nconst LABEL = i18n.t('Which data sets should be included in export?');\nconst DATATEST = 'input-data-set-picker';\nconst LISTNAME = 'dataSetPicker';\nconst FILTERLABEL = i18n.t('Filter data sets');\nconst SELECTEDLABEL = i18n.t('Selected data sets');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the data sets!');\nconst RESOURCETYPE = resourceTypes.DATASET;\n\nconst SINGLE_DATASET_VALIDATOR = selectedDataSets => selectedDataSets.length == 0 ? i18n.t('At least one data set must be selected') : undefined;\n\nconst SINGLE_EXACT_DATASET_VALIDATOR = selectedDataSets => selectedDataSets.length != 1 ? i18n.t('One data set must be selected') : undefined;\n\nconst DataSetPicker = ({\n  multiSelect = true\n}) => {\n  const dataSetValidator = multiSelect ? SINGLE_DATASET_VALIDATOR : SINGLE_EXACT_DATASET_VALIDATOR;\n  const validator = composeValidators(hasValue, dataSetValidator);\n  return <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={LABEL} filterLabel={FILTERLABEL} selectedLabel={SELECTEDLABEL} dataTest={DATATEST} validator={validator} multiSelect={multiSelect} />;\n};\n\nDataSetPicker.propTypes = {\n  multiSelect: PropTypes.bool\n};\nexport { DataSetPicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedPrograms';\nconst LABEL = i18n.t('Program to export events from');\nconst DATATEST = 'input-program-picker';\nconst LISTNAME = 'selectedPrograms';\nconst FILTERLABEL = i18n.t('Filter programs');\nconst SELECTEDLABEL = i18n.t('Selected programs');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the programs!');\nconst RESOURCETYPE = resourceTypes.PROGRAM;\n\nconst SINGLE_PROGRAM_VALIDATOR = selectedPrograms => selectedPrograms.length == 0 ? i18n.t('At least one program must be selected') : undefined;\n\nconst SINGLE_EXACT_PROGRAM_VALIDATOR = selectedPrograms => !selectedPrograms ? i18n.t('One program must be selected') : undefined;\n\nconst ProgramPicker = ({\n  multiSelect,\n  label,\n  show,\n  ...rest\n}) => {\n  const programValidator = multiSelect ? SINGLE_PROGRAM_VALIDATOR : SINGLE_EXACT_PROGRAM_VALIDATOR;\n  const validator = composeValidators(hasValue, programValidator);\n  return show && <div style={{\n    maxWidth: '480px'\n  }}>\n                <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={label} filterLabel={FILTERLABEL} selectedLabel={SELECTEDLABEL} dataTest={DATATEST} multiSelect={multiSelect} validator={validator} autoSelectFirst {...rest} />\n            </div>;\n};\n\nProgramPicker.defaultProps = {\n  label: LABEL,\n  multiSelect: false,\n  show: true\n};\nProgramPicker.propTypes = {\n  label: PropTypes.string,\n  multiSelect: PropTypes.bool,\n  show: PropTypes.bool\n};\nexport { ProgramPicker };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst NAME = 'includeChildren';\nconst DATATEST = 'input-include-children';\nconst SHORT_LABEL = i18n.t('Include first level units');\nconst LABEL = i18n.t('Include the first level of organisation units inside selections');\n\nconst IncludeChildren = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { IncludeChildren };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst NAME = 'includeDeleted';\nconst DATATEST = 'input-include-deleted';\nconst SHORT_LABEL = i18n.t('Include deleted');\nconst LABEL = i18n.t('Include deleted data in export');\n\nconst IncludeDeleted = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { IncludeDeleted };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst compressionOptions = [{\n  value: 'zip',\n  label: i18n.t('Zip')\n}, {\n  value: 'gz',\n  label: i18n.t('GZip')\n}, {\n  value: '',\n  label: i18n.t('Uncompressed')\n}];\nconst defaultCompressionOption = compressionOptions[0].value;\nconst NAME = 'compression';\nconst DATATEST = 'input-compression';\nconst LABEL = i18n.t('Compression mode');\n\nconst Compression = () => <RadioGroupField name={NAME} label={LABEL} options={compressionOptions} dataTest={DATATEST} />;\n\nexport { Compression, defaultCompressionOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst inclusionOptions = [{\n  value: 'SELECTED',\n  label: i18n.t('Only include selected organisation unit'),\n  prefix: i18n.t('Selected')\n}, {\n  value: 'CHILDREN',\n  label: i18n.t('Include the first level of units inside selections'),\n  prefix: i18n.t('Directly below')\n}, {\n  value: 'DESCENDANTS',\n  label: i18n.t('Include all units inside selections'),\n  prefix: i18n.t('All below')\n}];\nconst defaultInclusionOption = inclusionOptions[0].value;\nconst NAME = 'inclusion';\nconst DATATEST = 'input-inclusion';\nconst LABEL = i18n.t('How should organisation units inside the selections be included?');\n\nconst Inclusion = () => <RadioGroupField name={NAME} label={LABEL} options={inclusionOptions} dataTest={DATATEST} vertical />;\n\nexport { Inclusion, defaultInclusionOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'startDate';\nconst DATATEST = 'input-start-date';\nconst LABEL = i18n.t('Start date');\nconst VALIDATOR = composeValidators(hasValue, DATE_VALIDATOR);\n\nconst StartDate = () => <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nexport { StartDate };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'endDate';\nconst DATATEST = 'input-end-date';\nconst LABEL = i18n.t('End date');\nconst VALIDATOR = composeValidators(hasValue, DATE_VALIDATOR);\n\nconst EndDate = () => <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nexport { EndDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nconst DATATEST = 'input-export-submit';\n\nconst ExportButton = ({\n  label,\n  disabledLabel,\n  disabled\n}) => <div style={{\n  marginBottom: 'var(--spacers-dp24)'\n}}>\n        <Button primary type=\"submit\" dataTest={DATATEST} disabled={disabled}>\n            {disabled ? disabledLabel : label}\n        </Button>\n    </div>;\n\nExportButton.defaultProps = {\n  disabledLabel: i18n.t('Loading export...')\n};\nExportButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  disabledLabel: PropTypes.string\n};\nexport { ExportButton };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { ProgramStages as ProgramStagesGeneric } from '../';\nimport { SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR } from '../ProgramStages/ProgramStages';\nconst VALIDATOR = composeValidators(hasValue, SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR);\nconst NAME = 'programStage';\nconst LABEL = i18n.t('Which program stage should be included?');\nconst DATATEST = 'input-program-stage-select';\n\nconst ProgramStages = props => <ProgramStagesGeneric name={NAME} label={LABEL} validator={VALIDATOR} dataTest={DATATEST} {...props} />;\n\nexport { ProgramStages };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { Schemas } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst SINGLE_SCHEMA_VALIDATOR = checkedSchemas => checkedSchemas.length == 0 ? i18n.t('At least one schema must be selected') : undefined;\n\nconst Wrapper = ({\n  input: {\n    onChange\n  },\n  meta,\n  ...rest\n}) => <Schemas meta={meta} setCheckedSchemas={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst SchemasField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nSchemasField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { SchemasField, SINGLE_SCHEMA_VALIDATOR };","import React from 'react';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { SchemasField } from '../index';\nimport { SINGLE_SCHEMA_VALIDATOR } from '../Schemas/SchemasField';\nconst NAME = 'checkedSchemas';\nconst VALIDATOR = composeValidators(hasValue, SINGLE_SCHEMA_VALIDATOR);\nconst DATATEST = 'input-schemas';\nconst EXCLUDE_SCHEMAS = new Set(['analyticsTableHooks', 'charts', 'constants', 'dataElementDimensions', 'dataEntryForms', 'dataSetNotificationTemplates', 'dataStores', 'documents', 'eventCharts', 'eventReports', 'icons', 'jobConfigurations', 'messageConversations', 'metadataVersions', 'minMaxDataElements', 'oAuth2Clients', 'programDataElements', 'programNotificationTemplates', 'pushAnalysis', 'reportTables', 'reportingRates', 'reports', 'sections', 'smsCommands', 'sqlViews', 'trackedEntityInstanceFilters', 'validationNotificationTemplates']);\n\nconst Schemas = () => <SchemasField name={NAME} excludeSchemas={EXCLUDE_SCHEMAS} validator={VALIDATOR} checkedByDefault dataTest={DATATEST} />;\n\nexport { Schemas };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport { StyledField } from '../index';\nconst objectTypeOptions = [{\n  value: 'dataSets',\n  label: i18n.t('Data sets')\n}, {\n  value: 'programs',\n  label: i18n.t('Programs')\n}, {\n  value: 'categoryCombos',\n  label: i18n.t('Category combination')\n}, {\n  value: 'dashboards',\n  label: i18n.t('Dashboard')\n}, {\n  value: 'dataElementGroups',\n  label: i18n.t('Data element groups')\n}, {\n  value: 'optionSets',\n  label: i18n.t('Option sets')\n}];\nconst defaultObjectTypeOption = objectTypeOptions[0].value;\nconst NAME = 'objectType';\nconst LABEL = i18n.t('Object type');\nconst DATATEST = 'input-object-type';\n\nconst ObjectType = () => <div style={{\n  maxWidth: '480px'\n}}>\n        <StyledField component={SingleSelectFieldFF} name={NAME} label={LABEL} options={objectTypeOptions} dataTest={DATATEST} filled initialFocus />\n    </div>;\n\nexport { ObjectType, defaultObjectTypeOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport { StyledField } from '../index';\nimport { useObjects } from '../../hooks/index';\n\nconst SINGLE_EXACT_OBJECT_VALIDATOR = object => !object ? i18n.t('One object must be selected') : undefined;\n\nconst NAME = 'object';\nconst LABEL = i18n.t('Object');\nconst VALIDATOR = composeValidators(hasValue, SINGLE_EXACT_OBJECT_VALIDATOR);\nconst DATATEST = 'input-object-select';\n\nconst Objects = ({\n  objectType,\n  form\n}) => {\n  const setObjectListSelected = val => form.change(NAME, val);\n\n  const {\n    loading: objectsLoading,\n    error: objectsError,\n    validationText: objectsValidationText,\n    objects\n  } = useObjects(objectType, setObjectListSelected);\n  return <div style={{\n    maxWidth: '480px'\n  }}>\n            <StyledField component={SingleSelectFieldFF} loading={objectsLoading} name={NAME} label={LABEL} options={objects} validate={VALIDATOR} dataTest={DATATEST} validationText={objectsValidationText} error={!!objectsError} filterable />\n        </div>;\n};\n\nObjects.propTypes = {\n  form: PropTypes.object.isRequired,\n  objectType: PropTypes.string.isRequired\n};\nexport { Objects };","import { useState, useEffect } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataEngine } from '@dhis2/app-runtime';\n\nconst listQuery = resource => ({\n  data: {\n    resource: resource,\n    fields: 'id,displayName',\n    params: {\n      paging: 'false'\n    }\n  }\n});\n\nconst useObjects = (type, setSelected) => {\n  const engine = useDataEngine();\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [objects, setObjects] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    setSelected(undefined);\n    engine.query(listQuery(type), {\n      onComplete: data => {\n        const list = data.data[type];\n        const formattedList = list.map(e => ({\n          value: e.id,\n          label: e.displayName\n        }));\n        setObjects(formattedList);\n        setSelected(formattedList[0].value);\n        setLoading(false);\n      },\n      onError: error => {\n        setError(error);\n        console.error('useObjects error: ', error);\n      }\n    });\n  }, [type]);\n  const validationText = error && `${i18n.t('Something went wrong when loading the objects')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    objects\n  };\n};\n\nexport { useObjects };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { DataElementIdScheme as DataElementIdSchemeGeneric } from '../index';\nconst dataElementIdSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}, {\n  value: 'NAME',\n  label: i18n.t('Name')\n}];\nconst defaultDataElementIdSchemeOption = dataElementIdSchemeOptions[0].value;\nconst NAME = 'dataElementIdScheme';\nconst DATATEST = 'input-data-element-id-scheme';\nconst LABEL = i18n.t('Data element ID scheme');\n\nconst DataElementIdScheme = () => <DataElementIdSchemeGeneric name={NAME} label={LABEL} dataElementIdSchemeOptions={dataElementIdSchemeOptions} dataTest={DATATEST} />;\n\nexport { DataElementIdScheme, defaultDataElementIdSchemeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { EventIdScheme as EventIdSchemeGeneric } from '../index';\nconst eventIdSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}];\nconst defaultEventIdSchemeOption = eventIdSchemeOptions[0].value;\nconst NAME = 'eventIdScheme';\nconst DATATEST = 'input-event-id-scheme';\nconst LABEL = i18n.t('Event ID scheme');\n\nconst EventIdScheme = () => <EventIdSchemeGeneric name={NAME} label={LABEL} eventIdSchemeOptions={eventIdSchemeOptions} dataTest={DATATEST} />;\n\nexport { EventIdScheme, defaultEventIdSchemeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { IdScheme as IdSchemeGeneric } from '../index';\nconst idSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}];\nconst defaultIdSchemeOption = idSchemeOptions[0].value;\nconst NAME = 'idScheme';\nconst DATATEST = 'input-id-scheme';\nconst LABEL = i18n.t('ID scheme');\n\nconst IdScheme = () => <IdSchemeGeneric name={NAME} label={LABEL} idSchemeOptions={idSchemeOptions} dataTest={DATATEST} />;\n\nexport { IdScheme, defaultIdSchemeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { OrgUnitIdScheme as OrgUnitIdSchemeGeneric } from '../index';\nconst orgUnitIdSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}, {\n  value: 'NAME',\n  label: i18n.t('Name')\n}];\nconst defaultOrgUnitIdSchemeOption = orgUnitIdSchemeOptions[0].value;\nconst NAME = 'orgUnitIdScheme';\nconst DATATEST = 'input-org-unit-id-scheme';\nconst LABEL = i18n.t('Organisation unit ID scheme');\n\nconst OrgUnitIdScheme = () => <OrgUnitIdSchemeGeneric name={NAME} label={LABEL} orgUnitIdSchemeOptions={orgUnitIdSchemeOptions} dataTest={DATATEST} />;\n\nexport { OrgUnitIdScheme, defaultOrgUnitIdSchemeOption };","const hasAuthorityToSkipAudit = authorities => authorities.includes('ALL') || authorities.includes('F_SKIP_DATA_IMPORT_AUDIT');\n\nconst hasAuthorityToSelectAllOrgUnits = authorities => authorities.includes('ALL');\n\nexport { hasAuthorityToSkipAudit, hasAuthorityToSelectAllOrgUnits };","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { UserContext } from '../../contexts/index';\nimport { hasAuthorityToSelectAllOrgUnits } from '../WithAuthority/predicates';\nimport { RadioGroupField } from '../index';\nimport { OrgUnitTree, Inclusion } from './index';\nconst OU_MODE_MANUAL_VALUE = ':MANUAL:';\nconst orgUnitSelectionModeOptions = [{\n  value: 'ACCESSIBLE',\n  label: i18n.t('Data view organisation units associated with the current user'),\n  prefix: i18n.t('Accessible')\n}, {\n  value: 'CAPTURE',\n  label: i18n.t('Data capture organisation units associated with the current user'),\n  prefix: i18n.t('Capture')\n}, {\n  value: 'ALL',\n  label: i18n.t('All organisation units in the system'),\n  prefix: i18n.t('All')\n}, {\n  value: OU_MODE_MANUAL_VALUE,\n  label: i18n.t('Manually select organisation units from list')\n}];\nconst defaultOrgUnitSelectionModeOption = orgUnitSelectionModeOptions[3].value;\nconst NAME = 'ouMode';\nconst DATATEST = 'input-ouMode';\nconst LABEL = i18n.t('Which organisation units should be included?');\n\nconst OrgUnitMode = ({\n  value\n}) => {\n  const user = useContext(UserContext);\n  const canSelectAllOrgUnits = user ? hasAuthorityToSelectAllOrgUnits(user.authorities) : false;\n  const options = canSelectAllOrgUnits ? orgUnitSelectionModeOptions : orgUnitSelectionModeOptions.filter(({\n    value\n  }) => value != 'ALL');\n  return <RadioGroupField name={NAME} label={LABEL} options={options} dataTest={DATATEST} vertical>\n            {value === OU_MODE_MANUAL_VALUE && <>\n                    <OrgUnitTree />\n                    <Inclusion />\n                </>}\n        </RadioGroupField>;\n};\n\nOrgUnitMode.propTypes = {\n  value: PropTypes.string.isRequired\n};\nexport { OrgUnitMode, defaultOrgUnitSelectionModeOption, OU_MODE_MANUAL_VALUE };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst teiTypeFilterOptions = [{\n  value: 'NONE',\n  label: i18n.t('None')\n}, {\n  value: 'PROGRAM',\n  label: i18n.t('Program')\n}, {\n  value: 'TE',\n  label: i18n.t('Tracked entity type')\n}];\nconst defaultTEITypeFilterOption = teiTypeFilterOptions[0].value;\nconst NAME = 'teiTypeFilter';\nconst DATATEST = 'input-tei-type-filter';\nconst LABEL = i18n.t('Filter by');\n\nconst TEITypeFilter = () => <RadioGroupField name={NAME} label={LABEL} options={teiTypeFilterOptions} dataTest={DATATEST} />;\n\nexport { TEITypeFilter, defaultTEITypeFilterOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst programStatusOptions = [{\n  value: '',\n  label: i18n.t('All statuses')\n}, {\n  value: 'ACTIVE',\n  label: i18n.t('Active')\n}, {\n  value: 'COMPLETED',\n  label: i18n.t('Completed')\n}, {\n  value: 'CANCELLED',\n  label: i18n.t('Cancelled')\n}];\nconst defaultProgramStatusOption = programStatusOptions[0].value;\nconst NAME = 'programStatus';\nconst DATATEST = 'input-program-status';\nconst LABEL = i18n.t('Include only entities with status');\n\nconst ProgramStatus = ({\n  show\n}) => show && <RadioGroupField name={NAME} label={LABEL} options={programStatusOptions} dataTest={DATATEST} />;\n\nProgramStatus.propTypes = {\n  show: PropTypes.bool\n};\nexport { ProgramStatus, defaultProgramStatusOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst followUpStatusOptions = [{\n  value: 'ALL',\n  label: i18n.t('All')\n}, {\n  value: 'TRUE',\n  label: i18n.t('Marked for follow-up')\n}, {\n  value: 'FALSE',\n  label: i18n.t('Not marked for follow-up')\n}];\nconst defaultFollowUpStatusOption = followUpStatusOptions[0].value;\nconst NAME = 'followUpStatus';\nconst DATATEST = 'input-follow-up-status';\nconst LABEL = i18n.t('Include only entities with follow-up status');\n\nconst FollowUpStatus = ({\n  show\n}) => show && <RadioGroupField name={NAME} label={LABEL} options={followUpStatusOptions} dataTest={DATATEST} />;\n\nFollowUpStatus.propTypes = {\n  show: PropTypes.bool\n};\nexport { FollowUpStatus, defaultFollowUpStatusOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'programStartDate';\nconst DATATEST = 'input-program-start-date';\nconst LABEL = i18n.t('Start date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst ProgramStartDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nProgramStartDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { ProgramStartDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'programEndDate';\nconst DATATEST = 'input-program-end-date';\nconst LABEL = i18n.t('End date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst ProgramEndDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nProgramEndDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { ProgramEndDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedTETypes';\nconst DATATEST = 'input-te-type-picker';\nconst LABEL = i18n.t('Tracked entity types');\nconst LISTNAME = 'selectedTETypes';\nconst FILTERLABEL = i18n.t('Filter tracked entity types by name');\nconst SELECTEDLABEL = i18n.t('Selected tracked entity types');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the tracked entity types!');\nconst RESOURCETYPE = resourceTypes.TETYPE;\n\nconst SINGLE_TETYPE_VALIDATOR = selectedTypes => selectedTypes.length == 0 ? i18n.t('At least one tracked entity type must be selected') : undefined;\n\nconst SINGLE_EXACT_TETYPE_VALIDATOR = selectedTypes => !selectedTypes ? i18n.t('One tracked entity type must be selected') : undefined;\n\nconst TETypePicker = ({\n  multiSelect,\n  show,\n  ...rest\n}) => {\n  const teTypeValidator = multiSelect ? SINGLE_TETYPE_VALIDATOR : SINGLE_EXACT_TETYPE_VALIDATOR;\n  const validator = composeValidators(hasValue, teTypeValidator);\n  return show && <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={LABEL} filterLabel={FILTERLABEL} selectedLabel={SELECTEDLABEL} dataTest={DATATEST} multiSelect={multiSelect} validator={validator} withActions={false} autoSelectFirst={true} {...rest} />;\n};\n\nTETypePicker.defaultProps = {\n  multiSelect: false\n};\nTETypePicker.propTypes = {\n  multiSelect: PropTypes.bool,\n  show: PropTypes.bool\n};\nexport { TETypePicker };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst lastUpdatedFilterOptions = [{\n  value: 'NONE',\n  label: i18n.t('Do not filter by last updated date')\n}, {\n  value: 'DATE',\n  label: i18n.t('Start/end dates')\n}, {\n  value: 'DURATION',\n  label: i18n.t('Time since last updated')\n}];\nconst defaultLastUpdatedFilterOption = lastUpdatedFilterOptions[0].value;\nconst NAME = 'lastUpdatedFilter';\nconst DATATEST = 'input-last-updated-filter';\nconst LABEL = i18n.t('Filter by last updated date');\n\nconst LastUpdatedFilter = () => <RadioGroupField name={NAME} label={LABEL} options={lastUpdatedFilterOptions} dataTest={DATATEST} />;\n\nexport { LastUpdatedFilter, defaultLastUpdatedFilterOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'lastUpdatedStartDate';\nconst DATATEST = 'input-last-updated-start-date';\nconst LABEL = i18n.t('Last updated start date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst LastUpdatedStartDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nLastUpdatedStartDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { LastUpdatedStartDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'lastUpdatedEndDate';\nconst DATATEST = 'input-last-updated-end-date';\nconst LABEL = i18n.t('Last updated end date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst LastUpdatedEndDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nLastUpdatedEndDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { LastUpdatedEndDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm; // (\\d+d)?: one or more numbers followed by d; d for days\n// rest of the capturing groups are similar to the one described above\n\nconst durationRegex = /^(\\d+d)?(\\d+h)?(\\d+m)?(\\d+s)?$/;\n\nconst DURATION_VALIDATOR = duration => !duration || duration.match(durationRegex) ? undefined : i18n.t('Invalid duration');\n\nconst formatHelpText = `${i18n.t('Format')}: 00d00h00m00s`;\nconst exampleDuration = '100d5h30m';\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta: {\n    error\n  },\n  inputName,\n  label,\n  dataTest\n}) => <FormField label={label} dataTest={dataTest}>\n        <InputField name={inputName} value={value} onChange={({\n    value\n  }) => onChange(value)} inputWidth=\"200px\" error={!!error} validationText={error} helpText={formatHelpText} placeholder={exampleDuration} />\n    </FormField>;\n\nWrapper.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  input: PropTypes.shape({\n    value: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string\n  }).isRequired\n};\n\nconst DurationField = ({\n  name,\n  validator,\n  ...rest\n}) => <Field component={Wrapper} name={name} inputName={name} validate={validator} {...rest} />;\n\nDurationField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func.isRequired\n};\nexport { DurationField, DURATION_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { DurationField } from '../index';\nimport { DURATION_VALIDATOR } from '../Duration/DurationField';\nconst NAME = 'lastUpdatedDuration';\nconst DATATEST = 'input-last-updated-duration';\nconst LABEL = i18n.t('Last updated duration');\nconst VALIDATOR = composeValidators(hasValue, DURATION_VALIDATOR);\n\nconst LastUpdatedDuration = ({\n  show\n}) => show && <DurationField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nLastUpdatedDuration.propTypes = {\n  show: PropTypes.bool\n};\nexport { LastUpdatedDuration };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField, RadioGroupField } from '../index';\nimport { UserPicker } from './index';\nconst {\n  useField,\n  Field\n} = ReactFinalForm;\nconst assignedUserModeOptions = [{\n  value: 'ANY',\n  label: i18n.t('Any user')\n}, {\n  value: 'CURRENT',\n  label: i18n.t('Current user')\n}, {\n  value: 'NONE',\n  label: i18n.t('No user/unassigned')\n}, {\n  value: 'PROVIDED',\n  label: i18n.t('Selected users')\n}];\nconst defaultAssignedUserModeOption = assignedUserModeOptions[0].value;\nconst FILTER_NAME = 'assignedUserModeFilter';\nconst FILTER_DATATEST = 'input-assigned-user-mode-filter';\nconst FILTER_SHORT_LABEL = i18n.t('Filter by assigned user');\nconst FILTER_LABEL = i18n.t('Export only instances with events assigned to specific users');\nconst NAME = 'assignedUserMode';\nconst DATATEST = 'input-assigned-user-mode';\nconst LABEL = i18n.t('Assigned user(s)');\n\nconst AssignedUserMode = () => {\n  const {\n    input: filterInput\n  } = useField(FILTER_NAME);\n  const {\n    value: showOptions\n  } = filterInput;\n  const {\n    input: userInput\n  } = useField(NAME);\n  const {\n    value: userMode\n  } = userInput;\n  const showUserPicker = userMode === 'PROVIDED';\n  return <>\n            <FormField label={FILTER_SHORT_LABEL} dataTest={FILTER_DATATEST}>\n                <Field type=\"checkbox\" component={CheckboxFieldFF} name={FILTER_NAME} label={FILTER_LABEL} dataTest={`${FILTER_DATATEST}-sf`} />\n                {showOptions && <div style={{\n        marginLeft: 'var(--spacers-dp16)',\n        marginTop: 'var(--spacers-dp16)'\n      }}>\n                        <RadioGroupField name={NAME} options={assignedUserModeOptions} dataTest={DATATEST} label={LABEL} />\n                        <UserPicker show={showUserPicker} />\n                    </div>}\n            </FormField>\n        </>;\n};\n\nexport { AssignedUserMode, defaultAssignedUserModeOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedUsers';\nconst DATATEST = 'input-user-picker';\nconst LABEL = i18n.t('Which users should be used?');\nconst LISTNAME = 'userPicker';\nconst FILTERLABEL = i18n.t('Filter users');\nconst SELECTEDLABEL = i18n.t('Selected users');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the users!');\nconst RESOURCETYPE = resourceTypes.USER;\n\nconst SINGLE_USER_VALIDATOR = selectedUsers => selectedUsers.length == 0 ? i18n.t('At least one user must be selected') : undefined;\n\nconst SINGLE_EXACT_USER_VALIDATOR = selectedUsers => selectedUsers.length != 1 ? i18n.t('One user must be selected') : undefined;\n\nconst UserPicker = ({\n  multiSelect,\n  show,\n  ...rest\n}) => {\n  const userValidator = multiSelect ? SINGLE_USER_VALIDATOR : SINGLE_EXACT_USER_VALIDATOR;\n  const validator = composeValidators(hasValue, userValidator);\n  return show && <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={LABEL} filterLabel={FILTERLABEL} selectedLabel={SELECTEDLABEL} dataTest={DATATEST} multiSelect={multiSelect} validator={validator} withActions={true} {...rest} />;\n};\n\nUserPicker.defaultProps = {\n  multiSelect: true\n};\nUserPicker.propTypes = {\n  multiSelect: PropTypes.bool,\n  show: PropTypes.bool\n};\nexport { UserPicker };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst NAME = 'includeAllAttributes';\nconst DATATEST = 'input-include-all-attributes';\nconst SHORT_LABEL = i18n.t('Include all attributes');\nconst LABEL = i18n.t('Include all attributes');\n\nconst IncludeAllAttributes = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { IncludeAllAttributes };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormField } from '../index';\nconst DATATEST = 'input-dates';\n\nconst Dates = ({\n  label,\n  show,\n  children\n}) => {\n  return show && <FormField label={label} dataTest={DATATEST}>\n                <div style={{\n      display: 'flex'\n    }}>\n                    {children[0]}\n                    <span style={{\n        marginLeft: 'var(--spacers-dp8)'\n      }}>\n                        {children[1]}\n                    </span>\n                </div>\n            </FormField>;\n};\n\nDates.defaultProps = {\n  label: '',\n  show: true\n};\nDates.propTypes = {\n  children: PropTypes.node.isRequired,\n  label: PropTypes.string,\n  show: PropTypes.bool\n};\nexport { Dates };","import i18n from '@dhis2/d2-i18n';\nexport const FORM_ERROR = 'FINAL_FORM/form-error';\nexport const ARRAY_ERROR = 'FINAL_FORM/array-error';\nexport const jobStartedMessage = {\n  [FORM_ERROR]: [{\n    id: `job-started`,\n    info: true,\n    message: i18n.t('Job started.')\n  }]\n};","import i18n from '@dhis2/d2-i18n';\nimport { FORM_ERROR, jobStartedMessage } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    format,\n    identifier,\n    importReportMode,\n    importStrategy,\n    atomicMode,\n    mergeMode,\n    flushMode,\n    skipSharing,\n    skipValidation,\n    inclusionStrategy,\n    isAsync,\n    firstRowIsHeader,\n    classKey\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'metadata.json';\n  const params = [`importMode=${dryRun ? 'VALIDATE' : 'COMMIT'}`, `identifier=${identifier}`, `importReportMode=${importReportMode}`, `importStrategy=${importStrategy}`, `atomicMode=${atomicMode}`, `mergeMode=${mergeMode}`, `flushMode=${flushMode}`, `skipSharing=${skipSharing}`, `skipValidation=${skipValidation}`, `inclusionStrategy=${inclusionStrategy}`, `async=${isAsync}`, `format=${format}`, format == 'csv' ? `firstRowIsHeader=${firstRowIsHeader}&classKey=${classKey}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format,\n      type: 'METADATA_IMPORT',\n      isAsync: isAsync,\n      setProgress,\n      addEntry: (id, entry) => addTask('metadata', id, { ...entry,\n        jobDetails: values\n      })\n    });\n    return jobStartedMessage;\n  } catch (e) {\n    const formErrors = validate(values);\n    const allErrors = {\n      [FORM_ERROR]: [e],\n      ...formErrors\n    };\n    return allErrors;\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nconst validate = values => {\n  const classKeyValidator = (format, classKey) => format == 'csv' && !classKey ? i18n.t('A class key must be selected') : undefined;\n\n  return {\n    classKey: classKeyValidator(values.format, values.classKey)\n  };\n};\n\nexport { onImport, validate };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails, getInitialBoolValue } from '../../utils/helper';\nimport { FileUpload, Format, formatOptions, defaultFormatOption, FirstRowIsHeader, defaultFirstRowIsHeaderOption, ClassKey, Identifier, defaultIdentifierOption, ImportReportMode, defaultImportReportModeOption, ImportStrategy, defaultImportStrategyOption, AtomicMode, defaultAtomicModeOption, MergeMode, defaultMergeModeOption, FlushMode, defaultFlushModeOption, SkipSharing, defaultSkipSharingOption, SkipValidation, defaultSkipValidationOption, IsAsync, defaultIsAsyncOption, InclusionStrategy, defaultInclusionStrategyOption, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MetadataImportIcon, MoreOptions, BasicOptions, ValidationSummary } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nexport const PAGE_NAME = i18n.t('Metadata import');\nexport const PAGE_DESCRIPTION = i18n.t('Import metadata like data elements and organisation units using the DXF 2 format.');\nconst PAGE_ICON = <MetadataImportIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  identifier: prevJobDetails.identifier || defaultIdentifierOption,\n  importReportMode: prevJobDetails.importReportMode || defaultImportReportModeOption,\n  importStrategy: prevJobDetails.importStrategy || defaultImportStrategyOption,\n  firstRowIsHeader: getInitialBoolValue(prevJobDetails.firstRowIsHeader, defaultFirstRowIsHeaderOption),\n  atomicMode: prevJobDetails.atomicMode || defaultAtomicModeOption,\n  mergeMode: prevJobDetails.mergeMode || defaultMergeModeOption,\n  flushMode: prevJobDetails.flushMode || defaultFlushModeOption,\n  inclusionStrategy: prevJobDetails.inclusionStrategy || defaultInclusionStrategyOption,\n  skipSharing: getInitialBoolValue(prevJobDetails.skipSharing, defaultSkipSharingOption),\n  skipValidation: getInitialBoolValue(prevJobDetails.skipValidation, defaultSkipValidationOption),\n  isAsync: getInitialBoolValue(prevJobDetails.isAsync, defaultIsAsyncOption)\n});\n\nconst MetadataImport = () => {\n  const {\n    tasks: {\n      metadata: metadataTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, metadataTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-metadata\" summaryTask={getNewestTask(metadataTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <FileUpload helpText={i18n.t('Supported file types: JSON, CSV, and XML.', {\n          nsSeparator: '>'\n        })} />\n                            <Format availableFormats={formatOptions} type=\"import\" />\n                            <FirstRowIsHeader show={values.format == 'csv'} />\n                            <ClassKey show={values.format == 'csv'} form={form} prevValue={prevJobDetails.classKey} />\n                            <Identifier />\n                            <ImportReportMode />\n                            <ImportStrategy value={values.importStrategy} />\n                            <AtomicMode />\n                            <MergeMode />\n                        </BasicOptions>\n                        <MoreOptions>\n                            <FlushMode />\n                            <SkipSharing />\n                            <SkipValidation />\n                            <IsAsync />\n                            <InclusionStrategy />\n                        </MoreOptions>\n                        <ValidationSummary />\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataImport };","import React, { useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { Format, formatOptions, defaultFormatOption, Schemas, Compression, defaultCompressionOption, SkipSharing, ExportButton } from '../../components/Inputs/index';\nimport { Page, MetadataExportIcon, ValidationSummary } from '../../components/index';\nimport { onExport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nexport const PAGE_NAME = i18n.t('Metadata export');\nexport const PAGE_DESCRIPTION = i18n.t('Export metadata, such as data elements and organisation units, in XML, JSON or CSV format.');\nconst PAGE_ICON = <MetadataExportIcon />;\nconst initialValues = {\n  checkedSchemas: [],\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  skipSharing: false\n};\n\nconst MetadataExport = () => {\n  const [exportEnabled, setExportEnabled] = useState(true);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl, setExportEnabled);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={!exportEnabled} dataTest=\"page-export-metadata\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} render={({\n      handleSubmit,\n      form\n    }) => <form onSubmit={handleSubmit}>\n                        <Schemas />\n                        <Format availableFormats={formatOptions} />\n                        <Compression />\n                        <SkipSharing />\n                        <ValidationSummary />\n                        <ExportButton label={i18n.t('Export metadata')} disabled={!exportEnabled} />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataExport };","import { locationAssign } from '../../utils/helper';\n\nconst onExport = (baseUrl, setExportEnabled) => values => {\n  setExportEnabled(false);\n  const {\n    checkedSchemas,\n    format,\n    compression,\n    skipSharing\n  } = values; // generate download url\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `metadata`;\n  const endpointExtension = compression ? `${format}.${compression}` : format;\n  const schemaParams = checkedSchemas.map(name => `${name}=true`).join('&');\n  const downloadUrlParams = `skipSharing=${skipSharing}&download=true&${schemaParams}`;\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url, setExportEnabled); // log for debugging purposes\n\n  console.log('metadata-export:', {\n    url,\n    params: downloadUrlParams\n  });\n};\n\nexport { onExport };","import React, { useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { Format, formatNoCsvOptions, defaultFormatOption, Compression, defaultCompressionOption, ObjectType, defaultObjectTypeOption, Objects, SkipSharing, ExportButton } from '../../components/Inputs/index';\nimport { Page, MetadataDependencyExportIcon, ValidationSummary } from '../../components/index';\nimport { onExport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nexport const PAGE_NAME = i18n.t('Metadata dependency export');\nexport const PAGE_DESCRIPTION = i18n.t('Export metadata dependencies, such as data sets and programs, including related metadata objects, in XML or JSON format.');\nconst PAGE_ICON = <MetadataDependencyExportIcon />;\nconst initialValues = {\n  objectType: defaultObjectTypeOption,\n  object: undefined,\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  skipSharing: false\n};\n\nconst MetadataDependencyExport = () => {\n  const [exportEnabled, setExportEnabled] = useState(true);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl, setExportEnabled);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={!exportEnabled} dataTest=\"page-export-metadata-dependency\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true\n    }} render={({\n      handleSubmit,\n      form,\n      values\n    }) => <form onSubmit={handleSubmit}>\n                        <ObjectType />\n                        <Objects objectType={values.objectType} form={form} />\n                        <Format availableFormats={formatNoCsvOptions} />\n                        <Compression />\n                        <SkipSharing />\n                        <ValidationSummary />\n                        <ExportButton label={i18n.t('Export metadata dependencies')} disabled={!exportEnabled} />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataDependencyExport };","import { locationAssign } from '../../utils/helper';\n\nconst onExport = (baseUrl, setExportEnabled) => values => {\n  setExportEnabled(false);\n  const {\n    objectType,\n    object,\n    format,\n    compression,\n    skipSharing\n  } = values; // generate URL and redirect\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `${objectType}/${object}/metadata`;\n  const endpointExtension = compression ? `${format}.${compression}` : format;\n  const downloadUrlParams = `skipSharing=${skipSharing}&download=true`;\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url, setExportEnabled); // log for debugging purposes\n\n  console.log('metadata-dependency-export:', {\n    url,\n    params: downloadUrlParams\n  });\n};\n\nexport { onExport };","import React, { useContext } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './JobOverview.module.css';\nimport { TaskContext } from '../../contexts/index';\nimport { JobOverview as JobOverviewComponent, Page, TasksIcon } from '../../components/index';\n\nconst JobOverview = () => {\n  const {\n    jobOverview,\n    updateJobOverview\n  } = useContext(TaskContext);\n\n  const setActiveTypes = types => {\n    const selectedJob = jobOverview.selectedJob;\n    const job = selectedJob && types.includes(selectedJob.importType) ? selectedJob : null;\n    updateJobOverview({\n      activeTypes: types,\n      selectedJob: job\n    });\n  };\n\n  const setSelectedJob = job => {\n    updateJobOverview({\n      selectedJob: job\n    });\n  };\n\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} limitWidth={false} dataTest=\"job-overview-page\">\n            <div className={styles.container}>\n                <JobOverviewComponent activeTypes={jobOverview.activeTypes} setActiveTypes={setActiveTypes} selectedJob={jobOverview.selectedJob} setSelectedJob={setSelectedJob} />\n            </div>\n        </Page>;\n}; // PAGE INFO\n\n\nconst PAGE_NAME = i18n.t('Job overview');\nconst PAGE_DESCRIPTION = i18n.t('An overview of all import jobs started this session.');\nconst PAGE_ICON = <TasksIcon />;\nexport { JobOverview };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { FileUpload, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { Page, GMLIcon, ValidationSummary } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nexport const PAGE_NAME = i18n.t('GML import');\nexport const PAGE_DESCRIPTION = i18n.t('Import geographic data for organisation units using the GML format. GML is an XML grammar for expressing geographical features.');\nconst PAGE_ICON = <GMLIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files\n});\n\nconst GMLImport = () => {\n  const {\n    tasks: {\n      gml: gmlTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, gmlTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-gml\" summaryTask={getNewestTask(gmlTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <FileUpload />\n                        <ValidationSummary />\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { GMLImport };","import { FORM_ERROR, jobStartedMessage } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\nconst isAsync = true;\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'metadata/gml.json';\n  const params = [`dryRun=${dryRun}`, 'format=json'].join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: 'gml',\n      type: 'GML_IMPORT',\n      isAsync: isAsync,\n      setProgress,\n      addEntry: (id, entry) => addTask('gml', id, { ...entry,\n        jobDetails: values\n      })\n    });\n    return jobStartedMessage;\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { FileUpload, Format, formatOptions, defaultFormatOption, DataElementIdScheme, defaultDataElementIdSchemeOption, EventIdScheme, defaultEventIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MoreOptions, BasicOptions, SchemeContainer, EventIcon, ValidationSummary } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper'; // PAGE INFO\n\nexport const PAGE_NAME = i18n.t('Event import');\nexport const PAGE_DESCRIPTION = i18n.t('Import events for programs, stages and tracked entities using the DXF 2 format.');\nconst PAGE_ICON = <EventIcon />;\nconst {\n  Form\n} = ReactFinalForm;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  dataElementIdScheme: prevJobDetails.dataElementIdScheme || defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: prevJobDetails.orgUnitIdScheme || defaultOrgUnitIdSchemeOption,\n  eventIdScheme: prevJobDetails.eventIdScheme || defaultEventIdSchemeOption,\n  idScheme: prevJobDetails.idScheme || defaultIdSchemeOption\n});\n\nconst EventImport = () => {\n  const {\n    tasks: {\n      event: eventTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, eventTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-event\" summaryTask={getNewestTask(eventTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <FileUpload helpText={i18n.t('Supported file types: JSON, CSV, and XML.', {\n          nsSeparator: '>'\n        })} />\n                            <Format availableFormats={formatOptions} type=\"import\" />\n                        </BasicOptions>\n                        <MoreOptions>\n                            <SchemeContainer>\n                                <EventIdScheme />\n                                <DataElementIdScheme />\n                                <OrgUnitIdScheme />\n                                <IdScheme />\n                            </SchemeContainer>\n                        </MoreOptions>\n                        <ValidationSummary />\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { EventImport };","import { FORM_ERROR, jobStartedMessage } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\nconst isAsync = true;\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    format,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    eventIdScheme,\n    idScheme\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'events.json';\n  const params = ['skipFirst=true', `async=${isAsync}`, `dryRun=${dryRun}`, `dataElementIdScheme=${dataElementIdScheme}`, `orgUnitIdScheme=${orgUnitIdScheme}`, `eventIdScheme=${eventIdScheme}`, `idScheme=${idScheme}`, `payloadFormat=${format}`].join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format,\n      type: 'EVENT_IMPORT',\n      isAsync: isAsync,\n      setProgress,\n      addEntry: (id, entry) => addTask('event', id, { ...entry,\n        jobDetails: values\n      })\n    });\n    return jobStartedMessage;\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import { jsDateToISO8601, locationAssign, pathToId } from '../../utils/helper';\nimport { ALL_VALUE } from '../../hooks/useProgramStages';\nimport { DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR } from '../../components/DatePicker/DatePickerField';\n\nconst onExport = (baseUrl, setExportEnabled) => values => {\n  setExportEnabled(false);\n  const {\n    selectedOrgUnits,\n    selectedPrograms,\n    programStage,\n    format,\n    compression,\n    startDate,\n    endDate,\n    includeDeleted,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    idScheme,\n    inclusion\n  } = values; // generate URL and redirect\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `events`;\n  const endpointExtension = compression ? `${format}.${compression}` : format;\n  const filename = `${endpoint}.${endpointExtension}`;\n  const downloadUrlParams = ['links=false', 'skipPaging=true', `orgUnit=${pathToId(selectedOrgUnits[0])}`, `program=${selectedPrograms}`, `includeDeleted=${includeDeleted}`, `dataElementIdScheme=${dataElementIdScheme}`, `orgUnitIdScheme=${orgUnitIdScheme}`, `idScheme=${idScheme}`, `attachment=${filename}`, `startDate=${jsDateToISO8601(startDate)}`, `endDate=${jsDateToISO8601(endDate)}`, `ouMode=${inclusion}`, `format=${format}`, programStage != ALL_VALUE ? `programStage=${programStage}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url, setExportEnabled); // log for debugging purposes\n\n  console.log('event-export:', {\n    url,\n    params: downloadUrlParams\n  });\n};\n\nconst validate = values => ({\n  startDate: DATE_BEFORE_VALIDATOR(values.startDate, values.endDate),\n  endDate: DATE_AFTER_VALIDATOR(values.endDate, values.startDate)\n});\n\nexport { onExport, validate };","import React, { useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { OrgUnitTree, ProgramPicker, Format, formatOptions, defaultFormatOption, Compression, defaultCompressionOption, Dates, StartDate, EndDate, IncludeDeleted, Inclusion, defaultInclusionOption, ExportButton, ProgramStages, DataElementIdScheme, defaultDataElementIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, IdScheme, defaultIdSchemeOption } from '../../components/Inputs/index';\nimport { Page, MoreOptions, BasicOptions, SchemeContainer, EventIcon, ValidationSummary } from '../../components/index';\nimport { onExport, validate } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nexport const PAGE_NAME = i18n.t('Event export');\nexport const PAGE_DESCRIPTION = i18n.t('Export event data for programs, stages and tracked entities in DXF 2 format.');\nconst PAGE_ICON = <EventIcon />;\nconst today = new Date();\nconst initialValues = {\n  selectedOrgUnits: [],\n  selectedPrograms: '',\n  programStage: undefined,\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  startDate: new Date(today.getFullYear(), today.getMonth() - 3, today.getDate()),\n  endDate: today,\n  includeDeleted: false,\n  dataElementIdScheme: defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: defaultOrgUnitIdSchemeOption,\n  idScheme: defaultIdSchemeOption,\n  inclusion: defaultInclusionOption\n};\n\nconst EventExport = () => {\n  const [exportEnabled, setExportEnabled] = useState(true);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl, setExportEnabled);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={!exportEnabled} dataTest=\"page-export-data\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} validate={validate} subscription={{\n      values: true\n    }} render={({\n      handleSubmit,\n      form,\n      values\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <OrgUnitTree multiSelect={false} />\n                            <Inclusion />\n                            <ProgramPicker autoSelectFirst />\n                            <ProgramStages selectedProgram={values.selectedPrograms} form={form} />\n                            <Dates label={i18n.t('Date range to export data for')}>\n                                <StartDate />\n                                <EndDate />\n                            </Dates>\n                            <Format availableFormats={formatOptions} />\n                            <Compression />\n                        </BasicOptions>\n                        <MoreOptions>\n                            <IncludeDeleted />\n                            <SchemeContainer>\n                                <DataElementIdScheme />\n                                <OrgUnitIdScheme />\n                                <IdScheme />\n                            </SchemeContainer>\n                        </MoreOptions>\n                        <ValidationSummary />\n                        <ExportButton label={i18n.t('Export events')} disabled={!exportEnabled} />\n                    </form>} />\n        </Page>;\n};\n\nexport { EventExport };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails, getInitialBoolValue } from '../../utils/helper';\nimport { FileUpload, Format, formatAdxPdfOptions, defaultFormatOption, FirstRowIsHeader, defaultFirstRowIsHeaderOption, Strategy, defaultStrategyOption, PreheatCache, defaultPreheatCacheOption, SkipAudit, defaultSkipAuditOption, SkipExistingCheck, defaultSkipExistingCheckOption, DataElementIdScheme, defaultDataElementIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { hasAuthorityToSkipAudit } from '../../components/WithAuthority/predicates';\nimport { Page, WithAuthority, BasicOptions, MoreOptions, SchemeContainer, DataIcon, ValidationSummary } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nexport const PAGE_NAME = i18n.t('Data import');\nexport const PAGE_DESCRIPTION = i18n.t('Import data values from ADX XML, DXF 2 XML, JSON, CSV or PDF files.');\nconst PAGE_ICON = <DataIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  strategy: prevJobDetails.strategy || defaultStrategyOption,\n  firstRowIsHeader: getInitialBoolValue(prevJobDetails.firstRowIsHeader, defaultFirstRowIsHeaderOption),\n  preheatCache: getInitialBoolValue(prevJobDetails.preheatCache, defaultPreheatCacheOption),\n  skipAudit: getInitialBoolValue(prevJobDetails.skipAudit, defaultSkipAuditOption),\n  dataElementIdScheme: prevJobDetails.dataElementIdScheme || defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: prevJobDetails.orgUnitIdScheme || defaultOrgUnitIdSchemeOption,\n  idScheme: prevJobDetails.idScheme || defaultIdSchemeOption,\n  skipExistingCheck: getInitialBoolValue(prevJobDetails.skipExistingCheck, defaultSkipExistingCheckOption)\n});\n\nconst DataImport = () => {\n  const {\n    tasks: {\n      data: dataTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, dataTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-data\" summaryTask={getNewestTask(dataTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <FileUpload helpText={i18n.t('Supported file types: JSON, CSV, XML, ADX and PDF.', {\n          nsSeparator: '>'\n        })} />\n                            <Format availableFormats={formatAdxPdfOptions} type=\"import\" />\n                            <FirstRowIsHeader show={values.format == 'csv'} />\n                            <Strategy value={values.strategy} />\n                            <PreheatCache />\n                            <WithAuthority pred={hasAuthorityToSkipAudit}>\n                                <SkipAudit />\n                            </WithAuthority>\n                        </BasicOptions>\n                        <MoreOptions>\n                            <SchemeContainer>\n                                <DataElementIdScheme />\n                                <OrgUnitIdScheme />\n                                <IdScheme />\n                            </SchemeContainer>\n                            <SkipExistingCheck />\n                        </MoreOptions>\n                        <ValidationSummary />\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { DataImport };","import { FORM_ERROR, jobStartedMessage } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\nconst isAsync = true;\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    strategy,\n    preheatCache,\n    skipAudit,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    idScheme,\n    skipExistingCheck,\n    format,\n    firstRowIsHeader\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'dataValueSets.json';\n  const params = [`async=${isAsync}`, `dryRun=${dryRun}`, `strategy=${strategy}`, `preheatCache=${preheatCache}`, `skipAudit=${skipAudit}`, `dataElementIdScheme=${dataElementIdScheme}`, `orgUnitIdScheme=${orgUnitIdScheme}`, `idScheme=${idScheme}`, `skipExistingCheck=${skipExistingCheck}`, `format=${format}`, format == 'csv' ? `firstRowIsHeader=${firstRowIsHeader}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format,\n      type: 'DATAVALUE_IMPORT',\n      isAsync: isAsync,\n      setProgress,\n      addEntry: (id, entry) => addTask('data', id, { ...entry,\n        jobDetails: values\n      })\n    });\n    return jobStartedMessage;\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import { locationAssign, compressionToName } from '../../utils/helper';\nimport { jsDateToISO8601, pathToId } from '../../utils/helper';\nimport { DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR } from '../../components/DatePicker/DatePickerField';\n\nconst valuesToParams = ({\n  selectedOrgUnits,\n  includeChildren,\n  selectedDataSets,\n  format,\n  compression,\n  startDate,\n  endDate,\n  includeDeleted,\n  dataElementIdScheme,\n  orgUnitIdScheme,\n  idScheme\n}, filename) => [`dataElementIdScheme=${dataElementIdScheme}`, `orgUnitIdScheme=${orgUnitIdScheme}`, `idScheme=${idScheme}`, `includeDeleted=${includeDeleted}`, `children=${includeChildren}`, `startDate=${jsDateToISO8601(startDate)}`, `endDate=${jsDateToISO8601(endDate)}`, `orgUnit=${selectedOrgUnits.map(o => pathToId(o))}`, `dataSet=${selectedDataSets}`, `format=${format}`, compression ? `compression=${compressionToName(compression)}` : '', `attachment=${filename}`].filter(s => s != '').join('&');\n\nconst onExport = (baseUrl, setExportEnabled) => async values => {\n  setExportEnabled(false);\n  const {\n    format,\n    compression\n  } = values; // generate URL and redirect\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `dataValueSets`;\n  const fileExtension = compression ? `${format}.${compression}` : format;\n  const filename = `${endpoint}.${fileExtension}`;\n  const downloadUrlParams = valuesToParams(values, filename);\n  const url = `${apiBaseUrl}${endpoint}?${downloadUrlParams}`;\n  locationAssign(url, setExportEnabled); // log for debugging purposes\n\n  console.log('data-export:', {\n    url,\n    params: downloadUrlParams\n  });\n};\n\nconst validate = values => ({\n  startDate: DATE_BEFORE_VALIDATOR(values.startDate, values.endDate),\n  endDate: DATE_AFTER_VALIDATOR(values.endDate, values.startDate)\n});\n\nexport { onExport, validate };","import React, { useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { OrgUnitTree, IncludeChildren, DataSetPicker, Format, formatOptions, defaultFormatOption, Compression, defaultCompressionOption, Dates, StartDate, EndDate, IncludeDeleted, DataElementIdScheme, defaultDataElementIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ExportButton, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MoreOptions, BasicOptions, SchemeContainer, DataIcon, ValidationSummary } from '../../components/index';\nimport { onExport, validate } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nexport const PAGE_NAME = i18n.t('Data export');\nexport const PAGE_DESCRIPTION = i18n.t('Export metadata, such as data elements and organisation units, in DXF 2 format.');\nconst PAGE_ICON = <DataIcon />;\nconst today = new Date();\nconst initialValues = {\n  selectedOrgUnits: [],\n  includeChildren: true,\n  selectedDataSets: [],\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  startDate: new Date(today.getFullYear(), today.getMonth() - 3, today.getDate()),\n  endDate: today,\n  includeDeleted: false,\n  dataElementIdScheme: defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: defaultOrgUnitIdSchemeOption,\n  idScheme: defaultIdSchemeOption\n};\n\nconst DataExport = () => {\n  const [exportEnabled, setExportEnabled] = useState(true);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl, setExportEnabled);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={!exportEnabled} dataTest=\"page-export-data\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} validate={validate} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <OrgUnitTree />\n                            <IncludeChildren />\n                            <DataSetPicker />\n                            <Dates label={i18n.t('Date range to export data for')}>\n                                <StartDate />\n                                <EndDate />\n                            </Dates>\n                            <Format availableFormats={formatOptions} />\n                            <Compression />\n                        </BasicOptions>\n                        <MoreOptions>\n                            <IncludeDeleted />\n                            <SchemeContainer>\n                                <DataElementIdScheme />\n                                <OrgUnitIdScheme />\n                                <IdScheme />\n                            </SchemeContainer>\n                        </MoreOptions>\n                        <ValidationSummary />\n                        <ExportButton label={i18n.t('Export data')} disabled={!exportEnabled} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { DataExport };","import { locationAssign } from '../../utils/helper';\nimport i18n from '@dhis2/d2-i18n';\nimport { jsDateToISO8601, pathToId } from '../../utils/helper';\nimport { OU_MODE_MANUAL_VALUE } from '../../components/Inputs/index';\nimport { DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR } from '../../components/DatePicker/DatePickerField'; // calculate minimum set of parameters based on given filters\n\nconst valuesToParams = ({\n  selectedOrgUnits,\n  selectedUsers,\n  selectedPrograms,\n  selectedTETypes,\n  ouMode,\n  inclusion,\n  format,\n  includeDeleted,\n  includeAllAttributes,\n  dataElementIdScheme,\n  eventIdScheme,\n  orgUnitIdScheme,\n  idScheme,\n  assignedUserModeFilter,\n  assignedUserMode,\n  teiTypeFilter,\n  programStatus,\n  followUpStatus,\n  programStartDate,\n  programEndDate,\n  lastUpdatedFilter,\n  lastUpdatedStartDate,\n  lastUpdatedEndDate,\n  lastUpdatedDuration\n}, filename) => {\n  const minParams = {\n    ouMode: ouMode,\n    format: format,\n    includeDeleted: includeDeleted.toString(),\n    includeAllAttributes: includeAllAttributes.toString(),\n    dataElementIdScheme: dataElementIdScheme,\n    eventIdScheme: eventIdScheme,\n    orgUnitIdScheme: orgUnitIdScheme,\n    idScheme: idScheme,\n    attachment: filename\n  }; // include selected org.units only when manual selection is selected\n  // ouMode is then stored in the `inclusion` field\n\n  if (ouMode === OU_MODE_MANUAL_VALUE) {\n    minParams.ou = selectedOrgUnits.map(o => pathToId(o)).join(';');\n    minParams.ouMode = inclusion;\n  }\n\n  if (assignedUserModeFilter) {\n    minParams.assignedUserMode = assignedUserMode;\n\n    if (assignedUserMode == 'PROVIDED') {\n      minParams.assignedUser = selectedUsers.join(';');\n    }\n  }\n\n  if (teiTypeFilter == 'PROGRAM') {\n    minParams.program = selectedPrograms;\n\n    if (programStatus) {\n      // programStatus = ALL is now the same\n      // as not providing a value for this param at all\n      minParams.programStatus = programStatus;\n    }\n\n    minParams.followUpStatus = followUpStatus;\n\n    if (programStartDate) {\n      minParams.programStartDate = jsDateToISO8601(programStartDate);\n    }\n\n    if (programEndDate) {\n      minParams.programEndDate = jsDateToISO8601(programEndDate);\n    }\n  }\n\n  if (teiTypeFilter == 'TE') {\n    minParams.trackedEntity = selectedTETypes;\n  }\n\n  if (lastUpdatedFilter == 'DATE') {\n    if (lastUpdatedStartDate) {\n      minParams.lastUpdatedStartDate = jsDateToISO8601(lastUpdatedStartDate);\n    }\n\n    if (lastUpdatedEndDate) {\n      minParams.lastUpdatedEndDate = jsDateToISO8601(lastUpdatedEndDate);\n    }\n  }\n\n  if (lastUpdatedFilter == 'DURATION') {\n    minParams.lastUpdatedDuration = lastUpdatedDuration;\n  }\n\n  return Object.keys(minParams).map(param => `${param}=${minParams[param]}`).join('&');\n};\n\nconst onExport = (baseUrl, setExportEnabled) => async values => {\n  setExportEnabled(false);\n  const {\n    format\n  } = values; // generate URL and redirect\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `trackedEntityInstances`;\n  const filename = `${endpoint}.${format}`;\n  const downloadUrlParams = valuesToParams(values, filename);\n  const url = `${apiBaseUrl}${endpoint}.${format}?${downloadUrlParams}`;\n  locationAssign(url, setExportEnabled); // log for debugging purposes\n\n  console.log('tei-export:', {\n    url,\n    params: downloadUrlParams\n  });\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (values.teiTypeFilter == 'PROGRAM' && values.programStartDate && values.programEndDate) {\n    errors.programStartDate = DATE_BEFORE_VALIDATOR(values.programStartDate, values.programEndDate);\n    errors.programEndDate = DATE_AFTER_VALIDATOR(values.programEndDate, values.programStartDate);\n  }\n\n  if (values.lastUpdatedFilter == 'DATE' && values.lastUpdatedStartDate && values.lastUpdatedEndDate) {\n    errors.lastUpdatedStartDate = DATE_BEFORE_VALIDATOR(values.lastUpdatedStartDate, values.lastUpdatedEndDate);\n    errors.lastUpdatedEndDate = DATE_AFTER_VALIDATOR(values.lastUpdatedEndDate, values.lastUpdatedStartDate);\n  }\n\n  if (values.lastUpdatedFilter == 'DATE' && !values.lastUpdatedStartDate && !values.lastUpdatedEndDate) {\n    errors.lastUpdatedEndDate = i18n.t(\"At least one of the 'last updated' date fields must be specified\");\n  }\n\n  return errors;\n};\n\nexport { onExport, validate };","import React, { useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { Format, formatOptions, defaultFormatOption, OrgUnitMode, defaultOrgUnitSelectionModeOption, defaultInclusionOption, TEITypeFilter, defaultTEITypeFilterOption, ProgramStatus, defaultProgramStatusOption, FollowUpStatus, defaultFollowUpStatusOption, Dates, ProgramStartDate, ProgramEndDate, ProgramPicker, TETypePicker, LastUpdatedFilter, defaultLastUpdatedFilterOption, LastUpdatedStartDate, LastUpdatedEndDate, LastUpdatedDuration, AssignedUserMode, defaultAssignedUserModeOption, IncludeDeleted, IncludeAllAttributes, DataElementIdScheme, defaultDataElementIdSchemeOption, EventIdScheme, defaultEventIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ExportButton, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MoreOptions, BasicOptions, SchemeContainer, TEIIcon, ValidationSummary } from '../../components/index';\nimport { onExport, validate } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nexport const PAGE_NAME = i18n.t('Tracked entity instances export');\nexport const PAGE_DESCRIPTION = i18n.t('Export tracked entity instances in XML, JSON or CSV format.');\nconst PAGE_ICON = <TEIIcon />;\nconst initialValues = {\n  selectedOrgUnits: [],\n  selectedPrograms: [],\n  selectedTETypes: [],\n  selectedUsers: [],\n  format: defaultFormatOption,\n  ouMode: defaultOrgUnitSelectionModeOption,\n  inclusion: defaultInclusionOption,\n  teiTypeFilter: defaultTEITypeFilterOption,\n  programStatus: defaultProgramStatusOption,\n  followUpStatus: defaultFollowUpStatusOption,\n  programStartDate: '',\n  programEndDate: '',\n  compression: '',\n  // disable compression until it is properly implemented in the backend\n  lastUpdatedFilter: defaultLastUpdatedFilterOption,\n  lastUpdatedStartDate: '',\n  lastUpdatedEndDate: '',\n  lastUpdatedDuration: '',\n  assignedUserModeFilter: false,\n  assignedUserMode: defaultAssignedUserModeOption,\n  includeDeleted: false,\n  includeAllAttributes: false,\n  dataElementIdScheme: defaultDataElementIdSchemeOption,\n  eventIdScheme: defaultEventIdSchemeOption,\n  orgUnitIdScheme: defaultOrgUnitIdSchemeOption,\n  idScheme: defaultIdSchemeOption\n};\n\nconst TEIExport = () => {\n  const [exportEnabled, setExportEnabled] = useState(true);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl, setExportEnabled);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={!exportEnabled} dataTest=\"page-export-tei\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} validate={validate} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => {\n      const showProgramFilters = values.teiTypeFilter == 'PROGRAM';\n      const showTEFilters = values.teiTypeFilter == 'TE';\n      const showLUDates = values.lastUpdatedFilter == 'DATE';\n      const showLUDuration = values.lastUpdatedFilter == 'DURATION';\n      return <form onSubmit={handleSubmit}>\n                            <BasicOptions>\n                                <OrgUnitMode value={values.ouMode} />\n                                <TEITypeFilter />\n                                <ProgramPicker label={i18n.t('Program to export from')} show={showProgramFilters} />\n                                <ProgramStatus show={showProgramFilters} />\n                                <FollowUpStatus show={showProgramFilters} />\n                                <Dates label={i18n.t('Enrollment date range')} show={showProgramFilters}>\n                                    <ProgramStartDate show={showProgramFilters} />\n                                    <ProgramEndDate show={showProgramFilters} />\n                                </Dates>\n                                <TETypePicker show={showTEFilters} />\n                                <Format availableFormats={formatOptions} />\n                            </BasicOptions>\n                            <MoreOptions>\n                                <LastUpdatedFilter />\n                                <Dates show={showLUDates}>\n                                    <LastUpdatedStartDate show={showLUDates} />\n                                    <LastUpdatedEndDate show={showLUDates} />\n                                </Dates>\n                                <LastUpdatedDuration show={showLUDuration} />\n                                <AssignedUserMode />\n                                <IncludeDeleted />\n                                <IncludeAllAttributes />\n                                <SchemeContainer>\n                                    <DataElementIdScheme />\n                                    <EventIdScheme />\n                                    <OrgUnitIdScheme />\n                                    <IdScheme />\n                                </SchemeContainer>\n                            </MoreOptions>\n                            <ValidationSummary />\n                            <ExportButton label={i18n.t('Export tracked entity instances')} disabled={!exportEnabled} />\n                            <FormAlerts alerts={submitError} />\n                        </form>;\n    }} />\n        </Page>;\n};\n\nexport { TEIExport };","import { FORM_ERROR, jobStartedMessage } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    format,\n    identifier,\n    importReportMode,\n    preheatMode,\n    strategy,\n    atomicMode,\n    mergeMode,\n    flushMode,\n    skipSharing,\n    skipValidation,\n    inclusionStrategy,\n    isAsync,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    eventIdScheme,\n    idScheme\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'trackedEntityInstances.json';\n  const params = [`importMode=${dryRun ? 'VALIDATE' : 'COMMIT'}`, `identifier=${identifier}`, `importReportMode=${importReportMode}`, `preheatMode=${preheatMode}`, `strategy=${strategy}`, `atomicMode=${atomicMode}`, `mergeMode=${mergeMode}`, `flushMode=${flushMode}`, `skipSharing=${skipSharing}`, `skipValidation=${skipValidation}`, `inclusionStrategy=${inclusionStrategy}`, `async=${isAsync}`, `format=${format}`, `dataElementIdScheme=${dataElementIdScheme}`, `orgUnitIdScheme=${orgUnitIdScheme}`, `eventIdScheme=${eventIdScheme}`, `idScheme=${idScheme}`].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format,\n      type: 'TEI_IMPORT',\n      isAsync: isAsync,\n      setProgress,\n      addEntry: (id, entry) => addTask('tei', id, { ...entry,\n        jobDetails: values\n      })\n    });\n    return jobStartedMessage;\n  } catch (e) {\n    const formErrors = validate(values);\n    const allErrors = {\n      [FORM_ERROR]: [e],\n      ...formErrors\n    };\n    return allErrors;\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nconst validate = () => {\n  return {};\n};\n\nexport { onImport, validate };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails, getInitialBoolValue } from '../../utils/helper';\nimport { FileUpload, Format, formatNoCsvOptions, defaultFormatOption, Identifier, defaultIdentifierOption, ImportReportMode, defaultImportReportModeOption, PreheatMode, defaultPreheatModeOption, Strategy, defaultStrategyOption, AtomicMode, defaultAtomicModeOption, MergeMode, defaultMergeModeOption, FlushMode, defaultFlushModeOption, SkipSharing, defaultSkipSharingOption, SkipValidation, defaultSkipValidationOption, InclusionStrategy, defaultInclusionStrategyOption, ImportButtonStrip, FormAlerts, DataElementIdScheme, defaultDataElementIdSchemeOption, EventIdScheme, defaultEventIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption } from '../../components/Inputs/index';\nimport { Page, TEIIcon, MoreOptions, SchemeContainer, BasicOptions, ValidationSummary } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nexport const PAGE_NAME = i18n.t('Tracked entity instances import');\nexport const PAGE_DESCRIPTION = i18n.t('Import tracked entity instances from JSON or XML files.');\nconst PAGE_ICON = <TEIIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  identifier: prevJobDetails.identifier || defaultIdentifierOption,\n  importReportMode: prevJobDetails.importReportMode || defaultImportReportModeOption,\n  preheatMode: prevJobDetails.preheatMode || defaultPreheatModeOption,\n  strategy: prevJobDetails.strategy || defaultStrategyOption,\n  atomicMode: prevJobDetails.atomicMode || defaultAtomicModeOption,\n  mergeMode: prevJobDetails.mergeMode || defaultMergeModeOption,\n  flushMode: prevJobDetails.flushMode || defaultFlushModeOption,\n  inclusionStrategy: prevJobDetails.inclusionStrategy || defaultInclusionStrategyOption,\n  skipSharing: getInitialBoolValue(prevJobDetails.skipSharing, defaultSkipSharingOption),\n  skipValidation: getInitialBoolValue(prevJobDetails.skipValidation, defaultSkipValidationOption),\n  // disable async until it is fully implemented for this resource\n  // (expected 2.36)\n  isAsync: false,\n  dataElementIdScheme: prevJobDetails.dataElementIdScheme || defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: prevJobDetails.orgUnitIdScheme || defaultOrgUnitIdSchemeOption,\n  eventIdScheme: prevJobDetails.eventIdScheme || defaultEventIdSchemeOption,\n  idScheme: prevJobDetails.idScheme || defaultIdSchemeOption\n});\n\nconst TEIImport = () => {\n  const {\n    tasks: {\n      tei: teiTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, teiTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-tei\" summaryTask={getNewestTask(teiTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      values,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <FileUpload helpText={i18n.t('Supported file types: JSON and XML.', {\n          nsSeparator: '>'\n        })} />\n                            <Format availableFormats={formatNoCsvOptions} type=\"import\" />\n                            <Identifier />\n                            <ImportReportMode />\n                            <PreheatMode />\n                            <Strategy value={values.strategy} />\n                            <AtomicMode />\n                            <MergeMode />\n                        </BasicOptions>\n                        <MoreOptions>\n                            <FlushMode />\n                            <SkipSharing />\n                            <SkipValidation />\n                            <InclusionStrategy />\n                            <SchemeContainer>\n                                <DataElementIdScheme />\n                                <EventIdScheme />\n                                <OrgUnitIdScheme />\n                                <IdScheme />\n                            </SchemeContainer>\n                        </MoreOptions>\n                        <ValidationSummary />\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { TEIImport };","import React from 'react';\nimport { Card } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from '@dhis2/prop-types';\nimport styles from './HomeCard.module.css';\n\nconst HomeCard = ({\n  titleText,\n  bodyText,\n  linkText,\n  to\n}) => {\n  return <Card>\n            <div className={styles.container}>\n                <h2 className={styles.title}>{titleText}</h2>\n                <p className={styles.body}>{bodyText}</p>\n                <div className={styles.linkContainer}>\n                    <Link className={styles.link} to={to}>\n                        {linkText}\n                    </Link>\n                </div>\n            </div>\n        </Card>;\n};\n\nHomeCard.propTypes = {\n  bodyText: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired,\n  titleText: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired\n};\nexport { HomeCard };","import i18n from '@dhis2/d2-i18n';\n\nconst capitalizeFirstLetter = string => string.charAt(0).toUpperCase() + string.slice(1);\n\nconst capitalizeName = name => name.split(' ').map(capitalizeFirstLetter).join(' ');\n\nconst capitalizePages = pages => pages.map(p => ({ ...p,\n  name: capitalizeName(p.name)\n})); // export pages\n\n\nimport { PAGE_NAME as DATA_EXPORT_PAGE_NAME, PAGE_DESCRIPTION as DATA_EXPORT_DESCRIPTION } from '../DataExport/DataExport';\nimport { PAGE_NAME as EVENT_EXPORT_PAGE_NAME, PAGE_DESCRIPTION as EVENT_EXPORT_DESCRIPTION } from '../EventExport/EventExport';\nimport { PAGE_NAME as METADATA_DEPENDENCY_EXPORT_PAGE_NAME, PAGE_DESCRIPTION as METADATA_DEPENDENCY_EXPORT_DESCRIPTION } from '../MetadataDependencyExport/MetadataDependencyExport';\nimport { PAGE_NAME as METADATA_EXPORT_PAGE_NAME, PAGE_DESCRIPTION as METADATA_EXPORT_DESCRIPTION } from '../MetadataExport/MetadataExport';\nimport { PAGE_NAME as TEI_EXPORT_PAGE_NAME, PAGE_DESCRIPTION as TEI_EXPORT_DESCRIPTION } from '../TEIExport/TEIExport'; // import pages\n\nimport { PAGE_NAME as DATA_IMPORT_PAGE_NAME, PAGE_DESCRIPTION as DATA_IMPORT_DESCRIPTION } from '../DataImport/DataImport';\nimport { PAGE_NAME as EVENT_IMPORT_PAGE_NAME, PAGE_DESCRIPTION as EVENT_IMPORT_DESCRIPTION } from '../EventImport/EventImport';\nimport { PAGE_NAME as GML_IMPORT_PAGE_NAME, PAGE_DESCRIPTION as GML_IMPORT_DESCRIPTION } from '../GMLImport/GMLImport';\nimport { PAGE_NAME as METADATA_IMPORT_PAGE_NAME, PAGE_DESCRIPTION as METADATA_IMPORT_DESCRIPTION } from '../MetadataImport/MetadataImport';\nimport { PAGE_NAME as TEI_IMPORT_PAGE_NAME, PAGE_DESCRIPTION as TEI_IMPORT_DESCRIPTION } from '../TEIImport/TEIImport';\nconst exportPages = capitalizePages([{\n  name: DATA_EXPORT_PAGE_NAME,\n  description: DATA_EXPORT_DESCRIPTION,\n  linkText: i18n.t('Export data'),\n  to: '/export/data'\n}, {\n  name: EVENT_EXPORT_PAGE_NAME,\n  description: EVENT_EXPORT_DESCRIPTION,\n  linkText: i18n.t('Export events'),\n  to: '/export/event'\n}, {\n  name: METADATA_DEPENDENCY_EXPORT_PAGE_NAME,\n  description: METADATA_DEPENDENCY_EXPORT_DESCRIPTION,\n  linkText: i18n.t('Export metadata dependencies'),\n  to: '/export/metadata-dependency'\n}, {\n  name: METADATA_EXPORT_PAGE_NAME,\n  description: METADATA_EXPORT_DESCRIPTION,\n  linkText: i18n.t('Export metadata'),\n  to: '/export/metadata'\n}, {\n  name: TEI_EXPORT_PAGE_NAME,\n  description: TEI_EXPORT_DESCRIPTION,\n  linkText: i18n.t('Export tracked entity instances'),\n  to: '/export/tei'\n}]);\nconst importPages = capitalizePages([{\n  name: DATA_IMPORT_PAGE_NAME,\n  description: DATA_IMPORT_DESCRIPTION,\n  linkText: i18n.t('Import data'),\n  to: '/import/data'\n}, {\n  name: EVENT_IMPORT_PAGE_NAME,\n  description: EVENT_IMPORT_DESCRIPTION,\n  linkText: i18n.t('Import events'),\n  to: '/import/event'\n}, {\n  name: GML_IMPORT_PAGE_NAME,\n  description: GML_IMPORT_DESCRIPTION,\n  linkText: i18n.t('Import GML'),\n  to: '/import/gml'\n}, {\n  name: METADATA_IMPORT_PAGE_NAME,\n  description: METADATA_IMPORT_DESCRIPTION,\n  linkText: i18n.t('Import metadata'),\n  to: '/import/metadata'\n}, {\n  name: TEI_IMPORT_PAGE_NAME,\n  description: TEI_IMPORT_DESCRIPTION,\n  linkText: i18n.t('Import tracked entity instances'),\n  to: '/import/tei'\n}]);\nexport { exportPages, importPages };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Page } from '../../components/index';\nimport { HomeCard } from './HomeCard';\nimport styles from './Home.module.css';\nimport { importPages, exportPages } from './pages'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Overview: Import/Export', {\n  nsSeparator: '>'\n});\nconst PAGE_DESCRIPTION = i18n.t('Import or export DHIS2 data.');\n\nconst Home = () => <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} dataTest=\"page-overview\">\n        <h2 className={styles.categoryTitle}>{i18n.t('Import')}</h2>\n        <div className={styles.grid}>\n            {importPages.map(({\n      name,\n      description,\n      linkText,\n      to\n    }, i) => <HomeCard key={i} titleText={name} bodyText={description} linkText={linkText} to={to} />)}\n        </div>\n        <h2 className={styles.categoryTitle}>{i18n.t('Export')}</h2>\n        <div className={styles.grid}>\n            {exportPages.map(({\n      name,\n      description,\n      linkText,\n      to\n    }, i) => <HomeCard key={i} titleText={name} bodyText={description} linkText={linkText} to={to} />)}\n        </div>\n    </Page>;\n\nexport { Home };","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { ScrollToTop } from '../Router/ScrollToTop';\nimport { DataImport, DataExport, EventExport, EventImport, GMLImport, MetadataDependencyExport, MetadataExport, MetadataImport, TEIExport, TEIImport, JobOverview, Home } from '../../pages';\n\nconst Router = () => {\n  return <ScrollToTop>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/import/data\" component={DataImport} />\n                <Route path=\"/import/event\" component={EventImport} />\n                <Route path=\"/import/gml\" component={GMLImport} />\n                <Route path=\"/import/metadata\" component={MetadataImport} />\n                <Route path=\"/import/tei\" component={TEIImport} />\n                <Route path=\"/export/data\" component={DataExport} />\n                <Route path=\"/export/event\" component={EventExport} />\n                <Route path=\"/export/metadata-dependency\" component={MetadataDependencyExport} />\n                <Route path=\"/export/metadata\" component={MetadataExport} />\n                <Route path=\"/export/tei\" component={TEIExport} />\n                <Route path=\"/utils/job-overview\" component={JobOverview} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </ScrollToTop>;\n};\n\nexport { Router };","/**\n * Group and sort schemas\n * ======================\n */\nconst groupSchemas = schemas => schemas.reduce((groups, schema) => {\n  const {\n    group\n  } = schema;\n  return { ...groups,\n    // add schema to \"group\" collection if existing,\n    // otherwise create new collection with schema as first entry\n    [group]: groups[group] ? [...groups[group], schema] : [schema]\n  };\n}, {});\n\nconst combineSingleItemGroups = groups => {\n  const groupNames = Object.keys(groups);\n  return groupNames.reduce((combinedGroups, groupName) => {\n    const group = groups[groupName];\n\n    if (group.length === 1) {\n      return { ...combinedGroups,\n        other: [...combinedGroups.other, group[0]]\n      };\n    }\n\n    return { ...combinedGroups,\n      [groupName]: group\n    };\n  }, {\n    other: []\n  });\n};\n/**\n * Get group label helpers\n * =======================\n */\n\n/**\n * This function will loop through all schemas and\n * compare the the lower case groupKey with\n * the schemas' name.\n * If a match is found, that match will be returned\n */\n\n\nfunction findLabelByLowerCaseComparison(groupKey, schemas) {\n  const isGroupKeyMatchingLowerCaseSchemaName = schemaName => groupKey === schemaName.toLowerCase();\n\n  return schemas.reduce((foundLabel, {\n    name: schemaName,\n    displayName\n  }) => {\n    // do not try to compare anything if a label already\n    // has been found\n    if (foundLabel) return foundLabel;\n\n    if (isGroupKeyMatchingLowerCaseSchemaName(schemaName)) {\n      return displayName;\n    }\n\n    return foundLabel;\n  }, '');\n}\n\nconst ucFirst = str => str[0].toUpperCase() + str.substr(1);\n/**\n * This function will go through all schemas\n * and will compare the scheme name with the\n * lower case group key at position 0 of the schema key.\n * Once a match is found, the match will be extracted,\n * spaces will be inserted before all capital letters\n * and the result returned\n */\n\n\nfunction findKeyByCamelCaseComparison(groupKey, schemas) {\n  const isGroupKeyInSchemaName = schemaName => schemaName.includes(groupKey) && schemaName.indexOf(groupKey) === 0; // Will return either a label or an empty string\n  // if no match for the groupKey was found\n\n\n  return schemas.reduce((foundLabel, {\n    name: schemaName\n  }) => {\n    // do not try to compare anything if a label already\n    // has been found\n    if (foundLabel) return foundLabel;\n    const lowerCaseSchemaName = schemaName.toLowerCase();\n\n    if (isGroupKeyInSchemaName(lowerCaseSchemaName)) {\n      return ucFirst(schemaName // extract part that matches the groupKey\n      .substr(0, groupKey.length) // insert space before capital letters\n      .replace(/([A-Z]+)/g, ' $1'));\n    }\n\n    return foundLabel;\n  }, '');\n}\n\nfunction extractGroupLabelFromSchemas(groupKey, schemas) {\n  const lowerCaseGroupKey = groupKey.toLowerCase();\n\n  if (lowerCaseGroupKey === 'oauth2' || lowerCaseGroupKey === 'other') {\n    return groupKey;\n  }\n\n  return findLabelByLowerCaseComparison(lowerCaseGroupKey, schemas) || findKeyByCamelCaseComparison(lowerCaseGroupKey, schemas) || groupKey[0].toUpperCase() + groupKey.substr(1);\n}\n\nconst getSchemaGroups = schemas => {\n  const groups = groupSchemas(schemas);\n  const combinedGroups = combineSingleItemGroups(groups);\n  return combinedGroups;\n};\n\nconst getGroupLabels = schemaGroups => {\n  return Object.entries(schemaGroups).reduce((groupLabels, [groupKey, schemas]) => {\n    const label = extractGroupLabelFromSchemas(groupKey, schemas);\n    return { ...groupLabels,\n      [groupKey]: label\n    };\n  }, {});\n};\n\nconst getGroupOrder = schemas => {\n  const groupKeys = Object.keys(schemas);\n  groupKeys.sort();\n  return groupKeys;\n};\n\nconst filterOutExcludedSchemas = (excludedSchemas, schemas) => schemas.filter(schema => schema.metadata && !excludedSchemas.has(schema.collectionName));\n\nconst groupName = klass => {\n  const group = klass.split('.');\n  group.pop();\n\n  if (!klass.includes('.dhis')) {\n    group.pop();\n  }\n\n  return group[group.length - 1].replace(/(.)([A-Z])/g, '$1 $2');\n};\n\nconst formatSchemas = (schemas, checkedByDefault) => schemas.map(schema => ({\n  checked: checkedByDefault,\n  label: schema.displayName,\n  name: schema.collectionName,\n  group: groupName(schema.klass)\n}));\n\nexport { filterOutExcludedSchemas, groupName, formatSchemas, getSchemaGroups, getGroupLabels, getGroupOrder };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from '@dhis2/ui';\nimport styles from './Schemas.module.css';\n\nconst SchemaGroup = ({\n  label,\n  schemas,\n  toggleSchema,\n  dataTest\n}) => <div className={styles.group} data-test={dataTest}>\n        <span className={styles.formLabel}>{label}</span>\n        <div className={styles.schema}>\n            {schemas.map((schema, ind) => <div key={schema.name}>\n                    <Checkbox label={schema.label} name={`schemas.${schema.name}`} value={`schemas.${schema.name}`} checked={schema.checked} onChange={() => toggleSchema(ind)} />\n                </div>)}\n        </div>\n    </div>;\n\nSchemaGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  schemas: PropTypes.arrayOf(PropTypes.exact({\n    checked: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    group: PropTypes.string.isRequired\n  })).isRequired,\n  toggleSchema: PropTypes.func.isRequired,\n  dataTest: PropTypes.string\n};\nexport { SchemaGroup };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, CircularLoader, Help } from '@dhis2/ui';\nimport { filterOutExcludedSchemas, formatSchemas, getSchemaGroups, getGroupLabels, getGroupOrder } from './helper';\nimport { SchemaGroup } from './SchemaGroup';\nimport styles from './Schemas.module.css';\nconst schemaQuery = {\n  schemas: {\n    resource: 'schemas',\n    params: {\n      fields: ['metadata', 'collectionName', 'displayName', 'klass']\n    }\n  }\n};\n\nconst Schemas = ({\n  excludeSchemas,\n  setCheckedSchemas,\n  meta,\n  checkedByDefault,\n  dataTest\n}) => {\n  const [schemaGroups, setSchemaGroups] = useState(undefined);\n  const [schemaGroupLabels, setSchemaGroupLabels] = useState(undefined);\n  const [schemaGroupOrder, setSchemaGroupOrder] = useState(undefined);\n  const {\n    error,\n    loading\n  } = useDataQuery(schemaQuery, {\n    onComplete: data => {\n      const schemas = data.schemas.schemas;\n      const filteredSchemas = filterOutExcludedSchemas(excludeSchemas, schemas);\n      const formattedSchemas = formatSchemas(filteredSchemas, checkedByDefault);\n      const groups = getSchemaGroups(formattedSchemas);\n      setSchemaGroups(groups);\n      setSchemaGroupOrder(getGroupOrder(groups));\n      setSchemaGroupLabels(getGroupLabels(groups));\n      propagateCheckedSchemas(groups);\n    },\n    onError: error => {\n      console.error('Schemas error: ', error);\n    }\n  });\n\n  const propagateCheckedSchemas = updatedSchemaGroups => {\n    setCheckedSchemas(Object.keys(updatedSchemaGroups).reduce((acc, groupName) => [...acc, ...updatedSchemaGroups[groupName].filter(s => s.checked).map(s => s.name)], []));\n  };\n\n  const onSelectGeneric = val => () => {\n    const updatedSchemaGroups = Object.keys(schemaGroups).reduce((acc, groupName) => ({ ...acc,\n      [groupName]: schemaGroups[groupName].reduce((grAcc, group) => [...grAcc, { ...group,\n        checked: val\n      }], [])\n    }), {});\n    setSchemaGroups(updatedSchemaGroups);\n    propagateCheckedSchemas(updatedSchemaGroups);\n  };\n\n  const toggleSchema = schemaGroup => ind => {\n    const updatedGroup = [...schemaGroups[schemaGroup]];\n    updatedGroup[ind] = { ...updatedGroup[ind],\n      checked: !updatedGroup[ind].checked\n    };\n    const updatedSchemaGroups = { ...schemaGroups,\n      [schemaGroup]: updatedGroup\n    };\n    setSchemaGroups(updatedSchemaGroups);\n    propagateCheckedSchemas(updatedSchemaGroups);\n  };\n\n  const showSchemas = !loading && !error;\n  return <div className={styles.container} data-test={dataTest}>\n            {loading && <CircularLoader dataTest={`${dataTest}-loading`} />}\n            {error && <div data-test={`${dataTest}-error`}>\n                    <p>\n                        {i18n.t('Something went wrong when loading the schemas!')}\n                    </p>\n                    <p>{error.message}</p>\n                </div>}\n            {showSchemas && <>\n                    <ButtonStrip>\n                        <Button onClick={onSelectGeneric(true)} dataTest={`${dataTest}-select-all`}>\n                            {i18n.t('Select All')}\n                        </Button>\n                        <Button onClick={onSelectGeneric(false)} dataTest={`${dataTest}-select-none`}>\n                            {i18n.t('Select None')}\n                        </Button>\n                    </ButtonStrip>\n\n                    <div className={styles.formControl}>\n                        {schemaGroupOrder.map(groupKey => {\n          const label = schemaGroupLabels[groupKey];\n          return <SchemaGroup key={label} label={label} schemas={schemaGroups[groupKey]} toggleSchema={toggleSchema(groupKey)} />;\n        })}\n                    </div>\n                    {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n                </>}\n        </div>;\n};\n\nSchemas.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  excludeSchemas: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n  setCheckedSchemas: PropTypes.func.isRequired,\n  checkedByDefault: PropTypes.bool\n};\nexport { Schemas };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SingleSelectField, SingleSelectOption, Help } from '@dhis2/ui';\nimport { optionPropType, optionsPropType } from '../../utils/options';\nimport styles from './Select.module.css';\nimport { FormField } from '../index';\n\nconst Select = ({\n  name,\n  dataTest,\n  label,\n  options,\n  setValue,\n  selected,\n  noMatchText,\n  loading,\n  error,\n  meta,\n  warning,\n  validationText,\n  helpText,\n  filled,\n  dense,\n  filterable,\n  initialFocus\n}) => {\n  const optionEls = options.map(o => <SingleSelectOption key={o.value} value={o.value} label={o.label} />);\n\n  const onChange = ({\n    selected\n  }) => setValue(selected);\n\n  return <FormField label={label} dataTest={dataTest}>\n            <div className={styles.select} data-test={`${dataTest}-container`}>\n                <SingleSelectField dense={dense} filled={filled} initialFocus={initialFocus} loading={loading} warning={warning} error={error} name={name} onChange={onChange} selected={selected} filterable={filterable} noMatchText={noMatchText ? noMatchText : `No match found for filter`} helpText={helpText} validationText={validationText} dataTest={`${dataTest}-ssf`}>\n                    {optionEls}\n                </SingleSelectField>\n                {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n            </div>\n        </FormField>;\n};\n\nSelect.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  options: optionsPropType.isRequired,\n  setValue: PropTypes.func.isRequired,\n  dense: PropTypes.bool,\n  error: PropTypes.bool,\n  filled: PropTypes.bool,\n  filterable: PropTypes.bool,\n  helpText: PropTypes.string,\n  initialFocus: PropTypes.bool,\n  loading: PropTypes.bool,\n  noMatchText: PropTypes.string,\n  selected: optionPropType,\n  validationText: PropTypes.string,\n  warning: PropTypes.bool\n};\nexport { Select };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { Select } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  inputName,\n  ...rest\n}) => <Select name={inputName} meta={meta} selected={value || undefined} setValue={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.any,\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst SelectField = ({\n  name,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} inputName={name} {...rest} />;\n};\n\nSelectField.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport { SelectField };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuSectionHeader as UIHeader } from '@dhis2/ui';\nimport styles from './MenuSectionHeader.module.css';\n\nconst MenuSectionHeader = ({\n  label,\n  children\n}) => <UIHeader className={styles.sectionTitle} label={<span className={styles.label}>\n                <span className={styles.icon}>{children}</span>\n                {label}\n            </span>} hideDivider />;\n\nMenuSectionHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  label: PropTypes.string.isRequired\n};\nexport { MenuSectionHeader };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuSectionHeader } from './MenuSectionHeader';\nimport { ImportIcon } from '../index';\n\nconst ImportMenuSectionHeader = () => <MenuSectionHeader label={i18n.t('Import')}>\n        <ImportIcon />\n    </MenuSectionHeader>;\n\nexport { ImportMenuSectionHeader };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuSectionHeader } from './MenuSectionHeader';\nimport { ExportIcon } from '../index';\n\nconst ExportMenuSectionHeader = () => <MenuSectionHeader label={i18n.t('Export')}>\n        <ExportIcon />\n    </MenuSectionHeader>;\n\nexport { ExportMenuSectionHeader };","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, Menu, MenuItem } from '@dhis2/ui';\nimport styles from './Sidebar.module.css';\nimport { DataIcon, EventIcon, GMLIcon, MetadataDependencyExportIcon, MetadataExportIcon, MetadataImportIcon, TEIIcon, TasksIcon } from '../index';\nimport { ImportMenuSectionHeader } from './ImportMenuSectionHeader';\nimport { ExportMenuSectionHeader } from './ExportMenuSectionHeader';\nconst dataImportPage = {\n  name: i18n.t('Data import'),\n  code: 'data-import',\n  icon: <DataIcon />,\n  path: '/import/data'\n};\nconst eventImportPage = {\n  name: i18n.t('Event import'),\n  code: 'event-import',\n  icon: <EventIcon />,\n  path: '/import/event'\n};\nconst gmlImportPage = {\n  name: i18n.t('GML import'),\n  code: 'gml-import',\n  icon: <GMLIcon />,\n  path: '/import/gml'\n};\nconst metadataImportPage = {\n  name: i18n.t('Metadata import'),\n  code: 'metadata-import',\n  path: '/import/metadata',\n  icon: <MetadataImportIcon />\n};\nconst teiImportPage = {\n  name: i18n.t('TEI import'),\n  code: 'tei-import',\n  path: '/import/tei',\n  icon: <TEIIcon />\n};\nconst dataExportPage = {\n  name: i18n.t('Data export'),\n  code: 'data-export',\n  path: '/export/data',\n  icon: <DataIcon />\n};\nconst eventExportPage = {\n  name: i18n.t('Event export'),\n  code: 'event-export',\n  path: '/export/event',\n  icon: <EventIcon />\n};\nconst metadataDependencyExportPage = {\n  name: i18n.t('Metadata dependency export'),\n  code: 'metadata-dependency-export',\n  path: '/export/metadata-dependency',\n  icon: <MetadataDependencyExportIcon />\n};\nconst metadataExportPage = {\n  name: i18n.t('Metadata export'),\n  code: 'metadata-export',\n  path: '/export/metadata',\n  icon: <MetadataExportIcon />\n};\nconst teiExportPage = {\n  name: i18n.t('TEI export'),\n  code: 'tei-export',\n  path: '/export/tei',\n  icon: <TEIIcon />\n};\nconst importPages = [dataImportPage, eventImportPage, gmlImportPage, metadataImportPage, teiImportPage];\nconst exportPages = [dataExportPage, eventExportPage, metadataDependencyExportPage, metadataExportPage, teiExportPage];\nconst jobOverviewPage = {\n  name: i18n.t('Job overview'),\n  code: 'job-overview',\n  path: '/utils/job-overview',\n  icon: <TasksIcon />\n};\n\nconst SidebarItem = ({\n  name,\n  path,\n  code,\n  active,\n  className\n}) => {\n  const history = useHistory();\n\n  const navigateToPath = () => history.push(path);\n\n  return <MenuItem active={active} onClick={navigateToPath} label={name} className={cx(className, {\n    [styles.sidebarItem]: !active,\n    [styles.sidebarItemActive]: active\n  })} dataTest={`sidebar-link-${code}`} />;\n};\n\nSidebarItem.propTypes = {\n  active: PropTypes.bool.isRequired,\n  code: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\n\nconst Sidebar = () => {\n  const location = useLocation();\n  const pathname = location.pathname;\n  return <Menu className={styles.Menu}>\n            <SidebarItem name={i18n.t('Overview')} path={'/'} code={'home'} active={pathname == '/'} />\n            <ImportMenuSectionHeader />\n            {importPages.map(({\n      icon,\n      name,\n      code,\n      path\n    }) => {\n      const active = pathname == path;\n      return <SidebarItem name={name} path={path} code={code} icon={icon} active={active} key={path} />;\n    })}\n            <ExportMenuSectionHeader />\n            {exportPages.map(({\n      icon,\n      name,\n      code,\n      path\n    }) => {\n      const active = pathname == path;\n      return <SidebarItem name={name} path={path} code={code} icon={icon} active={active} key={path} />;\n    })}\n            <Divider />\n            <SidebarItem name={jobOverviewPage.name} path={jobOverviewPage.path} code={jobOverviewPage.code} icon={jobOverviewPage.icon} active={pathname == jobOverviewPage.path} className={pathname == jobOverviewPage.path ? '' : styles.jobOverview} key={jobOverviewPage.path} />\n        </Menu>;\n};\n\nexport { Sidebar };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, Switch as SwitchUI } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst Wrapper = ({\n  input,\n  meta,\n  ...rest\n}) => <SwitchUI input={input} meta={meta} label={input.value ? i18n.t('Yes') : i18n.t('No')} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired\n};\n\nconst Switch = ({\n  name,\n  label,\n  help,\n  dataTest\n}) => {\n  return <FormField label={label} dataTest={dataTest}>\n            <Field component={Wrapper} name={name} helpText={help} dataTest={`${dataTest}-sf`} />\n        </FormField>;\n};\n\nSwitch.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  help: PropTypes.string\n};\nexport { Switch };","import { useContext } from 'react';\nimport { UserContext } from '../../contexts/index';\n\nconst WithAuthority = ({\n  pred,\n  children\n}) => {\n  const user = useContext(UserContext);\n  if (!user) return null;\n  return pred(user.authorities) ? children : null;\n};\n\nexport { WithAuthority };","const dataSetQuery = {\n  dataSets: {\n    resource: 'dataSets',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nconst programQuery = {\n  programs: {\n    resource: 'programs',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nconst TETypeQuery = {\n  trackedEntityTypes: {\n    resource: 'trackedEntityTypes',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nconst userQuery = {\n  users: {\n    resource: 'users',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nexport { dataSetQuery, programQuery, TETypeQuery, userQuery };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { ReactFinalForm, SingleSelectFieldFF, Transfer, CircularLoader, Help } from '@dhis2/ui';\nimport styles from './ResourcePicker.module.css';\nimport { dataSetQuery, programQuery, TETypeQuery, userQuery } from './queries';\nimport { resourceTypes } from './resourceTypes';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst resourceToQuery = resourceType => {\n  if (resourceType == resourceTypes.DATASET) {\n    return {\n      resourceName: 'dataSets',\n      query: dataSetQuery\n    };\n  } else if (resourceType == resourceTypes.PROGRAM) {\n    return {\n      resourceName: 'programs',\n      query: programQuery\n    };\n  } else if (resourceType == resourceTypes.TETYPE) {\n    return {\n      resourceName: 'trackedEntityTypes',\n      query: TETypeQuery\n    };\n  } else if (resourceType == resourceTypes.USER) {\n    return {\n      resourceName: 'users',\n      query: userQuery\n    };\n  }\n\n  return {\n    error: `Unkown resource type: ${resourceType}`\n  };\n};\n\nconst ResourcePicker = ({\n  label,\n  resourceType,\n  selected,\n  setSelected,\n  meta,\n  multiSelect,\n  withFilter,\n  autoSelectFirst,\n  dataTest,\n  listName,\n  filterLabel,\n  selectedLabel,\n  errorMessage\n}) => {\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(undefined);\n  const {\n    error: resourceError,\n    resourceName,\n    query\n  } = resourceToQuery(resourceType);\n\n  if (resourceError) {\n    console.error(`ResourcePicker: ${resourceError}`);\n    return null;\n  }\n\n  const {\n    loading\n  } = useDataQuery(query, {\n    onComplete: data => {\n      const elements = data[resourceName][resourceName];\n      const list = elements.map(({\n        id,\n        displayName\n      }) => ({\n        value: id,\n        label: displayName\n      }));\n      setList(list);\n\n      if (autoSelectFirst && list.length) {\n        setSelected({\n          selected: multiSelect ? [list[0].value] : list[0].value\n        });\n      }\n    },\n    onError: error => {\n      setError(error);\n      console.error(`ResourcePicker(${resourceName}) error: `, error);\n    }\n  });\n  const showList = !loading && !error;\n  return <FormField label={label} dataTest={dataTest}>\n            {loading && <CircularLoader dataTest={`${dataTest}-loading`} />}\n            {error && <Help error data-test={`${dataTest}-error`}>\n                    <p>{errorMessage}</p>\n                    <p>{error.message}</p>\n                </Help>}\n            {showList && (multiSelect ? <Transfer name={listName} label={filterLabel} selected={selected} onChange={setSelected} options={list} filterable={withFilter} filterPlaceholder={filterLabel} rightHeader={<p className={styles.selectedLabel}>\n                                {selectedLabel}\n                            </p>} dataTest={`${dataTest}-list`} loading={loading} /> : <Field component={SingleSelectFieldFF} name={listName} options={list} filterable={withFilter} dataTest={`${dataTest}-select`} loading={loading} />)}\n            {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n        </FormField>;\n};\n\nResourcePicker.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string.isRequired,\n  filterLabel: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  listName: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  resourceType: PropTypes.number.isRequired,\n  selected: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n  selectedLabel: PropTypes.string.isRequired,\n  setSelected: PropTypes.func.isRequired,\n  autoSelectFirst: PropTypes.bool,\n  multiSelect: PropTypes.bool,\n  withFilter: PropTypes.bool\n};\nResourcePicker.defaultProps = {\n  multiSelect: true,\n  withFilter: true\n};\nexport { ResourcePicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { ResourcePicker } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  ...rest\n}) => <ResourcePicker meta={meta} selected={value} setSelected={({\n  selected\n}) => onChange(selected)} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst ResourcePickerField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nResourcePickerField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { ResourcePickerField };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider } from '@dhis2/ui';\nimport styles from './BasicOptions.module.css';\nconst LABEL = i18n.t('Basic options');\n\nconst BasicOptions = ({\n  children\n}) => {\n  return <section className={styles.container}>\n            <header className={styles.header}>\n                <h2 className={styles.label}>{LABEL}</h2>\n                <Divider />\n            </header>\n            {children}\n        </section>;\n};\n\nBasicOptions.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired\n};\nexport { BasicOptions };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SchemeContainer.module.css';\n\nconst SchemeContainer = ({\n  children\n}) => <div className={styles.container}>{children}</div>;\n\nSchemeContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport { SchemeContainer };","import React from 'react';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport styles from './StyledField.module.css';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst StyledField = props => <div className={styles.container}>\n        <Field {...props} />\n    </div>;\n\nexport { StyledField };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, NoticeBox } from '@dhis2/ui';\nimport styles from './ValidationSummary.module.css';\nconst {\n  useFormState\n} = ReactFinalForm;\n\nconst transformErrors = errors => Object.entries(errors).map(([key, value]) => ({\n  name: key,\n  label: value\n})).filter(error => error.label);\n\nconst Error = ({\n  label\n}) => <li>{label}</li>;\n\nError.propTypes = {\n  label: PropTypes.string.isRequired\n};\n\nconst ValidationSummary = () => {\n  const {\n    errors,\n    submitFailed\n  } = useFormState();\n  const errorList = transformErrors(errors);\n  if (!submitFailed || !errorList.length) return null;\n  return <NoticeBox title={i18n.t('There are errors on this page')} className={styles.container} error>\n            <ul className={styles.errors}>\n                {errorList.map(({\n        name,\n        label\n      }) => <Error key={name} label={label} />)}\n            </ul>\n        </NoticeBox>;\n};\n\nexport { ValidationSummary };","import './locales';\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport i18n from './locales';\nimport { CssVariables, CssReset, CircularLoader, ScreenCover } from '@dhis2/ui-core';\nimport { TaskContext } from './contexts/';\nimport { UserContext } from './contexts/';\nimport { useUser, useTasks } from './hooks/';\nimport styles from './App.module.css';\nimport { Sidebar } from './components/';\nimport { Router } from './components/';\n\nconst App = () => {\n  const {\n    tasks,\n    addTask,\n    jobOverview,\n    updateJobOverview\n  } = useTasks();\n  const {\n    loading,\n    error,\n    user\n  } = useUser();\n  const showApp = !loading && !error;\n  return <>\n            <CssReset />\n            <CssVariables spacers colors />\n            {loading && <ScreenCover dataTest=\"app-screen-cover\">\n                    <CircularLoader dataTest=\"app-loader\" />\n                </ScreenCover>}\n            {error && <div data-test=\"app-error\">\n                    <p>\n                        {i18n.t('Something went wrong when loading the current user!')}\n                    </p>\n                    <p>{error.message}</p>\n                </div>}\n            {showApp && <HashRouter>\n                    <UserContext.Provider value={user}>\n                        <TaskContext.Provider value={{\n          tasks,\n          addTask,\n          jobOverview,\n          updateJobOverview\n        }}>\n                            <div className={styles.container}>\n                                <div className={styles.sidebar}>\n                                    <Sidebar />\n                                </div>\n                                <main className={styles.content}>\n                                    <Router />\n                                </main>\n                            </div>\n                        </TaskContext.Provider>\n                    </UserContext.Provider>\n                </HashRouter>}\n        </>;\n};\n\nexport default App;"],"sourceRoot":""}