{"version":3,"sources":["D2App/components/Schemas/Schemas.module.css","D2App/App.module.css","D2App/components/FormAlerts/FormAlerts.module.css","D2App/components/FormField/FormField.module.css","D2App/components/ImportButtonStrip/ImportButtonStrip.module.css","D2App/components/JobOverview/JobOverview.module.css","D2App/components/JobOverview/MenuLabel/MenuLabel.module.css","D2App/components/JobSummary/JobSummary.module.css","D2App/components/JobSummary/Summary/Summary.module.css","D2App/components/MoreOptions/MoreOptions.module.css","D2App/components/OrgUnitTree/OrgUnitTree.module.css","D2App/components/Page/Page.module.css","D2App/components/RadioGroup/RadioGroup.module.css","D2App/pages/JobOverview/JobOverview.module.css","D2App/components/Select/Select.module.css","D2App/components/SelectableList/SelectableList.module.css","D2App/components/Sidebar/Sidebar.module.css","D2App/components/StyledLink/StyledLink.module.css","D2App/contexts/User.js","D2App/contexts/Task.js","D2App/components/Icon/Icon.js","D2App/utils/tasks.js","D2App/hooks/useTasks.js","D2App/hooks/useUser.js","D2App/hooks/useProgramStages.js","D2App/hooks/useClassKeys.js","D2App/utils/mime.js","D2App/utils/xhr.js","D2App/utils/helper.js","D2App/utils/options.js","D2App/components/ElementSchemes/DataElementIdScheme.js","D2App/components/DatePicker/DatePicker.js","D2App/components/DatePicker/DatePickerField.js","D2App/components/ElementSchemes/EventIdScheme.js","D2App/components/FileUpload/FileUpload.js","D2App/components/FormAlerts/FormAlerts.js","D2App/components/FormField/FormField.js","D2App/components/ElementSchemes/IdScheme.js","D2App/components/ImportButtonStrip/ImportButtonStrip.js","D2App/components/JobOverview/helper.js","D2App/components/JobOverview/MenuLabel/MenuLabel.js","D2App/components/JobOverview/JobOverview.js","D2App/components/JobSummary/Events/Events.js","D2App/components/JobSummary/helper.js","D2App/components/JobSummary/SingleStatusTable/SingleStatusTable.js","D2App/components/JobSummary/SingleSummary/SingleSummary.js","D2App/components/JobSummary/TypeCount/TypeCount.js","D2App/components/JobSummary/Messages/Messages.js","D2App/components/JobSummary/TypeReportSummary/TypeReportSummary.js","D2App/components/JobSummary/Summary/Summary.js","D2App/components/JobSummary/Details/Details.js","D2App/components/JobSummary/JobSummary.js","D2App/components/JobSummary/MiniJobSummary/MiniJobSummary.js","D2App/components/MoreOptions/MoreOptions.js","D2App/components/ElementSchemes/OrgUnitIdScheme.js","D2App/components/OrgUnitTree/Tree/Tree.js","D2App/components/OrgUnitTree/OrgUnitTree.js","D2App/components/OrgUnitTree/OrgUnitTreeField.js","D2App/components/Page/Page.js","D2App/components/ProgramStages/ProgramStages.js","D2App/components/RadioGroup/RadioGroup.js","D2App/components/RadioGroup/RadioGroupField.js","D2App/components/Inputs/FileUpload.js","D2App/components/Inputs/ImportButtonStrip.js","D2App/components/Inputs/FormAlerts.js","D2App/components/Inputs/Format.js","D2App/components/Inputs/FirstRowIsHeader.js","D2App/components/Inputs/ClassKey.js","D2App/components/Inputs/Strategy.js","D2App/components/Inputs/PreheatCache.js","D2App/components/Inputs/SkipAudit.js","D2App/components/Inputs/SkipExistingCheck.js","D2App/components/Inputs/Identifier.js","D2App/components/Inputs/ImportReportMode.js","D2App/components/Inputs/PreheatMode.js","D2App/components/Inputs/ImportStrategy.js","D2App/components/Inputs/AtomicMode.js","D2App/components/Inputs/MergeMode.js","D2App/components/Inputs/FlushMode.js","D2App/components/Inputs/InclusionStrategy.js","D2App/components/Inputs/SkipSharing.js","D2App/components/Inputs/SkipValidation.js","D2App/components/Inputs/IsAsync.js","D2App/components/Inputs/OrgUnitTree.js","D2App/components/ResourcePicker/resourceTypes.js","D2App/components/Inputs/DataSetPicker.js","D2App/components/Inputs/ProgramPicker.js","D2App/components/Inputs/IncludeChildren.js","D2App/components/Inputs/IncludeDeleted.js","D2App/components/Inputs/Compression.js","D2App/components/Inputs/Inclusion.js","D2App/components/Inputs/StartDate.js","D2App/components/Inputs/EndDate.js","D2App/components/Inputs/ExportButton.js","D2App/components/Inputs/ProgramStages.js","D2App/components/Schemas/SchemasField.js","D2App/components/Inputs/Schemas.js","D2App/components/Inputs/ObjectType.js","D2App/components/Inputs/Objects.js","D2App/hooks/useObjects.js","D2App/components/Inputs/DataElementIdScheme.js","D2App/components/Inputs/EventIdScheme.js","D2App/components/Inputs/IdScheme.js","D2App/components/Inputs/OrgUnitIdScheme.js","D2App/components/WithAuthority/predicates.js","D2App/components/Inputs/OrgUnitMode.js","D2App/components/Inputs/TEITypeFilter.js","D2App/components/Inputs/ProgramStatus.js","D2App/components/Inputs/FollowUpStatus.js","D2App/components/Inputs/ProgramStartDate.js","D2App/components/Inputs/ProgramEndDate.js","D2App/components/Inputs/TETypePicker.js","D2App/components/Inputs/LastUpdatedFilter.js","D2App/components/Inputs/LastUpdatedStartDate.js","D2App/components/Inputs/LastUpdatedEndDate.js","D2App/components/Duration/DurationField.js","D2App/components/Inputs/LastUpdatedDuration.js","D2App/components/Inputs/AssignedUserMode.js","D2App/components/Inputs/UserPicker.js","D2App/components/Inputs/IncludeAllAttributes.js","D2App/utils/final-form.js","D2App/pages/MetadataImport/form-helper.js","D2App/pages/MetadataImport/MetadataImport.js","D2App/pages/MetadataExport/MetadataExport.js","D2App/pages/MetadataExport/form-helper.js","D2App/pages/MetadataDependencyExport/MetadataDependencyExport.js","D2App/pages/MetadataDependencyExport/form-helper.js","D2App/pages/JobOverview/JobOverview.js","D2App/pages/GMLImport/GMLImport.js","D2App/pages/GMLImport/form-helper.js","D2App/pages/EventImport/EventImport.js","D2App/pages/EventImport/form-helper.js","D2App/pages/EventExport/form-helper.js","D2App/pages/EventExport/EventExport.js","D2App/pages/DataImport/DataImport.js","D2App/pages/DataImport/form-helper.js","D2App/pages/DataExport/form-helper.js","D2App/pages/DataExport/DataExport.js","D2App/pages/TEIExport/form-helper.js","D2App/pages/TEIExport/TEIExport.js","D2App/pages/TEIImport/form-helper.js","D2App/pages/TEIImport/TEIImport.js","D2App/components/Router/Router.js","D2App/components/Schemas/helper.js","D2App/components/Schemas/SchemaGroup.js","D2App/components/Schemas/Schemas.js","D2App/components/Select/Select.js","D2App/components/Select/SelectField.js","D2App/components/SelectableList/SelectableList.js","D2App/components/Sidebar/Sidebar.js","D2App/components/StyledLink/StyledLink.js","D2App/components/Switch/Switch.js","D2App/components/WithAuthority/WithAuthority.js","D2App/components/ResourcePicker/queries.js","D2App/components/ResourcePicker/ResourcePicker.js","D2App/components/ResourcePicker/ResourcePickerField.js","D2App/App.js"],"names":["module","exports","UserContext","React","createContext","undefined","TaskContext","getNewestTask","tasks","Object","keys","map","k","sort","a","b","created","createStyle","width","height","display","fill","color","userSelect","MetadataImportIcon","viewBox","style","data-test","d","MetadataExportIcon","MetadataDependencyExportIcon","DataIcon","EventIcon","GMLIcon","PlusIcon","MinusIcon","TasksIcon","TEIIcon","categoryTypes","key","importType","icon","label","i18n","t","allCategories","jobEventQuery","events","resource","id","type","taskId","jobSummaryQuery","summary","defaultTasks","data","event","gml","metadata","tei","defaultJobOverview","activeTypes","selectedJob","useTasks","engine","useDataEngine","setTasks","useState","jobOverview","setJobOverview","fetchSummary","async","task","newTask","error","query","variables","console","status","createFetchSummary","fetchEvents","completed","length","newEvents","filter","e","some","te","uid","level","text","message","date","Date","time","errorEvent","find","reverse","lastUpdated","setTimeout","createFetchEvents","addTask","entry","createAddTask","updateJobOverview","val","createUpdateJobOverview","userQuery","user","programStageQuery","fields","params","paging","ALL_LABEL","classKeyQuery","mapping","json","xml","csv","adx","pdf","getUploadXHR","url","upload","onResponse","onError","setProgress","format","xhr","XMLHttpRequest","contentType","getMimeType","withCredentials","open","setRequestHeader","name","onreadystatechange","onReadyStateChange","onprogress","onProgress","Math","floor","readyState","idAndMsg","extractIdAndMessage","JSON","parse","responseText","typeReports","response","Array","isArray","objectReports","errorReports","msg","evt","lengthComputable","percentComplete","parseInt","loaded","total","max","pathToId","path","pathSplit","split","jsDateToISO8601","getFullYear","toString","getMonth","padStart","getDate","jsDateToString","getHours","getMinutes","getSeconds","blobType","compression","createBlob","contents","URL","createObjectURL","Blob","downloadBlob","filename","link","document","createElement","href","setAttribute","body","appendChild","click","remove","fetchAttributes","apiBaseUrl","attribute","filters","fetch","credentials","then","resp","Promise","resolve","catch","Error","statusText","reject","fetcher","attributes","displayName","value","genericErrorMessage","errorGenerator","timestamp","getTime","critical","uploadFile","file","addEntry","errF","ev","target","e2","send","locationAssign","window","location","getPrevJobDetails","job","jobDetails","optionPropType","PropTypes","exact","string","isRequired","DataElementIdScheme","arrayOf","dataElementIdSchemeOptions","dataTest","baseUrl","useConfig","loading","setLoading","schemes","setSchemes","setError","useEffect","validationText","options","SelectField","dense","DatePicker","onChange","required","FormField","inputWidth","OPTIONAL_DATE_VALIDATOR","DATE_VALIDATOR","DATE_BEFORE_VALIDATOR","date1","date2","DATE_AFTER_VALIDATOR","Wrapper","input","meta","inputName","rest","DatePickerField","validator","component","validate","EventIdScheme","eventIdSchemeOptions","FileUpload","initialValue","accept","FileInput","FormAlerts","alerts","bars","setBars","newBars","warning","info","success","duration","className","styles","container","children","IdScheme","idSchemeOptions","err","dataElementAttributes","organisationUnitAttributes","sharedAttributes","reduce","shared","collection","attributeFoundIn","f","DRYRUN_HELPTEXT","ImportButtonStrip","dryRunDataTest","importDataTest","form","primary","onClick","change","dryRun","secondary","categoryTypesObj","acc","cur","MenuLabel","files","substring","JobOverview","setActiveTypes","setSelectedJob","useContext","allTasks","flat","createdAt","filteredTasks","includes","items","Menu","chips","onChipClick","selected","active","JobSummary","showFileDetails","showJobDetails","to","pathname","Events","i","statsPropTypeObj","deleted","number","ignored","updated","imported","getClassName","c","s","SingleStatusTable","property","description","SingleSummary","importCount","conflicts","object","TypeCount","stats","Messages","messages","m","TypeReportSummary","overviewStats","extractStats","responseType","Summary","report","allStats","allMessages","forEach","klass","r","push","mainKlass","errorProperty","typeReportParse","overviewSummary","allSummaries","importSummaries","valueToString","File","v","join","Details","details","Header","header","title","taskDetails","Tags","tags","positive","neutral","negative","bold","MiniJobSummary","MoreOptions","initiallyVisible","hidden","setHidden","OrgUnitIdScheme","orgUnitIdSchemeOptions","Tree","list","select","multiSelect","onOpen","onClose","node","l","hasChildren","checked","rootQuery","roots","orgQuery","units","OrgUnitTree","setSelected","setChildren","useDataQuery","onComplete","organisationUnits","formatList","toggleOpenStatus","hierarchy","p","newChildren","parent","el","showTree","newValue","ch","orgId","localeCompare","setChildrenFor","touched","pristine","SINGLE_ORG_VALIDATOR","selectedOrgUnits","SINGLE_EXACT_ORG_VALIDATOR","OrgUnitTreeField","Page","desc","summaryTask","showFullSummaryTask","loadingEl","amount","iconAndTitle","preBody","content","ProgramStages","selectedPrograms","program","programStagesLoading","programStagesError","programStagesValidationText","programStages","stages","setStages","formattedList","useProgramStages","RadioGroup","setValue","vertical","inputs","o","radio","help","RadioGroupField","LABEL","VALIDATOR","formatOptions","formatNoCsvOptions","formatAdxOptions","formatAdxPdfOptions","formatJsonpOptions","defaultFormatOption","Format","availableFormats","FirstRowIsHeader","show","Switch","ClassKey","prevValue","classKeysLoading","classKeysError","classKeysValidationText","classKeys","setClassKeys","classData","useClassKeys","filterable","strategyOptions","defaultStrategyOption","Strategy","HELPTEXT","PreheatCache","SkipAudit","SkipExistingCheck","identifierOptions","defaultIdentifierOption","Identifier","importReportModeOptions","defaultImportReportModeOption","ImportReportMode","preheatModeOptions","defaultPreheatModeOption","PreheatMode","importStrategyOptions","defaultImportStrategyOption","ImportStrategy","atomicModeOptions","defaultAtomicModeOption","AtomicMode","mergeModeOptions","defaultMergeModeOption","MergeMode","flushModeOptions","defaultFlushModeOption","FlushMode","inclusionStrategyOptions","defaultInclusionStrategyOption","InclusionStrategy","SkipSharing","SkipValidation","IsAsync","orgValidator","composeValidators","hasValue","resourceTypes","FILTERLABEL","ERRORMESSAGE","RESOURCETYPE","SINGLE_DATASET_VALIDATOR","selectedDataSets","SINGLE_EXACT_DATASET_VALIDATOR","DataSetPicker","dataSetValidator","ResourcePickerField","resourceType","errorMessage","listName","filterLabel","SINGLE_PROGRAM_VALIDATOR","SINGLE_EXACT_PROGRAM_VALIDATOR","ProgramPicker","programValidator","withActions","autoSelectFirst","defaultProps","IncludeChildren","IncludeDeleted","compressionOptions","defaultCompressionOption","Compression","inclusionOptions","defaultInclusionOption","Inclusion","StartDate","EndDate","ExportButton","programStage","props","setCheckedSchemas","SchemasField","checkedSchemas","EXCLUDE_SCHEMAS","Set","Schemas","excludeSchemas","checkedByDefault","objectTypeOptions","defaultObjectTypeOption","ObjectType","filled","initialFocus","Objects","objectType","objectsLoading","objectsError","objectsValidationText","objects","setObjects","useObjects","defaultDataElementIdSchemeOption","defaultEventIdSchemeOption","defaultIdSchemeOption","defaultOrgUnitIdSchemeOption","hasAuthorityToSkipAudit","authorities","orgUnitSelectionModeOptions","defaultOrgUnitSelectionModeOption","OrgUnitMode","teiTypeFilterOptions","defaultTEITypeFilterOption","TEITypeFilter","programStatusOptions","defaultProgramStatusOption","ProgramStatus","followUpStatusOptions","defaultFollowUpStatusOption","FollowUpStatus","ProgramStartDate","ProgramEndDate","SINGLE_TETYPE_VALIDATOR","selectedTypes","SINGLE_EXACT_TETYPE_VALIDATOR","TETypePicker","teTypeValidator","lastUpdatedFilterOptions","defaultLastUpdatedFilterOption","LastUpdatedFilter","LastUpdatedStartDate","LastUpdatedEndDate","durationRegex","formatHelpText","helpText","placeholder","DurationField","match","LastUpdatedDuration","assignedUserModeOptions","defaultAssignedUserModeOption","AssignedUserMode","SINGLE_USER_VALIDATOR","selectedUsers","SINGLE_EXACT_USER_VALIDATOR","UserPicker","userValidator","IncludeAllAttributes","FORM_ERROR","values","classKey","PAGE_NAME","PAGE_DESCRIPTION","PAGE_ICON","MetadataImport","metadataTasks","useLocation","prevJobDetails","initialValues","identifier","importReportMode","preheatMode","importStrategy","firstRowIsHeader","atomicMode","mergeMode","flushMode","inclusionStrategy","skipSharing","skipValidation","isAsync","createInitialValues","progress","setShowFullSummaryTask","onSubmit","formErrors","onImport","subscription","submitError","render","handleSubmit","MetadataExport","endpointExtension","schemaParams","downloadUrlParams","onExport","MetadataDependencyExport","endpoint","types","GMLImport","gmlTasks","EventImport","eventTasks","dataElementIdScheme","orgUnitIdScheme","eventIdScheme","idScheme","startDate","endDate","today","includeDeleted","inclusion","EventExport","DataImport","dataTasks","strategy","preheatCache","skipAudit","skipExistingCheck","WithAuthority","pred","dataValueSetQuery","sets","orgUnit","dataSet","includeChildren","DataExport","dataStr","stringify","zip","JSZip","generateAsync","errors","minimizeParams","selectedTETypes","ouMode","includeAllAttributes","assignedUserMode","teiTypeFilter","programStatus","followUpStatus","programStartDate","programEndDate","lastUpdatedFilter","lastUpdatedStartDate","lastUpdatedEndDate","lastUpdatedDuration","minParams","toLowerCase","ou","assignedUser","trackedEntity","teiQuery","x","TEIExport","teis","teiStr","showProgramFilters","showTEFilters","showLUDates","showLUDuration","showUserPicker","TEIImport","teiTasks","Router","from","findLabelByLowerCaseComparison","groupKey","schemas","foundLabel","schemaName","isGroupKeyMatchingLowerCaseSchemaName","findKeyByCamelCaseComparison","indexOf","isGroupKeyInSchemaName","str","substr","replace","toUpperCase","getSchemaGroups","groups","combinedGroups","groupName","group","other","combineSingleItemGroups","schema","groupSchemas","getGroupLabels","schemaGroups","entries","groupLabels","lowerCaseGroupKey","extractGroupLabelFromSchemas","pop","SchemaGroup","toggleSchema","formLabel","ind","schemaQuery","setSchemaGroups","schemaGroupLabels","setSchemaGroupLabels","schemaGroupOrder","setSchemaGroupOrder","formattedSchemas","collectionName","formatSchemas","excludedSchemas","has","filterOutExcludedSchemas","groupKeys","getGroupOrder","propagateCheckedSchemas","updatedSchemaGroups","onSelectGeneric","grAcc","showSchemas","formControl","schemaGroup","updatedGroup","Select","noMatchText","optionEls","SelectableList","withFilter","setFilter","onSelect","actions","action","all","dataImportPage","code","eventImportPage","gmlImportPage","metadataImportPage","teiImportPage","dataExportPage","eventExportPage","metadataDependencyExportPage","metadataExportPage","teiExportPage","importPages","exportPages","jobOverviewPage","SidebarItem","StyledLink","Sidebar","sectionTitle","passThroughProps","dataSetQuery","dataSets","programQuery","programs","TETypeQuery","trackedEntityTypes","users","ResourcePicker","setList","resourceError","resourceName","resourceToQuery","showList","App","log","useUser","showApp","Provider","sidebar"],"mappings":"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","file":"static/js/app.7a482fb7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Schemas_container__3H0XX\",\"group\":\"Schemas_group__QeGXq\",\"schema\":\"Schemas_schema__36IFP\",\"formLabel\":\"Schemas_formLabel__1geS0\",\"formControl\":\"Schemas_formControl__2ycln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2zgzu\",\"sidebar\":\"App_sidebar__10tAV\",\"content\":\"App_content__3I8HS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormAlerts_container__JPYH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormField_container__3nG83\",\"label\":\"FormField_label__2Au43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dryRun\":\"ImportButtonStrip_dryRun__112kw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobOverview_container__1_oyo\",\"items\":\"JobOverview_items__2B1hs\",\"Menu\":\"JobOverview_Menu__2bTUp\",\"summary\":\"JobOverview_summary__13xs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MenuLabel_container__ZTyjb\",\"status\":\"MenuLabel_status__1UTMj\",\"date\":\"MenuLabel_date__1r_sY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobSummary_container__2Zh6N\",\"title\":\"JobSummary_title__sZ7p4\",\"taskDetails\":\"JobSummary_taskDetails__3aEqI\",\"tags\":\"JobSummary_tags__3qnhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rest\":\"Summary_rest__GeByI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoreOptions_container__2zKqV\",\"header\":\"MoreOptions_header__120Ww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OrgUnitTree_container__tSgX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page_container__3NEqL\",\"content\":\"Page_content__39Ql1\",\"preBody\":\"Page_preBody__3d4Jp\",\"header\":\"Page_header__13-dA\",\"title\":\"Page_title__rl9Ut\",\"desc\":\"Page_desc__2uKSe\",\"icon\":\"Page_icon__20L2r\",\"iconAndTitle\":\"Page_iconAndTitle__32JzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputs\":\"RadioGroup_inputs__2MDMV\",\"radio\":\"RadioGroup_radio__2G6wY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobOverview_container__F-fbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3_2MB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"SelectableList_body__80Xuu\",\"filter\":\"SelectableList_filter__SHsK2\",\"actions\":\"SelectableList_actions__1Pw1O\",\"action\":\"SelectableList_action__kmkJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Sidebar_Menu__3Gy0D\",\"sectionTitle\":\"Sidebar_sectionTitle__lKKbo\",\"jobOverview\":\"Sidebar_jobOverview__2MJ0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"StyledLink_link__1GAq7\"};","import React from 'react';\nconst UserContext = React.createContext(undefined);\nexport { UserContext };","import React from 'react';\nconst TaskContext = React.createContext(undefined);\n\nconst getNewestTask = tasks => Object.keys(tasks).map(k => tasks[k]).sort((a, b) => a.created < b.created ? 1 : -1)[0];\n\nexport { TaskContext, getNewestTask };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst createStyle = (width, height) => ({\n  width: width || 24,\n  height: height || 24,\n  display: 'inline-block',\n  fill: 'current-color',\n  color: 'current-color',\n  userSelect: 'none'\n});\n\nexport const MetadataImportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadataimport\">\n        <path d=\"M14.039 8.968l-3.961-3.968h1.968s.991-3.178-2.985-5c6.191.222 6.972 5 6.972 5h1.967l-3.961 3.968zm6.461 5.575l-.342.195v1.717l.342-.195v-1.717zm-.844.481l-.35.199v1.717l.35-.199v-1.717zm.906-10.024l-1.306 1.55 1.62.919-6.859 3.698-8.86-5.138 4.436-2.685c-.234-.5-.626-.989-1.313-1.338l-5.124 2.978-3.156 5.487 2 1.106v5.445l12.25 6.978 9.75-5.551v-11.508l-3.438-1.941zm-16.624 2.688l7.897 4.54-1.192 2.091-7.872-4.605 1.167-2.026zm9.062 13.298l-9-5.126v-3.112l7.377 4.319 1.623-2.845v6.764zm9-3.7l-7 3.985v-8.361l7-3.773v8.149zm-4.907-.802l-.349.199v1.713l.349-.195v-1.717zm.584-.333l-.343.195v1.717l.343-.195v-1.717zm1.395-.794l-.343.195v1.717l.343-.195v-1.717zm-.574.327l-.344.196v1.717l.344-.196v-1.717z\" />\n    </svg>;\nexport const MetadataExportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadataexport\">\n        <path d=\"M13.904 9c-3.514-3.984-.1-7.598-.1-7.598l-1.393-1.389 5.589-.013v5.607l-1.372-1.391c0 .001-3.581.706-2.724 4.784zm5.752 6.024l-.35.199v1.717l.35-.199v-1.717zm.844-.481l-.342.195v1.717l.342-.195v-1.717zm-3.407 1.941l-.349.199v1.713l.349-.195v-1.717zm1.979-1.127l-.343.195v1.717l.343-.195v-1.717zm.949-10.673v2.295l.855.489-6.859 3.698-8.86-5.138 6.374-3.654-1.5-1.406-6.864 3.97-3.167 5.533 2 1.106v5.445l12.25 6.978 9.75-5.551v-11.508l-3.979-2.257zm-16.083 3.004l7.897 4.54-1.193 2.091-7.871-4.605 1.167-2.026zm9.062 13.298l-9-5.126v-3.112l5.632 3.297 1.746 1.022 1.002-1.757.62-1.088v6.764zm9-3.7l-7 3.985v-8.361l7-3.773v8.149zm-4.323-1.135l-.343.195v1.717l.343-.195v-1.717zm.821-.467l-.344.196v1.717l.344-.196v-1.717z\" />\n    </svg>;\nexport const MetadataDependencyExportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadatadependencyexport\">\n        <path d=\"M16.949 16.132h2.332c-1.092 1.728-3.605 3.638-6.281 3.852v-8.984h3v-2h-3v-1.103c0-2.39 2-2.619 2-4.897 0-1.654-1.346-3-3-3s-3 1.346-3 3c0 2.297 2 2.487 2 4.897v1.103h-3v2h3v9c-2.639-.18-5.133-2.053-6.281-3.868h2.332l-5.051-3.132v5.912l1.269-1.8c2.702 4.503 6.379 4.305 8.731 6.888 2.352-2.583 6.029-2.385 8.731-6.889l1.269 1.8v-5.911l-5.051 3.132zm-5.949-13.132c0-.551.449-1 1-1s1 .449 1 1-.448 1-1 1-1-.449-1-1z\" />\n    </svg>;\nexport const DataIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-data\">\n        <path d=\"M6.083 4c1.38 1.612 2.578 3 4.917 3h11v13h-20v-16h4.083zm.917-2h-7v20h24v-17h-13c-1.629 0-2.305-1.058-4-3z\" />\n    </svg>;\nexport const EventIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-event\">\n        <path d=\"M20 20h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm6 0h-4v4h4v-4zm-6-6h-4v4h4v-4zm16-8v22h-24v-22h3v1c0 1.103.897 2 2 2s2-.897 2-2v-1h10v1c0 1.103.897 2 2 2s2-.897 2-2v-1h3zm-2 6h-20v14h20v-14zm-2-7c0-.552-.447-1-1-1s-1 .448-1 1v2c0 .552.447 1 1 1s1-.448 1-1v-2zm-14 2c0 .552-.447 1-1 1s-1-.448-1-1v-2c0-.552.447-1 1-1s1 .448 1 1v2z\" />\n    </svg>;\nexport const GMLIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-gml\">\n        <path d=\"M13.144 8.171c-.035-.066.342-.102.409-.102.074.009-.196.452-.409.102zm-2.152-3.072l.108-.031c.064.055-.072.095-.051.136.086.155.021.248.008.332-.014.085-.104.048-.149.093-.053.066.258.075.262.085.011.033-.375.089-.304.171.096.136.824-.195.708-.176.225-.113.029-.125-.097-.19-.043-.215-.079-.547-.213-.68l.088-.102c-.206-.299-.36.362-.36.362zm13.008 6.901c0 6.627-5.373 12-12 12-6.628 0-12-5.373-12-12s5.372-12 12-12c6.627 0 12 5.373 12 12zm-8.31-5.371c-.006-.146-.19-.284-.382-.031-.135.174-.111.439-.184.557-.104.175.567.339.567.174.025-.277.732-.063.87-.025.248.069.643-.226.211-.381-.355-.13-.542-.269-.574-.523 0 0 .188-.176.106-.166-.218.027-.614.786-.614.395zm6.296 5.371c0-1.035-.177-2.08-.357-2.632-.058-.174-.189-.312-.359-.378-.256-.1-1.337.597-1.5.254-.107-.229-.324.146-.572.008-.12-.066-.454-.515-.605-.46-.309.111.474.964.688 1.076.201-.152.852-.465.992-.038.268.804-.737 1.685-1.251 2.149-.768.694-.624-.449-1.147-.852-.275-.211-.272-.66-.55-.815-.124-.07-.693-.725-.688-.813l-.017.166c-.094.071-.294-.268-.315-.321 0 .295.48.765.639 1.001.271.405.416.995.748 1.326.178.178.858.914 1.035.898.193-.017.803-.458.911-.433.644.152-1.516 3.205-1.721 3.583-.169.317.138 1.101.113 1.476-.029.433-.37.573-.693.809-.346.253-.265.745-.556.925-.517.318-.889 1.353-1.623 1.348-.216-.001-1.14.36-1.261.007-.094-.256-.22-.45-.353-.703-.13-.248-.015-.505-.173-.724-.109-.152-.475-.497-.508-.677-.002-.155.117-.626.28-.708.229-.117.044-.458.016-.656-.048-.354-.267-.646-.53-.851-.389-.299-.188-.537-.097-.964 0-.204-.124-.472-.398-.392-.564.164-.393-.44-.804-.413-.296.021-.538.209-.813.292-.346.104-.7-.082-1.042-.125-1.407-.178-1.866-1.786-1.499-2.946.037-.19-.114-.542-.048-.689.158-.352.48-.747.762-1.014.158-.15.361-.112.547-.229.287-.181.291-.553.572-.781.4-.325.946-.318 1.468-.388.278-.037 1.336-.266 1.503-.06 0 .038.191.604-.019.572.433.023 1.05.749 1.461.579.211-.088.134-.736.567-.423.262.188 1.436.272 1.68.069.15-.124.234-.93.052-1.021.116.115-.611.124-.679.098-.12-.044-.232.114-.425.025.116.055-.646-.354-.218-.667-.179.131-.346-.037-.539.107-.133.108.062.18-.128.274-.302.153-.53-.525-.644-.602-.116-.076-1.014-.706-.77-.295l.789.785c-.039.025-.207-.286-.207-.059.053-.135.02.579-.104.347-.055-.089.09-.139.006-.268 0-.085-.228-.168-.272-.226-.125-.155-.457-.497-.637-.579-.05-.023-.764.087-.824.11-.07.098-.13.201-.179.311-.148.055-.287.126-.419.214l-.157.353c-.068.061-.765.291-.769.3.029-.075-.487-.171-.453-.321.038-.165.213-.68.168-.868-.048-.197 1.074.284 1.146-.235.029-.225.046-.487-.313-.525.068.008.695-.246.799-.36.146-.168.481-.442.724-.442.284 0 .223-.413.354-.615.131.053-.07.376.087.507-.01-.103.445.057.489.033.104-.054.684-.022.594-.294-.1-.277.051-.195.181-.253-.022.009.34-.619.402-.413-.043-.212-.421.074-.553.063-.305-.024-.176-.52-.061-.665.089-.115-.243-.256-.247-.036-.006.329-.312.627-.241 1.064.108.659-.735-.159-.809-.114-.28.17-.509-.214-.364-.444.148-.235.505-.224.652-.476.104-.178.225-.385.385-.52.535-.449.683-.09 1.216-.041.521.048.176.124.104.324-.069.19.286.258.409.099.07-.092.229-.323.298-.494.089-.222.901-.197.334-.536-.374-.223-2.004-.672-3.096-.672-.236 0-.401.263-.581.412-.356.295-1.268.874-1.775.698-.519-.179-1.63.66-1.808.666-.065.004.004-.634.358-.681-.153.023 1.247-.707 1.209-.859-.046-.18-2.799.822-2.676 1.023.059.092.299.092-.016.294-.18.109-.372.801-.541.801-.505.221-.537-.435-1.099.409l-.894.36c-1.328 1.411-2.247 3.198-2.58 5.183-.013.079.334.226.379.28.112.134.112.712.167.901.138.478.479.744.74 1.179.154.259.41.914.329 1.186.108-.178 1.07.815 1.246 1.022.414.487.733 1.077.061 1.559-.217.156.33 1.129.048 1.368l-.361.093c-.356.219-.195.756.021.982 1.818 1.901 4.38 3.087 7.22 3.087 5.517 0 9.989-4.472 9.989-9.989zm-11.507-6.357c.125-.055.293-.053.311-.22.015-.148.044-.046.08-.1.035-.053-.067-.138-.11-.146-.064-.014-.108.069-.149.104l-.072.019-.068.087.008.048-.087.106c-.085.084.002.139.087.102z\" />\n    </svg>;\nexport const LogoIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-logo\">\n        <path d=\"M9 3L5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const PlusIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-plus\">\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const MinusIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-minus\">\n        <path d=\"M19 13H5v-2h14v2z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const TasksIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-tasks\">\n        <path d=\"M19 2h-4.2C14.4.8 13.3 0 12 0c-1.3 0-2.4.8-2.8 2H5C4 2 3 3 3 4v16c0 1 1 2 2 2h14c1 0 2-1 2-2V4c0-1-1-2-2-2zm-7 0c.6 0 1 .5 1 1s-.5 1-1 1-1-.5-1-1 .5-1 1-1zm7 18H5V4h2v3h10V4h2v16z\"></path>\n    </svg>;\nexport const TEIIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)}>\n        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n        <path d=\"M13 1l.001 3.062A8.004 8.004 0 0 1 19.938 11H23v2l-3.062.001a8.004 8.004 0 0 1-6.937 6.937L13 23h-2v-3.062a8.004 8.004 0 0 1-6.938-6.937L1 13v-2h3.062A8.004 8.004 0 0 1 11 4.062V1h2zm-1 9a2 2 0 1 0 0 4 2 2 0 0 0 0-4z\" />\n    </svg>;\nconst iconPropTypes = {\n  height: PropTypes.number,\n  width: PropTypes.number\n};\nDataIcon.propTypes = iconPropTypes;\nEventIcon.propTypes = iconPropTypes;\nGMLIcon.propTypes = iconPropTypes;\nLogoIcon.propTypes = iconPropTypes;\nMetadataDependencyExportIcon.propTypes = iconPropTypes;\nMetadataExportIcon.propTypes = iconPropTypes;\nMetadataImportIcon.propTypes = iconPropTypes;\nMinusIcon.propTypes = iconPropTypes;\nPlusIcon.propTypes = iconPropTypes;\nTasksIcon.propTypes = iconPropTypes;\nTEIIcon.propTypes = iconPropTypes;","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { DataIcon, EventIcon, GMLIcon, MetadataImportIcon, TEIIcon } from '../components/Icon/Icon';\nconst categoryTypes = [{\n  key: 'data',\n  importType: 'DATAVALUE_IMPORT',\n  icon: <DataIcon />,\n  label: i18n.t('Data')\n}, {\n  key: 'event',\n  importType: 'EVENT_IMPORT',\n  icon: <EventIcon />,\n  label: i18n.t('Event')\n}, {\n  key: 'gml',\n  importType: 'GML_IMPORT',\n  icon: <GMLIcon />,\n  label: i18n.t('GML')\n}, {\n  key: 'metadata',\n  importType: 'METADATA_IMPORT',\n  icon: <MetadataImportIcon />,\n  label: i18n.t('Metadata')\n}, {\n  key: 'tei',\n  importType: 'TEI_IMPORT',\n  icon: <TEIIcon />,\n  label: i18n.t('TEI')\n}];\nconst allCategories = categoryTypes.map(({\n  importType\n}) => importType);\nexport { categoryTypes, allCategories };","import { useState } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { allCategories } from '../utils/tasks';\nconst jobEventQuery = {\n  events: {\n    resource: 'system/tasks/',\n    id: ({\n      type,\n      taskId\n    }) => `${type}/${taskId}`\n  }\n};\nconst jobSummaryQuery = {\n  summary: {\n    resource: 'system/taskSummaries/',\n    id: ({\n      type,\n      taskId\n    }) => `${type}/${taskId}`\n  }\n};\nconst defaultTasks = {\n  data: {},\n  event: {},\n  gml: {},\n  metadata: {},\n  tei: {}\n};\nconst defaultJobOverview = {\n  activeTypes: allCategories,\n  selectedJob: undefined\n};\nconst defaultRefetchPeriod = 2000;\n\nconst createFetchEvents = (engine, setTasks, fetchSummary) => (type, id, task) => {\n  const fetchEvents = async () => {\n    if (task.completed) {\n      return;\n    }\n\n    const newTask = { ...task\n    };\n    const {\n      events,\n      error\n    } = await engine.query(jobEventQuery, {\n      variables: {\n        type: task.importType,\n        taskId: task.id\n      }\n    });\n\n    if (error) {\n      console.error('fetchEvents error: ', error);\n      return;\n    }\n\n    if (events && events.length) {\n      const newEvents = events.filter(e => !task.events.some(te => te.id == e.uid)).map(e => ({\n        id: e.uid,\n        level: e.level,\n        text: e.message,\n        date: new Date(e.time)\n      }));\n      const errorEvent = newEvents.find(e => e.level == 'ERROR');\n\n      if (errorEvent) {\n        newTask.error = errorEvent.text;\n      }\n\n      newTask.events = [...newTask.events, ...newEvents.reverse()];\n      newTask.completed = events[0].completed;\n    }\n\n    newTask.lastUpdated = new Date();\n\n    if (!newTask.completed) {\n      setTimeout(() => fetchEvents(type, id, newTask), defaultRefetchPeriod);\n    } else {\n      fetchSummary(type, id, newTask);\n    }\n\n    setTasks(tasks => ({ ...tasks,\n      [type]: { ...tasks[type],\n        [id]: newTask\n      }\n    }));\n  };\n\n  fetchEvents();\n};\n\nconst createFetchSummary = (engine, setTasks) => async (type, id, task) => {\n  const newTask = { ...task\n  };\n  const {\n    summary,\n    error\n  } = await engine.query(jobSummaryQuery, {\n    variables: {\n      type: task.importType,\n      taskId: task.id\n    }\n  });\n\n  if (error) {\n    console.error('fetchSummary error: ', error);\n    return;\n  }\n\n  if (summary && summary.status == 'ERROR' && !newTask.error) {\n    newTask.error = true;\n  }\n\n  newTask.summary = summary;\n  setTasks(tasks => ({ ...tasks,\n    [type]: { ...tasks[type],\n      [id]: newTask\n    }\n  }));\n};\n\nconst createAddTask = (setTasks, fetchEvents) => (type, id, entry) => {\n  setTasks(tasks => ({ ...tasks,\n    [type]: { ...tasks[type],\n      [id]: entry\n    }\n  }));\n  fetchEvents(type, id, entry);\n};\n\nconst createUpdateJobOverview = setJobOverview => val => {\n  setJobOverview(jobOverview => ({ ...jobOverview,\n    ...val\n  }));\n};\n\nconst useTasks = () => {\n  const engine = useDataEngine();\n  const [tasks, setTasks] = useState(defaultTasks);\n  const [jobOverview, setJobOverview] = useState(defaultJobOverview);\n  const fetchSummary = createFetchSummary(engine, setTasks);\n  const fetchEvents = createFetchEvents(engine, setTasks, fetchSummary);\n  const addTask = createAddTask(setTasks, fetchEvents);\n  const updateJobOverview = createUpdateJobOverview(setJobOverview);\n  return {\n    tasks,\n    addTask,\n    jobOverview,\n    updateJobOverview\n  };\n};\n\nexport { useTasks };","import { useDataQuery } from '@dhis2/app-runtime';\nconst userQuery = {\n  user: {\n    resource: 'me'\n  }\n};\n\nconst useUser = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(userQuery);\n\n  if (error) {\n    console.log('useUser error: ', error);\n  }\n\n  return {\n    loading,\n    error,\n    user: data && data.user\n  };\n};\n\nexport { useUser };","import { useState, useEffect } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataEngine } from '@dhis2/app-runtime';\nconst programStageQuery = {\n  data: {\n    resource: 'programs',\n    fields: 'id,displayName',\n    id: ({\n      id\n    }) => `${id}`,\n    params: {\n      fields: 'programStages[id,displayName]',\n      paging: 'false'\n    }\n  }\n};\nconst ALL_VALUE = '';\nconst ALL_LABEL = `[ ${i18n.t('All program stages')} ]`;\n\nconst useProgramStages = (program, setSelected) => {\n  const engine = useDataEngine();\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [stages, setStages] = useState([]);\n  useEffect(() => {\n    if (program) {\n      setLoading(true);\n      setSelected(undefined);\n    } else {\n      setLoading(false);\n    }\n\n    if (program) {\n      engine.query(programStageQuery, {\n        variables: {\n          id: program\n        },\n        onComplete: data => {\n          const list = data.data.programStages;\n          const formattedList = list.map(e => ({\n            value: e.id,\n            label: e.displayName\n          }));\n          setStages([{\n            value: ALL_VALUE,\n            label: ALL_LABEL\n          }, ...formattedList]);\n          setSelected({\n            value: ALL_VALUE,\n            label: ALL_LABEL\n          });\n          setLoading(false);\n        },\n        onError: error => {\n          setError(error);\n          console.error('useProgramStages error: ', error);\n        }\n      });\n    }\n  }, [program]);\n  const validationText = error && `${i18n.t('Something went wrong when loading the program stages')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    programStages: stages\n  };\n};\n\nexport { useProgramStages, ALL_VALUE };","import { useState } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataQuery } from '@dhis2/app-runtime';\nconst classKeyQuery = {\n  keys: {\n    resource: 'metadata/csvImportClasses'\n  }\n};\n\nconst useClassKeys = (setValue, prevValue) => {\n  const [classKeys, setClassKeys] = useState([]);\n  const {\n    loading,\n    error\n  } = useDataQuery(classKeyQuery, {\n    onComplete: classData => {\n      setClassKeys(classData.keys.map(k => ({\n        value: k,\n        label: k\n      })));\n\n      if (prevValue) {\n        setValue(prevValue);\n      } else {\n        setValue({\n          value: classData.keys[0],\n          label: classData.keys[0]\n        });\n      }\n    },\n    onError: error => {\n      console.error('useClassKeys error: ', error);\n    }\n  });\n  const validationText = error && `${i18n.t('Something went wrong when loading the class keys')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    classKeys\n  };\n};\n\nexport { useClassKeys };","const mapping = {\n  json: 'application/json',\n  xml: 'application/xml',\n  csv: 'application/csv',\n  gml: 'application/xml',\n  adx: 'application/adx+xml',\n  pdf: 'application/pdf'\n};\nexport const getMimeType = format => mapping[format] || null;","import { getMimeType } from './mime';\n\nconst getUploadXHR = ({\n  url,\n  upload,\n  type,\n  onResponse,\n  onError,\n  setProgress,\n  format\n}) => {\n  const xhr = new XMLHttpRequest();\n  const contentType = getMimeType(format);\n  xhr.withCredentials = true;\n  xhr.open('POST', url, true);\n  xhr.setRequestHeader('Content-Type', contentType);\n  xhr.setRequestHeader('Content-Disposition', 'attachment filename=\"' + upload.name + '\"');\n  xhr.onreadystatechange = onReadyStateChange({\n    xhr,\n    type,\n    onResponse,\n    onError\n  });\n  xhr.upload.onprogress = onProgress(setProgress);\n  return xhr;\n};\n\nconst onReadyStateChange = ({\n  xhr,\n  type,\n  onResponse,\n  onError\n}) => {\n  return e => {\n    const status = Math.floor(xhr.status / 100);\n\n    if (xhr.readyState === 4 && status === 2) {\n      const idAndMsg = extractIdAndMessage(xhr);\n      onResponse({ ...idAndMsg,\n        type: type\n      });\n    } else if (xhr.readyState === 4) {\n      onError(e);\n    }\n  };\n};\n\nconst extractIdAndMessage = xhr => {\n  const data = JSON.parse(xhr.responseText);\n  const {\n    message,\n    status,\n    typeReports,\n    response\n  } = data;\n\n  if (status && status === 'ERROR') {\n    if (Array.isArray(typeReports) && Array.isArray(typeReports[0].objectReports) && Array.isArray(typeReports[0].objectReports[0].errorReports)) {\n      return {\n        error: true,\n        msg: {\n          id: 'init',\n          text: typeReports[0].objectReports[0].errorReports[0].message,\n          date: new Date()\n        },\n        typeReports: data\n      };\n    }\n  }\n\n  if (typeof response !== 'undefined') {\n    return {\n      id: response.id,\n      msg: {\n        id: 'init',\n        text: message,\n        date: new Date(response.created)\n      }\n    };\n  }\n\n  return {\n    error: true\n  };\n};\n\nconst onProgress = setProgress => evt => {\n  if (evt.lengthComputable) {\n    const percentComplete = parseInt(evt.loaded / evt.total * 100);\n    setProgress(Math.max(1, percentComplete));\n  }\n};\n\nexport { getUploadXHR };","import i18n from '@dhis2/d2-i18n';\nimport { getUploadXHR } from './xhr';\n\nconst trimString = (length, string) => string.length > length ? string.substring(0, length - 3) + '...' : string;\n\nconst pathToId = path => {\n  const pathSplit = path.split('/');\n  const orgId = pathSplit[pathSplit.length - 1];\n  return orgId;\n};\n\nconst jsDateToISO8601 = date => `${date.getFullYear().toString()}-${(date.getMonth() + 1).toString().padStart(2, 0)}-${date.getDate().toString().padStart(2, 0)}`;\n\nconst jsDateToString = date => `${jsDateToISO8601(date)} ${date.getHours().toString().padStart(2, 0)}:${date.getMinutes().toString().padStart(2, 0)}:${date.getSeconds().toString().padStart(2, 0)}\n`;\n\nconst blobType = (format, compression) => {\n  if (compression === 'gzip') {\n    return `application/${format}+gzip`;\n  } else if (compression === 'zip') {\n    return `application/${format}+zip`;\n  }\n\n  if (format === 'xml') {\n    return 'application/xml';\n  } else if (format === 'json') {\n    return 'application/json';\n  }\n};\n\nconst createBlob = (contents, format, compression = 'none') => {\n  return URL.createObjectURL(new Blob([contents], {\n    type: blobType(format, compression)\n  }));\n};\n\nconst downloadBlob = (url, filename) => {\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', filename);\n  document.body.appendChild(link);\n  link.click();\n  link.remove();\n};\n\nconst fetchAttributes = async (apiBaseUrl, attribute) => {\n  const fetcher = url => fetch(url, {\n    credentials: 'include'\n  }).then(resp => {\n    if (resp.status >= 200 && resp.status < 300) {\n      return Promise.resolve(resp.json());\n    } else {\n      throw resp;\n    }\n  }).catch(resp => {\n    const error = new Error(resp.statusText || resp.status);\n    console.error(`fetchAttributes ${attribute} fetch error: `, error);\n    return Promise.reject(error);\n  });\n\n  const fields = 'id,displayName';\n  const filters = `unique:eq:true&filter=${attribute}:eq:true`;\n  const url = `${apiBaseUrl}attributes.json?paging=false&fields=${fields}&filter=${filters}`;\n  const json = await fetcher(url).catch(error => Promise.reject(error));\n  return json.attributes.map(({\n    id,\n    displayName\n  }) => ({\n    value: `ATTRIBUTE:${id}`,\n    label: displayName\n  }));\n};\n\nconst genericErrorMessage = i18n.t('An unknown error occurred. Please try again later');\n\nconst errorGenerator = setProgress => message => {\n  const timestamp = new Date().getTime();\n  setProgress(0);\n  return {\n    id: `xhr-${timestamp}`,\n    critical: true,\n    message: message ? message : genericErrorMessage\n  };\n};\n\nconst uploadFile = ({\n  url,\n  file,\n  format,\n  type,\n  setProgress,\n  addEntry\n}) => {\n  setProgress(1);\n  const errF = errorGenerator(setProgress);\n  return new Promise((resolve, reject) => {\n    try {\n      const xhr = getUploadXHR({\n        url,\n        upload: file,\n        type,\n        onResponse: ({\n          error,\n          id,\n          msg,\n          typeReports\n        }) => {\n          let entry;\n\n          if (error && msg) {\n            // error but we have a message\n            entry = {\n              id: new Date().getTime(),\n              level: 'ERROR',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: true,\n              events: [msg],\n              summary: typeReports,\n              error: true,\n              importType: type\n            };\n          } else if (error) {\n            // error with no message\n            entry = {\n              id: new Date().getTime(),\n              level: 'ERROR',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: true,\n              summary: undefined,\n              error: true,\n              importType: type\n            };\n          } else {\n            // success\n            entry = {\n              id: id,\n              level: 'INFO',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: false,\n              events: [msg],\n              summary: undefined,\n              error: false,\n              importType: type\n            };\n          }\n\n          addEntry(entry.id, entry);\n\n          if (error) {\n            reject(errF(msg && msg.text));\n          }\n\n          setProgress(0);\n          resolve({});\n        },\n        onError: ev => {\n          let message;\n\n          try {\n            const response = JSON.parse(ev.target.response);\n            message = response.message;\n          } catch (e2) {\n            message = genericErrorMessage;\n          }\n\n          console.error('sendFile error', message);\n          reject(errF(message));\n        },\n        setProgress,\n        format\n      });\n      xhr.send(file);\n    } catch (e) {\n      // xhr.send can throw an exception\n      reject(errorGenerator(e));\n    }\n  });\n}; // call stub function if available\n\n\nconst locationAssign = url => {\n  if (window.locationAssign) {\n    window.locationAssign(url);\n  } else {\n    window.location = url;\n  }\n};\n\nconst getPrevJobDetails = (query, tasks) => {\n  if (!query || !query.id) return {};\n  const job = tasks[query.id];\n  if (!job) return {};\n  return job.jobDetails;\n};\n\nexport { createBlob, downloadBlob, fetchAttributes, getPrevJobDetails, locationAssign, jsDateToISO8601, jsDateToString, pathToId, trimString, uploadFile };","import PropTypes from 'prop-types';\nconst optionPropType = PropTypes.exact({\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n});\nconst optionsPropType = PropTypes.arrayOf(optionPropType);\nexport { optionPropType, optionsPropType };","import React, { useEffect, useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { fetchAttributes } from '../../utils/helper';\nimport { optionsPropType } from '../../utils/options';\nimport { SelectField } from '../index';\n\nconst DataElementIdScheme = ({\n  name,\n  label,\n  dataElementIdSchemeOptions,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    fetchAttributes(`${baseUrl}/api/`, 'dataElementAttribute').then(attributes => setSchemes(attributes)).catch(error => setError(error));\n    setLoading(false);\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional data element ID schemes')} : ${error.message}`;\n  const options = [...dataElementIdSchemeOptions, ...schemes];\n  return <SelectField name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} dense />;\n};\n\nDataElementIdScheme.propTypes = {\n  dataElementIdSchemeOptions: optionsPropType.isRequired,\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { DataElementIdScheme };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputField } from '@dhis2/ui-core';\nimport { jsDateToISO8601 } from '../../utils/helper';\nimport { FormField } from '../index';\n\nconst DatePicker = ({\n  name,\n  error,\n  label,\n  date,\n  onChange,\n  dataTest,\n  required = true\n}) => {\n  const onChangeHelper = ({\n    value\n  }) => {\n    if (!value) {\n      onChange(value);\n    } else {\n      onChange(new Date(value));\n    }\n  };\n\n  const value = date && jsDateToISO8601(date);\n  return <FormField label={label} dataTest={dataTest}>\n            <InputField type=\"date\" name={name} value={value} onChange={onChangeHelper} required={required} inputWidth=\"200px\" error={!!error} validationText={error} />\n        </FormField>;\n};\n\nDatePicker.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]).isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  required: PropTypes.bool\n};\nexport { DatePicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui-forms';\nimport { DatePicker } from '../index';\n\nconst OPTIONAL_DATE_VALIDATOR = date => date ? DATE_VALIDATOR(date) : undefined;\n\nconst DATE_VALIDATOR = date => new Date(date) == 'Invalid Date' ? i18n.t('Invalid date') : undefined;\n\nconst DATE_BEFORE_VALIDATOR = (date1, date2) => date1 > date2 ? i18n.t('Start date must be before end date') : undefined;\n\nconst DATE_AFTER_VALIDATOR = (date2, date1) => date2 < date1 ? i18n.t('End date must be after start date') : undefined;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta: {\n    error\n  },\n  inputName,\n  ...rest\n}) => <DatePicker name={inputName} error={error} date={value} onChange={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst DatePickerField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} inputName={name} {...rest} />;\n};\n\nDatePickerField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { DatePickerField, DATE_VALIDATOR, DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR, OPTIONAL_DATE_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { optionsPropType } from '../../utils/options';\nimport { SelectField } from '../index';\n\nconst EventIdScheme = ({\n  name,\n  label,\n  eventIdSchemeOptions,\n  dataTest\n}) => {\n  return <SelectField name={name} label={label} options={eventIdSchemeOptions} dense dataTest={dataTest} />;\n};\n\nEventIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  eventIdSchemeOptions: optionsPropType.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { EventIdScheme };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { Field, FileInput } from '@dhis2/ui-forms';\nimport { FormField } from '../index';\n\nconst SINGLE_FILE_VALIDATOR = files => !files || files.length == 0 ? i18n.t('Please select a file') : undefined;\n\nconst FileUpload = ({\n  initialValue,\n  required,\n  name,\n  label,\n  accept = '*',\n  validator,\n  dataTest\n}) => {\n  return <FormField label={label} required={required} dataTest={dataTest}>\n            <Field component={FileInput} name={name} accept={accept} required={required} initialValue={initialValue} validate={validator} dataTest={`${dataTest}-fileinput`} />\n        </FormField>;\n};\n\nFileUpload.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  accept: PropTypes.string,\n  initialValue: PropTypes.instanceOf(File),\n  required: PropTypes.bool,\n  validator: PropTypes.func\n};\nexport { FileUpload, SINGLE_FILE_VALIDATOR };","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AlertBar } from '@dhis2/ui-core';\nimport styles from './FormAlerts.module.css';\n\nconst FormAlerts = ({\n  alerts,\n  dataTest\n}) => {\n  const [bars, setBars] = useState([]);\n  useEffect(() => {\n    if (alerts) {\n      const newBars = alerts.map(a => <AlertBar key={`alert-${a.id}`} warning={a.warning} info={a.info} critical={a.critical} success={a.success} duration={8000}>\n                    {a.message}\n                </AlertBar>);\n      setBars(newBars);\n    }\n  }, [alerts]);\n  if (bars.length == 0) return null;\n  return <div className={styles.container} data-test={dataTest}>\n            {bars}\n        </div>;\n};\n\nFormAlerts.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  alerts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    critical: PropTypes.bool,\n    info: PropTypes.bool,\n    warning: PropTypes.bool\n  }))\n};\nexport { FormAlerts };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FormField.module.css';\n\nconst FormField = ({\n  dataTest,\n  label,\n  required = false,\n  children\n}) => {\n  return <div className={styles.container} data-test={dataTest}>\n            <span className={styles.label}>\n                {label}\n                {required && <span> *</span>}\n            </span>\n            {children}\n        </div>;\n};\n\nFormField.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  required: PropTypes.bool\n};\nexport { FormField };","import React, { useState, useEffect } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { optionsPropType } from '../../utils/options';\nimport { fetchAttributes } from '../../utils/helper';\nimport { SelectField } from '../index';\n\nconst attributeFoundIn = (attribute, collection) => !!collection.find(({\n  value\n}) => value === attribute.value);\n\nconst IdScheme = ({\n  name,\n  label,\n  idSchemeOptions,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    const f = async () => {\n      let err;\n      const dataElementAttributes = await fetchAttributes(`${baseUrl}/api/`, 'dataElementAttribute').catch(error => err = error);\n      const organisationUnitAttributes = await fetchAttributes(`${baseUrl}/api/`, 'organisationUnitAttribute').catch(error => err = error);\n      setError(err);\n\n      if (!err) {\n        const sharedAttributes = dataElementAttributes.reduce((shared, attribute) => {\n          const foundInOrgUnits = attributeFoundIn(attribute, organisationUnitAttributes);\n          return foundInOrgUnits ? [...shared, attribute] : shared;\n        }, []);\n        setSchemes(sharedAttributes);\n      }\n\n      setLoading(false);\n    };\n\n    f();\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional ID schemes')} : ${error.message}`;\n  const options = [...idSchemeOptions, ...schemes];\n  return <SelectField name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} dense />;\n};\n\nIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  idSchemeOptions: optionsPropType.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { IdScheme };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, Help } from '@dhis2/ui-core';\nimport styles from './ImportButtonStrip.module.css';\nconst DRYRUN_HELPTEXT = i18n.t('Will do a test run without importing any data into the database');\n\nconst ImportButtonStrip = ({\n  dryRunDataTest,\n  importDataTest,\n  form,\n  dataTest\n}) => {\n  return <div data-test={dataTest}>\n            <ButtonStrip dataTest={`${dataTest}-button-strip`}>\n                <Button primary type=\"submit\" onClick={() => form.change('dryRun', true)} dataTest={dryRunDataTest} className={styles.dryRun}>\n                    {i18n.t('Dry run')}\n                </Button>\n                <Button secondary type=\"submit\" onClick={() => form.change('dryRun', false)} dataTest={importDataTest}>\n                    {i18n.t('Import')}\n                </Button>\n            </ButtonStrip>\n            <Help dataTest={`${dataTest}-help`}>{`${i18n.t('Dry run')}: ${DRYRUN_HELPTEXT}`}</Help>\n        </div>;\n};\n\nImportButtonStrip.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  dryRunDataTest: PropTypes.string.isRequired,\n  form: PropTypes.object.isRequired,\n  importDataTest: PropTypes.string.isRequired\n};\nexport { ImportButtonStrip };","import { categoryTypes } from '../../utils/tasks';\nconst categoryTypesObj = categoryTypes.reduce((acc, cur) => {\n  acc[cur.importType] = cur;\n  return acc;\n}, {});\n\nconst jobToPath = job => ({\n  pathname: `/import/${categoryTypesObj[job.importType].key}`,\n  query: {\n    id: job.id\n  }\n});\n\nexport { categoryTypesObj, jobToPath };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './MenuLabel.module.css';\nimport { jsDateToString, trimString } from '../../../utils/helper';\n\nconst MenuLabel = ({\n  task\n}) => {\n  return <div className={styles.container} data-test={`job-overview-menu-label-${task.id}`}>\n            <div className={styles.status}>\n                <span>{trimString(15, task.jobDetails.files[0].name)}</span>\n                <br />\n                <span>\n                    {task.completed ? i18n.t('Completed') : i18n.t('In progress')}{' '}\n                </span>\n            </div>\n            <div className={styles.date}>{jsDateToString(task.created)}</div>\n        </div>;\n};\n\nMenuLabel.propTypes = {\n  task: PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    created: PropTypes.instanceOf(Date).isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    jobDetails: PropTypes.object.isRequired\n  }).isRequired\n};\nexport { MenuLabel };","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Chip, Menu, MenuItem } from '@dhis2/ui-core';\nimport styles from './JobOverview.module.css';\nimport { TaskContext } from '../../contexts/';\nimport { categoryTypes } from '../../utils/tasks';\nimport { JobSummary } from '../index';\nimport { categoryTypesObj, jobToPath } from './helper';\nimport { MenuLabel } from './MenuLabel/MenuLabel';\n\nconst JobOverview = ({\n  activeTypes,\n  setActiveTypes,\n  selectedJob,\n  setSelectedJob\n}) => {\n  const {\n    tasks\n  } = useContext(TaskContext);\n\n  const onChipClick = key => {\n    if (activeTypes.includes(key)) {\n      setActiveTypes([...activeTypes].filter(k => k != key));\n    } else {\n      setActiveTypes([...activeTypes, key]);\n    }\n  }; // all tasks sorted by type, createdAt (descending)\n\n\n  const allTasks = categoryTypes.map(({\n    key: type\n  }) => Object.keys(tasks[type]).map(id => tasks[type][id])).flat().sort((a, b) => {\n    if (a.importType > b.importType) return -1;\n    if (a.createdAt > b.createdAt) return -1;\n  });\n  const filteredTasks = allTasks.filter(t => activeTypes.includes(t.importType)); // set selected job to first job if\n  // first time user visits the job overview page\n\n  useEffect(() => {\n    if (!selectedJob && allTasks.length > 0) {\n      setSelectedJob(allTasks[0]);\n    }\n  }, []);\n\n  if (!selectedJob) {\n    return <p>{i18n.t('No jobs started yet.')}</p>;\n  }\n\n  return <div className={styles.container} data-test=\"job-overview-container\">\n            <div className={styles.items} data-test=\"job-overview-tasks\">\n                <Menu className={styles.Menu}>\n                    <div className={styles.chips} data-test=\"job-overview-chips\">\n                        {categoryTypes.map(({\n            key,\n            importType,\n            label\n          }) => <Chip onClick={() => onChipClick(importType)} selected={activeTypes.includes(importType)} key={key} dataTest={`job-overview-chips-${key}`}>\n                                {label}\n                            </Chip>)}\n                    </div>\n                    {filteredTasks.map(t => <MenuItem key={`job-overview-tasks-${t.id}`} active={selectedJob.id == t.id} label={<MenuLabel task={t} />} onClick={() => setSelectedJob(t)} icon={categoryTypesObj[t.importType].icon} />)}\n                </Menu>\n            </div>\n            <div className={styles.summary} data-test=\"job-overview-summary\">\n                <JobSummary task={selectedJob} dataTest=\"job-summary-container\" showFileDetails={false} showJobDetails={true} />\n                <Link to={jobToPath(selectedJob)}>\n                    <Button primary>{i18n.t('Recreate job')}</Button>\n                </Link>\n            </div>\n        </div>;\n};\n\nJobOverview.propTypes = {\n  activeTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setActiveTypes: PropTypes.func.isRequired,\n  setSelectedJob: PropTypes.func.isRequired,\n  selectedJob: PropTypes.object\n};\nexport { JobOverview, categoryTypes };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\nimport { jsDateToString } from '../../../utils/helper';\nimport { FormField } from '../../index';\n\nconst Events = ({\n  events\n}) => {\n  return <FormField label={`${i18n.t('Events')}`} dataTest=\"job-summary-events\" name=\"events\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Time')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Message')}</TableCellHead>\n                        <TableCellHead>{i18n.t('ID')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {events.map((e, i) => <TableRow key={`job-summary-events-${e.id}-${i}`}>\n                            <TableCell>{jsDateToString(e.date)}</TableCell>\n                            <TableCell>{e.text}</TableCell>\n                            <TableCell>{e.id}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nconst eventPropType = PropTypes.shape({\n  date: PropTypes.instanceOf(Date).isRequired,\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n});\nEvents.propTypes = {\n  events: PropTypes.arrayOf(eventPropType).isRequired\n};\nexport { Events };","import PropTypes from 'prop-types';\nconst statsPropTypeObj = {\n  deleted: PropTypes.number.isRequired,\n  ignored: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  updated: PropTypes.number.isRequired,\n  imported: PropTypes.number,\n  created: PropTypes.number\n};\nconst statsPropType = PropTypes.exact(statsPropTypeObj);\n\nconst getClassName = c => {\n  const s = c.split('.');\n  return s[s.length - 1];\n};\n\nconst typeReportParse = report => {\n  let allStats = [];\n  const allMessages = [];\n  Object.keys(report).forEach(i => {\n    const {\n      klass,\n      objectReports,\n      stats\n    } = report[i];\n    allStats = [...allStats, { ...stats,\n      type: getClassName(klass)\n    }];\n    objectReports && objectReports.forEach(r => {\n      const {\n        uid,\n        errorReports\n      } = r;\n      errorReports && errorReports.forEach(e => {\n        allMessages.push({\n          uid,\n          type: getClassName(e.mainKlass),\n          property: e.errorProperty,\n          message: e.message\n        });\n      });\n    });\n  });\n  return {\n    stats: allStats,\n    messages: allMessages\n  };\n};\n\nconst messagesPropType = PropTypes.arrayOf(PropTypes.exact({\n  uid: PropTypes.string,\n  type: PropTypes.string,\n  property: PropTypes.string,\n  message: PropTypes.string\n}));\nexport { typeReportParse, statsPropType, statsPropTypeObj, messagesPropType };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\n\nconst SingleStatusTable = ({\n  status,\n  description\n}) => <Table>\n        <TableHead>\n            <TableRowHead>\n                <TableCellHead>{i18n.t('Status')}</TableCellHead>\n                <TableCellHead>{i18n.t('Description')}</TableCellHead>\n            </TableRowHead>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>{status}</TableCell>\n                <TableCell>{description}</TableCell>\n            </TableRow>\n        </TableBody>\n    </Table>;\n\nSingleStatusTable.propTypes = {\n  description: PropTypes.string,\n  status: PropTypes.string\n};\nexport { SingleStatusTable };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\nimport { statsPropType } from '../helper';\nimport { SingleStatusTable } from '../SingleStatusTable/SingleStatusTable';\nimport { FormField } from '../../index';\n\nconst SingleSummary = ({\n  importCount,\n  status,\n  description,\n  conflicts,\n  id\n}) => <div>\n        <FormField label={`${i18n.t('Summary')} #${id}`} dataTest=\"job-summary-single-summary\" name=\"summary\">\n            <>\n                {status && <SingleStatusTable description={description} status={status} />}\n                <Table>\n                    <TableHead>\n                        <TableRowHead>\n                            <TableCellHead>{i18n.t('Created')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Deleted')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Ignored')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Updated')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Total')}</TableCellHead>\n                        </TableRowHead>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>{importCount.imported}</TableCell>\n                            <TableCell>{importCount.deleted}</TableCell>\n                            <TableCell>{importCount.ignored}</TableCell>\n                            <TableCell>{importCount.updated}</TableCell>\n                            <TableCell>{importCount.total}</TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </>\n        </FormField>\n        {conflicts && <FormField label={`${i18n.t('Conflicts')}`} dataTest=\"job-summary-conflicts\" name=\"conflicts\">\n                <Table>\n                    <TableHead>\n                        <TableRowHead>\n                            <TableCellHead>{i18n.t('Object')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Value')}</TableCellHead>\n                        </TableRowHead>\n                    </TableHead>\n                    <TableBody>\n                        {conflicts.map((c, i) => <TableRow key={`job-summary-conflicts-${c.object}-${i}`}>\n                                <TableCell>{c.object}</TableCell>\n                                <TableCell>{c.value}</TableCell>\n                            </TableRow>)}\n                    </TableBody>\n                </Table>\n            </FormField>}\n    </div>;\n\nSingleSummary.propTypes = {\n  id: PropTypes.string.isRequired,\n  importCount: statsPropType.isRequired,\n  conflicts: PropTypes.arrayOf(PropTypes.exact({\n    object: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })),\n  description: PropTypes.string,\n  status: PropTypes.string\n};\nexport { SingleSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\nimport { statsPropTypeObj } from '../helper';\nimport { FormField } from '../../index';\n\nconst TypeCount = ({\n  stats\n}) => {\n  if (stats.length == 0) return null;\n  return <FormField label={`${i18n.t('Type count')}`} dataTest=\"job-summary-type-count\" name=\"typeCount\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Type')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Created')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Deleted')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Ignored')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Updated')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Total')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {stats.map((s, i) => <TableRow key={`job-summary-type-count-${i}`}>\n                            <TableCell>{s.type}</TableCell>\n                            <TableCell>{s.created}</TableCell>\n                            <TableCell>{s.deleted}</TableCell>\n                            <TableCell>{s.ignored}</TableCell>\n                            <TableCell>{s.updated}</TableCell>\n                            <TableCell>{s.total}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nconst typeCountStatsPropTypeObj = { ...statsPropTypeObj,\n  type: PropTypes.string.isRequired\n};\nTypeCount.propTypes = {\n  stats: PropTypes.arrayOf(PropTypes.shape(typeCountStatsPropTypeObj)).isRequired\n};\nexport { TypeCount, typeCountStatsPropTypeObj };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\nimport { FormField } from '../../index';\nimport { messagesPropType } from '../helper';\n\nconst Messages = ({\n  messages\n}) => {\n  if (messages.length == 0) return null;\n  return <FormField label={`${i18n.t('Messages')}`} dataTest=\"job-summary-messages\" name=\"messages\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('UID')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Type')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Property')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Message')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {messages.map((m, i) => <TableRow key={`job-summary-messages-${i}`}>\n                            <TableCell>{m.uid}</TableCell>\n                            <TableCell>{m.type}</TableCell>\n                            <TableCell>{m.property}</TableCell>\n                            <TableCell>{m.message}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nMessages.propTypes = {\n  messages: messagesPropType.isRequired\n};\nexport { Messages, messagesPropType };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { statsPropType, messagesPropType } from '../helper';\nimport { SingleSummary } from '../SingleSummary/SingleSummary';\nimport { TypeCount, typeCountStatsPropTypeObj } from '../TypeCount/TypeCount';\nimport { Messages } from '../Messages/Messages';\n\nconst TypeReportSummary = ({\n  overviewStats,\n  stats,\n  messages\n}) => {\n  return <div>\n            <SingleSummary importCount={overviewStats} id={i18n.t('Overview')} />\n            <TypeCount stats={stats} />\n            <Messages messages={messages} />\n        </div>;\n};\n\nTypeReportSummary.propTypes = {\n  messages: messagesPropType.isRequired,\n  overviewStats: statsPropType.isRequired,\n  stats: PropTypes.arrayOf(PropTypes.exact(typeCountStatsPropTypeObj)).isRequired\n};\nexport { TypeReportSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './Summary.module.css';\nimport { typeReportParse } from '../helper';\nimport { SingleSummary } from '../SingleSummary/SingleSummary';\nimport { TypeReportSummary } from '../TypeReportSummary/TypeReportSummary';\n\nconst extractStats = summary => {\n  if (summary.responseType == 'ImportSummaries') {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    } = summary;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  } else if (summary.importCount) {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated\n    } = summary.importCount;\n    const total = imported + deleted + ignored + updated;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  } else if (summary.stats) {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    } = summary.stats;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  }\n};\n\nconst Summary = ({\n  summary\n}) => {\n  // gml import type object return\n  if (summary.typeReports) {\n    const overviewStats = { ...summary.stats,\n      imported: summary.stats.created\n    };\n    const {\n      stats,\n      messages\n    } = typeReportParse(summary.typeReports);\n    return <div data-test=\"job-summary-summary\">\n                <TypeReportSummary overviewStats={overviewStats} stats={stats} messages={messages} />\n            </div>;\n  }\n\n  const importCount = extractStats(summary);\n  const overviewSummary = <SingleSummary importCount={importCount} status={summary.status} description={summary.description} conflicts={summary.conflicts} id={i18n.t('Overview')} />;\n  const allSummaries = summary.responseType == 'ImportSummaries' && summary.importSummaries ? summary.importSummaries.map((s, i) => {\n    const importCount = extractStats(s);\n    return <SingleSummary key={`single-summary-${i}`} importCount={importCount} status={s.status} description={s.description} conflicts={s.conflicts} id={`${i + 1}`} />;\n  }) : null;\n  return <div data-test=\"job-summary-summary\">\n            {overviewSummary}\n            <div className={styles.rest} data-test=\"job-summary-summary-rest\">\n                {allSummaries}\n            </div>\n        </div>;\n};\n\nSummary.propTypes = {\n  summary: PropTypes.object.isRequired\n};\nexport { Summary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\nimport { FormField } from '../../index';\n\nconst valueToString = value => {\n  if (value instanceof File) {\n    return value.name;\n  } else if (Array.isArray(value)) {\n    return value.map(v => valueToString(v)).join(',');\n  } else if (value instanceof Object) {\n    return value.label;\n  }\n\n  return `${value}`;\n};\n\nconst Details = ({\n  details\n}) => {\n  return <FormField label={`${i18n.t('Job details')}`} dataTest=\"job-summary-job-details\" name=\"details\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Key')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Value')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {Object.keys(details).map(key => <TableRow key={`job-summary-job-details-${key}`}>\n                            <TableCell>{key}</TableCell>\n                            <TableCell>{valueToString(details[key])}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nDetails.propTypes = {\n  details: PropTypes.object.isRequired\n};\nexport { Details };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, Tag } from '@dhis2/ui-core';\nimport styles from './JobSummary.module.css';\nimport { jsDateToString } from '../../utils/helper';\nimport { Events } from './Events/Events';\nimport { Summary } from './Summary/Summary';\nimport { Details } from './Details/Details';\n\nconst Header = ({\n  jobDetails,\n  task,\n  showFileDetails\n}) => <div className={styles.header}>\n        <h3 className={styles.title}>{`${i18n.t('Job summary')}`}</h3>\n        {showFileDetails && <span className={styles.taskDetails}>\n                <span data-test=\"job-summary-filename\">\n                    {jobDetails.files[0].name}\n                </span>{' '}\n                -{' '}\n                <span data-test=\"job-summary-date\">\n                    {jsDateToString(task.created)}{' '}\n                </span>\n            </span>}\n    </div>;\n\nHeader.propTypes = {\n  jobDetails: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired,\n  showFileDetails: PropTypes.bool\n};\n\nconst Tags = ({\n  jobDetails,\n  task\n}) => <div className={styles.tags} data-test=\"job-summary-tags\">\n        {task.completed ? <Tag positive>{i18n.t('Completed')}</Tag> : <Tag neutral>{i18n.t('In progress')}</Tag>}\n        {task.error && <Tag negative bold>\n                {i18n.t('Error')}\n            </Tag>}\n        {task.summary && task.summary.conflicts && <Tag negative>{i18n.t('Conflicts')}</Tag>}\n        {jobDetails.dryRun && <Tag neutral bold>\n                {i18n.t('Dry run')}\n            </Tag>}\n    </div>;\n\nTags.propTypes = {\n  jobDetails: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired\n};\n\nconst JobSummary = ({\n  task,\n  showFileDetails = true,\n  showJobDetails = false,\n  dataTest\n}) => {\n  if (!task) return null;\n  const {\n    jobDetails\n  } = task;\n  return <div className={styles.container} data-test={dataTest}>\n            <Header jobDetails={jobDetails} task={task} showFileDetails={showFileDetails} />\n            <Tags jobDetails={jobDetails} task={task} />\n            <Divider />\n            {task.completed && task.summary && <Summary summary={task.summary} />}\n            <div className={styles.events}>\n                <Events events={task.events} />\n            </div>\n            {showJobDetails && <div className={styles.jobDetails}>\n                    <Details details={task.jobDetails} />\n                </div>}\n        </div>;\n};\n\nJobSummary.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  showFileDetails: PropTypes.bool,\n  showJobDetails: PropTypes.bool,\n  task: PropTypes.object\n};\nexport { JobSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { JobSummary } from '../JobSummary';\nimport { MoreOptions } from '../../index';\n\nconst MiniJobSummary = ({\n  task,\n  dataTest\n}) => {\n  if (!task) return null;\n  return <div data-test={dataTest}>\n            <MoreOptions label={i18n.t('View summary of recently started import job')} dataTest={`${dataTest}-MoreOptions`}>\n                <JobSummary task={task} dataTest={`${dataTest}-JobSummary`} />\n            </MoreOptions>\n        </div>;\n};\n\nMiniJobSummary.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  task: PropTypes.object\n};\nexport { MiniJobSummary };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { MinusIcon, PlusIcon } from '../index';\nimport styles from './MoreOptions.module.css';\n\nconst MoreOptions = ({\n  children,\n  initiallyVisible = false,\n  label = i18n.t('more options'),\n  dataTest = 'interaction-more-options'\n}) => {\n  const [hidden, setHidden] = useState(!initiallyVisible);\n\n  const onToggle = () => {\n    setHidden(!hidden);\n  };\n\n  return <div className={styles.container} data-test={dataTest}>\n            <div className={styles.header} onClick={onToggle} data-test={`${dataTest}-header`}>\n                {hidden ? <PlusIcon /> : <MinusIcon />}\n                {label}\n            </div>\n            <div className={styles.children} data-test={`${dataTest}-children`}>\n                {!hidden && children}\n            </div>\n        </div>;\n};\n\nMoreOptions.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  dataTest: PropTypes.string,\n  initiallyVisible: PropTypes.bool,\n  label: PropTypes.string\n};\nexport { MoreOptions };","import React, { useEffect, useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { fetchAttributes } from '../../utils/helper';\nimport { optionsPropType } from '../../utils/options';\nimport { SelectField } from '../index';\n\nconst OrgUnitIdScheme = ({\n  name,\n  label,\n  orgUnitIdSchemeOptions,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    fetchAttributes(`${baseUrl}/api/`, 'organisationUnitAttribute').then(attributes => setSchemes(attributes)).catch(error => setError(error));\n    setLoading(false);\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional organisation unit ID schemes')} : ${error.message}`;\n  const options = [...orgUnitIdSchemeOptions, ...schemes];\n  return <SelectField name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} dense />;\n};\n\nOrgUnitIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  orgUnitIdSchemeOptions: optionsPropType.isRequired\n};\nexport { OrgUnitIdScheme };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Radio, Checkbox, Node } from '@dhis2/ui-core';\n\nconst Tree = ({\n  list,\n  select,\n  selected,\n  multiSelect,\n  onOpen,\n  onClose,\n  dataTest\n}) => {\n  const view = () => node(list);\n\n  const node = (l, d = 0) => {\n    if (!Array.isArray(list)) {\n      return null;\n    }\n\n    return l.map(({\n      open,\n      label,\n      value,\n      children,\n      hasChildren\n    }) => {\n      const component = multiSelect ? <Checkbox name={value} value={value} label={label} checked={selected.includes(value)} onChange={() => select(value)} dataTest={`${dataTest}-${value}-select`} /> : <Radio name={value} value={value} label={label} checked={selected.includes(value)} onChange={() => select(value)} dataTest={`${dataTest}-${value}-select`} />;\n      return <Node key={`node-${value}`} open={open} label={label} component={component} value={value} onOpen={() => onOpen(value, children)} onClose={() => onClose(value, children)} dataTest={`${dataTest}-${value}`}>\n                    {hasChildren && children.length == 0 ? <span>placeholder</span> : null}\n                    {children ? node(children, d + 1) : null}\n                </Node>;\n    });\n  };\n\n  return list.length == 0 ? null : <div data-test={dataTest}>{view()}</div>;\n};\n\nconst listItemPropType = PropTypes.exact({\n  children: PropTypes.array.isRequired,\n  hasChildren: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n}); //   80:5  error  Callback prop types must be listed after all other prop types  react/sort-prop-types\n\nTree.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  list: PropTypes.arrayOf(listItemPropType).isRequired,\n  selected: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onClose: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/sort-prop-types\n  onOpen: PropTypes.func.isRequired,\n  select: PropTypes.func.isRequired,\n  multiSelect: PropTypes.bool\n};\nexport { Tree };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { CircularLoader, Help } from '@dhis2/ui-core';\nimport { pathToId } from '../../utils/helper';\nimport { FormField } from '../index';\nimport { Tree } from './Tree/Tree';\nimport styles from './OrgUnitTree.module.css';\nconst rootQuery = {\n  roots: {\n    resource: 'organisationUnits',\n    params: {\n      filter: 'level:eq:1',\n      fields: 'id,path,displayName,children::isNotEmpty',\n      paging: 'false'\n    }\n  }\n};\nconst orgQuery = {\n  units: {\n    resource: 'organisationUnits',\n    id: ({\n      id\n    }) => `${id}`,\n    params: {\n      fields: 'children[id,displayName,path,children::isNotEmpty]',\n      paging: 'false'\n    }\n  }\n};\n\nconst OrgUnitTree = ({\n  label,\n  selected,\n  setSelected,\n  meta,\n  dataTest,\n  multiSelect = true\n}) => {\n  const [children, setChildren] = useState([]);\n  const [error, setError] = useState(undefined);\n  const {\n    loading,\n    engine\n  } = useDataQuery(rootQuery, {\n    onComplete: data => {\n      const roots = data.roots.organisationUnits;\n      const list = formatList(roots);\n      setChildren(list);\n    },\n    onError: error => {\n      setError(error);\n      console.error('OrgUnitTree error: ', error);\n    }\n  });\n\n  const formatList = list => {\n    return list.map(({\n      id,\n      path,\n      displayName,\n      children\n    }) => ({\n      open: false,\n      id: id,\n      value: path,\n      label: displayName,\n      children: [],\n      hasChildren: children\n    }));\n  };\n\n  const toggleOpenStatus = path => {\n    const hierarchy = path.split('/').filter(p => p.length != 0);\n    const newChildren = [...children];\n    let target = newChildren;\n    hierarchy.forEach(parent => {\n      target = target.find(el => el.id == parent);\n\n      if (target.value == path) {\n        target.open = !target.open;\n      } else {\n        target = target.children;\n      }\n    });\n    setChildren(newChildren);\n  };\n\n  const setChildrenFor = (path, ch) => {\n    const list = formatList(ch);\n    list.sort((a, b) => a.label.localeCompare(b.label));\n    const hierarchy = path.split('/').filter(p => p.length != 0);\n    const newChildren = [...children];\n    let target = newChildren;\n    hierarchy.forEach(parent => {\n      target = target.find(el => el.id == parent);\n\n      if (target.value == path) {\n        target.children = list;\n        target.open = true;\n      } else {\n        target = target.children;\n      }\n    });\n    setChildren(newChildren);\n  };\n\n  const onOpen = (path, ch) => {\n    if (ch.length == 0) {\n      const orgId = pathToId(path);\n      engine.query(orgQuery, {\n        variables: {\n          id: orgId\n        },\n        onComplete: data => {\n          setChildrenFor(path, data.units.children);\n        },\n        onError: error => {\n          setError(error);\n          console.error('OrgUnitTree onOpen error: ', error);\n        }\n      });\n    } else {\n      toggleOpenStatus(path);\n    }\n  };\n\n  const onClose = path => {\n    toggleOpenStatus(path);\n  };\n\n  const onSelect = path => {\n    if (multiSelect) {\n      const newValue = !selected.includes(path);\n\n      if (newValue == false) {\n        setSelected(selected.filter(p => p != path));\n      } else {\n        setSelected([...selected, path]);\n      }\n    } else {\n      setSelected([path]);\n    }\n  };\n\n  const showTree = !loading && !error;\n  return <FormField label={label} dataTest={dataTest}>\n            <div className={styles.container}>\n                {loading && <CircularLoader dataTest={`${dataTest}-loading`} />}\n                {error && <div data-test={`${dataTest}-error`}>\n                        <p>\n                            {i18n.t('Something went wrong when loading the organisation units!')}\n                        </p>\n                        <p>{error.message}</p>\n                    </div>}\n                {showTree && <Tree selected={selected} select={onSelect} multiSelect={multiSelect} onOpen={onOpen} onClose={onClose} list={children} dataTest={`${dataTest}-tree`} />}\n                {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n            </div>\n        </FormField>;\n};\n\nOrgUnitTree.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  selected: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelected: PropTypes.func.isRequired,\n  multiSelect: PropTypes.bool\n};\nexport { OrgUnitTree };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui-forms';\nimport { OrgUnitTree } from '../index';\n\nconst SINGLE_ORG_VALIDATOR = selectedOrgUnits => selectedOrgUnits.length == 0 ? i18n.t('At least one organisation unit must be selected') : undefined;\n\nconst SINGLE_EXACT_ORG_VALIDATOR = selectedOrgUnits => selectedOrgUnits.length != 1 ? i18n.t('One organisation unit must be selected') : undefined;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  ...rest\n}) => <OrgUnitTree meta={meta} selected={value} setSelected={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst OrgUnitTreeField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nOrgUnitTreeField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { OrgUnitTreeField, SINGLE_ORG_VALIDATOR, SINGLE_EXACT_ORG_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CircularLoader, ComponentCover, LinearLoader } from '@dhis2/ui-core';\nimport styles from './Page.module.css';\nimport { JobSummary, MiniJobSummary } from '../index';\n\nconst Page = ({\n  title,\n  desc,\n  icon,\n  summaryTask,\n  showFullSummaryTask = false,\n  children,\n  loading = false,\n  dataTest\n}) => {\n  const loadingEl = typeof loading == 'number' ? <LinearLoader amount={loading} /> : <CircularLoader />;\n  return <div className={styles.container} data-test={dataTest}>\n            <div className={styles.header}>\n                <span className={styles.iconAndTitle}>\n                    <span className={styles.icon}>{icon}</span>\n                    <span className={styles.title}>{title}</span>\n                </span>\n                <p className={styles.desc}>{desc}</p>\n            </div>\n            {summaryTask && <Card className={styles.preBody}>\n                    <div className={styles.content}>\n                        {showFullSummaryTask ? <JobSummary task={summaryTask} dataTest=\"job-summary-container\" /> : <MiniJobSummary task={summaryTask} dataTest=\"mini-job-summary-container\" />}\n                    </div>\n                </Card>}\n            <Card>\n                {!!loading && <ComponentCover>{loadingEl}</ComponentCover>}\n                <div className={styles.content}>{children}</div>\n            </Card>\n        </div>;\n};\n\nPage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  dataTest: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  icon: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  showFullSummaryTask: PropTypes.bool,\n  summaryTask: PropTypes.object\n};\nexport { Page };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SelectField } from '../index';\nimport { useProgramStages } from '../../hooks/index';\n\nconst SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR = programStage => !programStage ? i18n.t('One program stage must be selected') : undefined;\n\nconst ProgramStages = ({\n  name,\n  label,\n  selectedPrograms,\n  form,\n  validator,\n  dataTest\n}) => {\n  const setProgramStage = val => form.change(name, val);\n\n  const program = selectedPrograms.length > 0 ? selectedPrograms[0] : undefined;\n  const {\n    loading: programStagesLoading,\n    error: programStagesError,\n    validationText: programStagesValidationText,\n    programStages\n  } = useProgramStages(program, setProgramStage);\n  return <SelectField name={name} loading={programStagesLoading} label={label} validate={validator} dataTest={dataTest} options={programStages} validationText={programStagesValidationText} error={!!programStagesError} dense />;\n};\n\nProgramStages.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  form: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  selectedPrograms: PropTypes.array.isRequired,\n  validator: PropTypes.func\n};\nexport { ProgramStages, SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Help, Radio } from '@dhis2/ui-core';\nimport { optionPropType, optionsPropType } from '../../utils/options';\nimport { FormField } from '../index';\nimport styles from './RadioGroup.module.css';\n\nconst RadioGroup = ({\n  name,\n  label,\n  options,\n  checked,\n  setValue,\n  vertical,\n  dataTest\n}) => {\n  const onChange = label => ({\n    value\n  }) => setValue({\n    value: value,\n    label: label\n  });\n\n  return <FormField label={label} dataTest={dataTest} name={name}>\n            <div className={vertical ? undefined : styles.inputs}>\n                {options.map(o => <div key={o.value}>\n                        <Radio className={styles.radio} name={name} value={o.value} label={o.label} checked={o.value == checked.value} onChange={onChange(o.label)} dataTest={`${dataTest}-${o.value}`} />\n                        {o.help && <Help>{o.help}</Help>}\n                    </div>)}\n            </div>\n        </FormField>;\n};\n\nRadioGroup.propTypes = {\n  checked: optionPropType.isRequired,\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  options: optionsPropType.isRequired,\n  setValue: PropTypes.func.isRequired,\n  vertical: PropTypes.bool\n};\nexport { RadioGroup };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from '@dhis2/ui-forms';\nimport { RadioGroup } from '../index';\nimport { optionPropType } from '../../utils/options';\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta: {\n    error\n  },\n  inputName,\n  ...rest\n}) => <RadioGroup name={inputName} error={error} checked={value} setValue={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: optionPropType.isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst RadioGroupField = ({\n  name,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} inputName={name} {...rest} />;\n};\n\nRadioGroupField.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport { RadioGroupField };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { FileUpload as FileUploadGeneric } from '../index';\nimport { SINGLE_FILE_VALIDATOR } from '../FileUpload/FileUpload';\nconst NAME = 'files';\nconst LABEL = i18n.t('File');\nconst DATATEST = 'input-file-upload';\nconst VALIDATOR = SINGLE_FILE_VALIDATOR;\n\nconst FileUpload = () => <FileUploadGeneric name={NAME} label={LABEL} validator={VALIDATOR} dataTest={DATATEST} />;\n\nexport { FileUpload };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ImportButtonStrip as ImportButtonStripGeneric } from '../index';\nconst DRYRUNDATATEST = 'input-dry-run';\nconst IMPORTDATATEST = 'input-import-submit';\nconst DATATEST = 'input-import-button-strip';\n\nconst ImportButtonStrip = ({\n  form\n}) => <ImportButtonStripGeneric form={form} dryRunDataTest={DRYRUNDATATEST} importDataTest={IMPORTDATATEST} dataTest={DATATEST} />;\n\nImportButtonStrip.propTypes = {\n  form: PropTypes.object.isRequired\n};\nexport { ImportButtonStrip };","import React from 'react';\nimport { FormAlerts as FormAlertsGeneric } from '../index';\nconst DATATEST = 'input-form-alerts';\n\nconst FormAlerts = ({\n  alerts\n}) => <FormAlertsGeneric alerts={alerts} dataTest={DATATEST} />;\n\nFormAlerts.propTypes = {\n  alerts: FormAlertsGeneric.propTypes.alerts\n};\nexport { FormAlerts };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nimport { optionsPropType } from '../../utils/options';\nconst formatOptions = [{\n  value: 'json',\n  label: i18n.t('JSON')\n}, {\n  value: 'csv',\n  label: i18n.t('CSV')\n}, {\n  value: 'xml',\n  label: i18n.t('XML')\n}];\nconst formatNoCsvOptions = formatOptions.filter(f => f.value != 'csv');\nconst formatAdxOptions = [...formatOptions, {\n  value: 'adx',\n  label: i18n.t('ADX')\n}];\nconst formatAdxPdfOptions = [...formatAdxOptions, {\n  value: 'pdf',\n  label: i18n.t('PDF')\n}];\nconst formatJsonpOptions = [...formatOptions, {\n  value: 'jsonp',\n  label: i18n.t('JSONP')\n}];\nconst defaultFormatOption = formatOptions[0];\nconst NAME = 'format';\nconst DATATEST = 'input-format';\nconst LABEL = i18n.t('Format');\n\nconst Format = ({\n  availableFormats\n}) => <RadioGroupField name={NAME} label={LABEL} options={availableFormats} dataTest={DATATEST} />;\n\nFormat.propTypes = {\n  availableFormats: optionsPropType.isRequired\n};\nexport { Format, formatOptions, formatNoCsvOptions, formatAdxOptions, formatAdxPdfOptions, formatJsonpOptions, defaultFormatOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../index';\nconst NAME = 'firstRowIsHeader';\nconst DATATEST = 'input-first-row-is-header';\nconst LABEL = i18n.t('First row is header');\n\nconst FirstRowIsHeader = ({\n  show\n}) => show && <Switch name={NAME} label={LABEL} dataTest={DATATEST} />;\n\nFirstRowIsHeader.propTypes = {\n  show: PropTypes.bool.isRequired\n};\nexport { FirstRowIsHeader };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SelectField } from '../index';\nimport { useClassKeys } from '../../hooks/index';\nconst NAME = 'classKey';\nconst LABEL = i18n.t('Class key');\nconst DATATEST = 'input-class-key';\n\nconst ClassKey = ({\n  form,\n  prevValue,\n  show = true\n}) => {\n  const setClassKey = val => form.change(NAME, val);\n\n  const {\n    loading: classKeysLoading,\n    error: classKeysError,\n    validationText: classKeysValidationText,\n    classKeys\n  } = useClassKeys(setClassKey, prevValue);\n  return show && <SelectField name={NAME} label={LABEL} options={classKeys} loading={classKeysLoading} dataTest={DATATEST} validationText={classKeysValidationText} error={!!classKeysError} filterable dense />;\n};\n\nClassKey.propTypes = {\n  form: PropTypes.object.isRequired,\n  prevValue: PropTypes.object,\n  show: PropTypes.bool\n};\nexport { ClassKey };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst strategyOptions = [{\n  value: 'NEW_AND_UPDATES',\n  label: i18n.t('New and updates')\n}, {\n  value: 'NEW',\n  label: i18n.t('New only')\n}, {\n  value: 'UPDATES',\n  label: i18n.t('Updates only')\n}, {\n  value: 'DELETE',\n  label: i18n.t('Delete')\n}];\nconst defaultStrategyOption = strategyOptions[0];\nconst NAME = 'strategy';\nconst DATATEST = 'input-strategy';\nconst LABEL = i18n.t('Strategy');\n\nconst Strategy = () => <RadioGroupField name={NAME} label={LABEL} options={strategyOptions} dataTest={DATATEST} />;\n\nexport { Strategy, defaultStrategyOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../index';\nconst NAME = 'preheatCache';\nconst DATATEST = 'input-preheat-cache';\nconst LABEL = i18n.t('Preheat cache');\nconst HELPTEXT = i18n.t('Faster for large imports');\n\nconst PreheatCache = () => <Switch name={NAME} label={LABEL} dataTest={DATATEST} help={HELPTEXT} />;\n\nexport { PreheatCache };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../index';\nconst NAME = 'skipAudit';\nconst DATATEST = 'input-has-authority-to-skip-audit';\nconst LABEL = i18n.t('Skip audit');\nconst HELPTEXT = i18n.t('Improves performance at the cost of ability to audit changes');\n\nconst SkipAudit = () => <Switch name={NAME} label={LABEL} dataTest={DATATEST} help={HELPTEXT} />;\n\nexport { SkipAudit };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../index';\nconst NAME = 'skipExistingCheck';\nconst DATATEST = 'input-skip-exisiting-check';\nconst LABEL = i18n.t('Skip exisiting check');\nconst HELPTEXT = i18n.t('Faster, but unsafe');\n\nconst SkipExistingCheck = () => <Switch name={NAME} label={LABEL} dataTest={DATATEST} help={HELPTEXT} />;\n\nexport { SkipExistingCheck };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst identifierOptions = [{\n  value: 'UID',\n  label: i18n.t('UID')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}, {\n  value: 'AUTO',\n  label: i18n.t('Auto')\n}];\nconst defaultIdentifierOption = identifierOptions[0];\nconst NAME = 'identifier';\nconst DATATEST = 'input-identifier';\nconst LABEL = i18n.t('Identifier');\n\nconst Identifier = () => <RadioGroupField name={NAME} label={LABEL} options={identifierOptions} dataTest={DATATEST} />;\n\nexport { Identifier, defaultIdentifierOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst importReportModeOptions = [{\n  value: 'ERRORS',\n  label: i18n.t('Errors')\n}, {\n  value: 'FULL',\n  label: i18n.t('Full')\n}, {\n  value: 'DEBUG',\n  label: i18n.t('Debug')\n}];\nconst defaultImportReportModeOption = importReportModeOptions[0];\nconst NAME = 'importReportMode';\nconst DATATEST = 'input-import-report-mode';\nconst LABEL = i18n.t('Import report mode');\n\nconst ImportReportMode = () => <RadioGroupField name={NAME} label={LABEL} options={importReportModeOptions} dataTest={DATATEST} />;\n\nexport { ImportReportMode, defaultImportReportModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst preheatModeOptions = [{\n  value: 'REFERENCE',\n  label: i18n.t('Reference')\n}, {\n  value: 'ALL',\n  label: i18n.t('All')\n}, {\n  value: 'NONE',\n  label: i18n.t('None')\n}];\nconst defaultPreheatModeOption = preheatModeOptions[0];\nconst NAME = 'preheatMode';\nconst DATATEST = 'input-preheat-mode';\nconst LABEL = i18n.t('Preheat mode');\n\nconst PreheatMode = () => <RadioGroupField name={NAME} label={LABEL} options={preheatModeOptions} dataTest={DATATEST} />;\n\nexport { PreheatMode, defaultPreheatModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst importStrategyOptions = [{\n  value: 'CREATE_AND_UPDATE',\n  label: i18n.t('New and updates')\n}, {\n  value: 'CREATE',\n  label: i18n.t('New only')\n}, {\n  value: 'UPDATES',\n  label: i18n.t('Updates only')\n}, {\n  value: 'DELETE',\n  label: i18n.t('Delete')\n}];\nconst defaultImportStrategyOption = importStrategyOptions[0];\nconst NAME = 'importStrategy';\nconst DATATEST = 'input-import-strategy';\nconst LABEL = i18n.t('Import strategy');\n\nconst ImportStrategy = () => <RadioGroupField name={NAME} label={LABEL} options={importStrategyOptions} dataTest={DATATEST} />;\n\nexport { ImportStrategy, defaultImportStrategyOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst atomicModeOptions = [{\n  value: 'ALL',\n  label: i18n.t('All')\n}, {\n  value: 'NONE',\n  label: i18n.t('None')\n}];\nconst defaultAtomicModeOption = atomicModeOptions[0];\nconst NAME = 'atomicMode';\nconst DATATEST = 'input-atomic-mode';\nconst LABEL = i18n.t('Atomic mode');\n\nconst AtomicMode = () => <RadioGroupField name={NAME} label={LABEL} options={atomicModeOptions} dataTest={DATATEST} />;\n\nexport { AtomicMode, defaultAtomicModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst mergeModeOptions = [{\n  value: 'MERGE',\n  label: i18n.t('Merge')\n}, {\n  value: 'REPLACE',\n  label: i18n.t('Replace')\n}];\nconst defaultMergeModeOption = mergeModeOptions[0];\nconst NAME = 'mergeMode';\nconst DATATEST = 'input-merge-mode';\nconst LABEL = i18n.t('Merge mode');\n\nconst MergeMode = () => <RadioGroupField name={NAME} label={LABEL} options={mergeModeOptions} dataTest={DATATEST} />;\n\nexport { MergeMode, defaultMergeModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst flushModeOptions = [{\n  value: 'AUTO',\n  label: i18n.t('Auto')\n}, {\n  value: 'OBJECT',\n  label: i18n.t('Object')\n}];\nconst defaultFlushModeOption = flushModeOptions[0];\nconst NAME = 'flushMode';\nconst DATATEST = 'input-flush-mode';\nconst LABEL = i18n.t('Flush mode');\n\nconst FlushMode = () => <RadioGroupField name={NAME} label={LABEL} options={flushModeOptions} dataTest={DATATEST} />;\n\nexport { FlushMode, defaultFlushModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst inclusionStrategyOptions = [{\n  value: 'NON_NULL',\n  label: i18n.t('Non Null')\n}, {\n  value: 'ALWAYS',\n  label: i18n.t('Always')\n}, {\n  value: 'NON_EMPTY',\n  label: i18n.t('Non Empty')\n}];\nconst defaultInclusionStrategyOption = inclusionStrategyOptions[0];\nconst NAME = 'inclusionStrategy';\nconst DATATEST = 'input-inclusion-strategy';\nconst LABEL = i18n.t('Inclusion strategy');\n\nconst InclusionStrategy = () => <RadioGroupField name={NAME} label={LABEL} options={inclusionStrategyOptions} dataTest={DATATEST} />;\n\nexport { InclusionStrategy, defaultInclusionStrategyOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../index';\nconst NAME = 'skipSharing';\nconst DATATEST = 'input-skip-sharing';\nconst LABEL = i18n.t('Skip sharing');\n\nconst SkipSharing = () => <Switch name={NAME} label={LABEL} dataTest={DATATEST} />;\n\nexport { SkipSharing };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../index';\nconst NAME = 'skipValidation';\nconst DATATEST = 'input-skip-validation';\nconst LABEL = i18n.t('Skip validation');\n\nconst SkipValidation = () => <Switch name={NAME} label={LABEL} dataTest={DATATEST} />;\n\nexport { SkipValidation };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../index';\nconst NAME = 'isAsync';\nconst DATATEST = 'input-is-async';\nconst LABEL = i18n.t('Async');\n\nconst IsAsync = () => <Switch name={NAME} label={LABEL} dataTest={DATATEST} />;\n\nexport { IsAsync };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { OrgUnitTreeField } from '../index';\nimport { SINGLE_ORG_VALIDATOR, SINGLE_EXACT_ORG_VALIDATOR } from '../OrgUnitTree/OrgUnitTreeField';\nconst NAME = 'selectedOrgUnits';\nconst LABEL = i18n.t('Organisation unit');\nconst DATATEST = 'input-org-unit-tree';\n\nconst OrgUnitTree = ({\n  multiSelect = true\n}) => {\n  const orgValidator = multiSelect ? SINGLE_ORG_VALIDATOR : SINGLE_EXACT_ORG_VALIDATOR;\n  const validator = composeValidators(hasValue, orgValidator);\n  return <OrgUnitTreeField name={NAME} validator={validator} multiSelect={multiSelect} label={LABEL} dataTest={DATATEST} />;\n};\n\nOrgUnitTree.propTypes = {\n  multiSelect: PropTypes.bool\n};\nexport { OrgUnitTree };","const resourceTypes = {\n  DATASET: 1,\n  PROGRAM: 2,\n  TETYPE: 3,\n  USER: 4\n};\nexport { resourceTypes };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedDataSets';\nconst LABEL = i18n.t('Data sets');\nconst DATATEST = 'input-data-set-picker';\nconst LISTNAME = 'dataSetPicker';\nconst FILTERLABEL = i18n.t('Filter data sets by name');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the data sets!');\nconst RESOURCETYPE = resourceTypes.DATASET;\n\nconst SINGLE_DATASET_VALIDATOR = selectedDataSets => selectedDataSets.length == 0 ? i18n.t('At least one data set must be selected') : undefined;\n\nconst SINGLE_EXACT_DATASET_VALIDATOR = selectedDataSets => selectedDataSets.length != 1 ? i18n.t('One data set must be selected') : undefined;\n\nconst DataSetPicker = ({\n  multiSelect = true\n}) => {\n  const dataSetValidator = multiSelect ? SINGLE_DATASET_VALIDATOR : SINGLE_EXACT_DATASET_VALIDATOR;\n  const validator = composeValidators(hasValue, dataSetValidator);\n  return <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={LABEL} filterLabel={FILTERLABEL} dataTest={DATATEST} validator={validator} multiSelect={multiSelect} />;\n};\n\nDataSetPicker.propTypes = {\n  multiSelect: PropTypes.bool\n};\nexport { DataSetPicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedPrograms';\nconst LABEL = i18n.t('Programs');\nconst DATATEST = 'input-program-picker';\nconst LISTNAME = 'programPicker';\nconst FILTERLABEL = i18n.t('Filter programs by name');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the programs!');\nconst RESOURCETYPE = resourceTypes.PROGRAM;\n\nconst SINGLE_PROGRAM_VALIDATOR = selectedPrograms => selectedPrograms.length == 0 ? i18n.t('At least one program must be selected') : undefined;\n\nconst SINGLE_EXACT_PROGRAM_VALIDATOR = selectedPrograms => selectedPrograms.length != 1 ? i18n.t('One program must be selected') : undefined;\n\nconst ProgramPicker = ({\n  multiSelect,\n  show,\n  ...rest\n}) => {\n  const programValidator = multiSelect ? SINGLE_PROGRAM_VALIDATOR : SINGLE_EXACT_PROGRAM_VALIDATOR;\n  const validator = composeValidators(hasValue, programValidator);\n  return show && <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={LABEL} filterLabel={FILTERLABEL} dataTest={DATATEST} multiSelect={multiSelect} validator={validator} withActions={false} autoSelectFirst={true} {...rest} />;\n};\n\nProgramPicker.defaultProps = {\n  multiSelect: false,\n  show: true\n};\nProgramPicker.propTypes = {\n  multiSelect: PropTypes.bool,\n  show: PropTypes.bool\n};\nexport { ProgramPicker };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../index';\nconst NAME = 'includeChildren';\nconst DATATEST = 'input-include-children';\nconst LABEL = i18n.t('Include children');\n\nconst IncludeChildren = () => <Switch name={NAME} label={LABEL} dataTest={DATATEST} />;\n\nexport { IncludeChildren };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../index';\nconst NAME = 'includeDeleted';\nconst DATATEST = 'input-include-deleted';\nconst LABEL = i18n.t('Include deleted');\n\nconst IncludeDeleted = () => <Switch name={NAME} label={LABEL} dataTest={DATATEST} />;\n\nexport { IncludeDeleted };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst compressionOptions = [{\n  value: 'zip',\n  label: i18n.t('Zip')\n}, {\n  value: 'gz',\n  label: i18n.t('GZip')\n}, {\n  value: '',\n  label: i18n.t('Uncompressed')\n}];\nconst defaultCompressionOption = compressionOptions[0];\nconst NAME = 'compression';\nconst DATATEST = 'input-compression';\nconst LABEL = i18n.t('Compression');\n\nconst Compression = () => <RadioGroupField name={NAME} label={LABEL} options={compressionOptions} dataTest={DATATEST} />;\n\nexport { Compression, defaultCompressionOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst inclusionOptions = [{\n  value: 'SELECTED',\n  label: i18n.t('Selected organisation unit')\n}, {\n  value: 'CHILDREN',\n  label: i18n.t('Include children of organisation unit')\n}, {\n  value: 'DESCENDANTS',\n  label: i18n.t('Include descendants of organisation unit')\n}];\nconst defaultInclusionOption = inclusionOptions[0];\nconst NAME = 'inclusion';\nconst DATATEST = 'input-inclusion';\nconst LABEL = i18n.t('Inclusion');\n\nconst Inclusion = () => <RadioGroupField name={NAME} label={LABEL} options={inclusionOptions} dataTest={DATATEST} />;\n\nexport { Inclusion, defaultInclusionOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { DatePickerField } from '../index';\nimport { DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'startDate';\nconst DATATEST = 'input-start-date';\nconst LABEL = i18n.t('Start date');\nconst VALIDATOR = composeValidators(hasValue, DATE_VALIDATOR);\n\nconst StartDate = () => <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nexport { StartDate };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { DatePickerField } from '../index';\nimport { DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'endDate';\nconst DATATEST = 'input-end-date';\nconst LABEL = i18n.t('End date');\nconst VALIDATOR = composeValidators(hasValue, DATE_VALIDATOR);\n\nconst EndDate = () => <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nexport { EndDate };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui-core';\nconst DATATEST = 'input-export-submit';\nconst LABEL = i18n.t('Export');\n\nconst ExportButton = () => <Button primary type=\"submit\" dataTest={DATATEST}>\n        {LABEL}\n    </Button>;\n\nexport { ExportButton };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { ProgramStages as ProgramStagesGeneric } from '../';\nimport { SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR } from '../ProgramStages/ProgramStages';\nconst VALIDATOR = composeValidators(hasValue, SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR);\nconst NAME = 'programStage';\nconst LABEL = i18n.t('Program stage');\nconst DATATEST = 'input-program-stage-select';\n\nconst ProgramStages = props => <ProgramStagesGeneric name={NAME} label={LABEL} validator={VALIDATOR} dataTest={DATATEST} {...props} />;\n\nexport { ProgramStages };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui-forms';\nimport { Schemas } from '../index';\n\nconst SINGLE_SCHEMA_VALIDATOR = checkedSchemas => checkedSchemas.length == 0 ? i18n.t('At least one schema must be selected') : undefined;\n\nconst Wrapper = ({\n  input: {\n    onChange\n  },\n  meta,\n  ...rest\n}) => <Schemas meta={meta} setCheckedSchemas={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst SchemasField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nSchemasField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { SchemasField, SINGLE_SCHEMA_VALIDATOR };","import React from 'react';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { SchemasField } from '../index';\nimport { SINGLE_SCHEMA_VALIDATOR } from '../Schemas/SchemasField';\nconst NAME = 'checkedSchemas';\nconst VALIDATOR = composeValidators(hasValue, SINGLE_SCHEMA_VALIDATOR);\nconst DATATEST = 'input-schemas';\nconst EXCLUDE_SCHEMAS = new Set(['analyticsTableHooks', 'charts', 'constants', 'dataElementDimensions', 'dataEntryForms', 'dataSetNotificationTemplates', 'dataStores', 'documents', 'eventCharts', 'eventReports', 'icons', 'jobConfigurations', 'messageConversations', 'metadataVersions', 'minMaxDataElements', 'oAuth2Clients', 'programDataElements', 'programNotificationTemplates', 'pushAnalysis', 'reportTables', 'reportingRates', 'reports', 'sections', 'smsCommands', 'sqlViews', 'trackedEntityInstanceFilters', 'validationNotificationTemplates']);\n\nconst Schemas = () => <SchemasField name={NAME} excludeSchemas={EXCLUDE_SCHEMAS} validator={VALIDATOR} checkedByDefault dataTest={DATATEST} />;\n\nexport { Schemas };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { SelectField } from '../index';\nconst objectTypeOptions = [{\n  value: 'dataSets',\n  label: i18n.t('Data sets')\n}, {\n  value: 'programs',\n  label: i18n.t('Programs')\n}, {\n  value: 'categoryCombos',\n  label: i18n.t('Category combination')\n}, {\n  value: 'dashboards',\n  label: i18n.t('Dashboard')\n}, {\n  value: 'dataElementGroups',\n  label: i18n.t('Data element groups')\n}, {\n  value: 'optionSets',\n  label: i18n.t('Option sets')\n}];\nconst defaultObjectTypeOption = objectTypeOptions[0];\nconst NAME = 'objectType';\nconst LABEL = i18n.t('Object type');\nconst DATATEST = 'input-object-type';\n\nconst ObjectType = () => <SelectField name={NAME} label={LABEL} options={objectTypeOptions} filled initialFocus dataTest={DATATEST} />;\n\nexport { ObjectType, defaultObjectTypeOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport i18n from '@dhis2/d2-i18n';\nimport { SelectField } from '../index';\nimport { useObjects } from '../../hooks/index';\n\nconst SINGLE_EXACT_OBJECT_VALIDATOR = object => !object ? i18n.t('One object must be selected') : undefined;\n\nconst NAME = 'object';\nconst LABEL = i18n.t('Object');\nconst VALIDATOR = composeValidators(hasValue, SINGLE_EXACT_OBJECT_VALIDATOR);\nconst DATATEST = 'input-object-select';\n\nconst Objects = ({\n  objectType,\n  form\n}) => {\n  const setObjectListSelected = val => form.change(NAME, val);\n\n  const {\n    loading: objectsLoading,\n    error: objectsError,\n    validationText: objectsValidationText,\n    objects\n  } = useObjects(objectType, setObjectListSelected);\n  return <SelectField loading={objectsLoading} name={NAME} label={LABEL} options={objects} validate={VALIDATOR} dataTest={DATATEST} validationText={objectsValidationText} error={!!objectsError} filterable dense />;\n};\n\nObjects.propTypes = {\n  form: PropTypes.object.isRequired,\n  objectType: PropTypes.object.isRequired\n};\nexport { Objects };","import { useState, useEffect } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataEngine } from '@dhis2/app-runtime';\n\nconst listQuery = resource => ({\n  data: {\n    resource: resource,\n    fields: 'id,displayName',\n    params: {\n      paging: 'false'\n    }\n  }\n});\n\nconst useObjects = (type, setSelected) => {\n  const engine = useDataEngine();\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [objects, setObjects] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    setSelected(undefined);\n    engine.query(listQuery(type.value), {\n      onComplete: data => {\n        const list = data.data[type.value];\n        const formattedList = list.map(e => ({\n          value: e.id,\n          label: e.displayName\n        }));\n        setObjects(formattedList);\n        setSelected(formattedList[0]);\n        setLoading(false);\n      },\n      onError: error => {\n        setError(error);\n        console.error('useObjects error: ', error);\n      }\n    });\n  }, [type]);\n  const validationText = error && `${i18n.t('Something went wrong when loading the objects')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    objects\n  };\n};\n\nexport { useObjects };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { DataElementIdScheme as DataElementIdSchemeGeneric } from '../index';\nconst dataElementIdSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}, {\n  value: 'NAME',\n  label: i18n.t('Name')\n}];\nconst defaultDataElementIdSchemeOption = dataElementIdSchemeOptions[0];\nconst NAME = 'dataElementIdScheme';\nconst DATATEST = 'input-data-element-id-scheme';\nconst LABEL = i18n.t('Data element ID scheme');\n\nconst DataElementIdScheme = () => <DataElementIdSchemeGeneric name={NAME} label={LABEL} dataElementIdSchemeOptions={dataElementIdSchemeOptions} dataTest={DATATEST} />;\n\nexport { DataElementIdScheme, defaultDataElementIdSchemeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { EventIdScheme as EventIdSchemeGeneric } from '../index';\nconst eventIdSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}];\nconst defaultEventIdSchemeOption = eventIdSchemeOptions[0];\nconst NAME = 'eventIdScheme';\nconst DATATEST = 'input-event-id-scheme';\nconst LABEL = i18n.t('Event ID scheme');\n\nconst EventIdScheme = () => <EventIdSchemeGeneric name={NAME} label={LABEL} eventIdSchemeOptions={eventIdSchemeOptions} dataTest={DATATEST} />;\n\nexport { EventIdScheme, defaultEventIdSchemeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { IdScheme as IdSchemeGeneric } from '../index';\nconst idSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}];\nconst defaultIdSchemeOption = idSchemeOptions[0];\nconst NAME = 'idScheme';\nconst DATATEST = 'input-id-scheme';\nconst LABEL = i18n.t('ID scheme');\n\nconst IdScheme = () => <IdSchemeGeneric name={NAME} label={LABEL} idSchemeOptions={idSchemeOptions} dataTest={DATATEST} />;\n\nexport { IdScheme, defaultIdSchemeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { OrgUnitIdScheme as OrgUnitIdSchemeGeneric } from '../index';\nconst orgUnitIdSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}, {\n  value: 'NAME',\n  label: i18n.t('Name')\n}];\nconst defaultOrgUnitIdSchemeOption = orgUnitIdSchemeOptions[0];\nconst NAME = 'orgUnitIdScheme';\nconst DATATEST = 'input-org-unit-id-scheme';\nconst LABEL = i18n.t('Organisation unit ID scheme');\n\nconst OrgUnitIdScheme = () => <OrgUnitIdSchemeGeneric name={NAME} label={LABEL} orgUnitIdSchemeOptions={orgUnitIdSchemeOptions} dataTest={DATATEST} />;\n\nexport { OrgUnitIdScheme, defaultOrgUnitIdSchemeOption };","const hasAuthorityToSkipAudit = authorities => authorities.includes('ALL') || authorities.includes('F_SKIP_DATA_IMPORT_AUDIT');\n\nconst hasAuthorityToSelectAllOrgUnits = authorities => authorities.includes('ALL');\n\nexport { hasAuthorityToSkipAudit, hasAuthorityToSelectAllOrgUnits };","import React, { useContext } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { UserContext } from '../../contexts/index';\nimport { hasAuthorityToSelectAllOrgUnits } from '../WithAuthority/predicates';\nimport { RadioGroupField } from '../index';\nconst orgUnitSelectionModeOptions = [{\n  value: 'SELECTED',\n  label: i18n.t('Selected organisation units')\n}, {\n  value: 'CHILDREN',\n  label: i18n.t('Include children of selected organisation units')\n}, {\n  value: 'DESCENDANTS',\n  label: i18n.t('Include descendants of selected organisation unit')\n}, {\n  value: 'ACCESSIBLE',\n  label: i18n.t('Data view organisation units associated with the current user')\n}, {\n  value: 'CAPTURE',\n  label: i18n.t('Data capture organisation units associated with the current user')\n}, {\n  value: 'ALL',\n  label: i18n.t('All organisation units in the system')\n}];\nconst defaultOrgUnitSelectionModeOption = orgUnitSelectionModeOptions[0];\nconst NAME = 'ouMode';\nconst DATATEST = 'input-ouMode';\nconst LABEL = i18n.t('Organisation unit selection mode');\n\nconst OrgUnitMode = () => {\n  const user = useContext(UserContext);\n  const canSelectAllOrgUnits = user ? hasAuthorityToSelectAllOrgUnits(user.authorities) : false;\n  const options = canSelectAllOrgUnits ? orgUnitSelectionModeOptions : orgUnitSelectionModeOptions.filter(({\n    value\n  }) => value != 'ALL');\n  return <RadioGroupField name={NAME} label={LABEL} options={options} dataTest={DATATEST} vertical />;\n};\n\nexport { OrgUnitMode, defaultOrgUnitSelectionModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst teiTypeFilterOptions = [{\n  value: 'NONE',\n  label: i18n.t('None')\n}, {\n  value: 'PROGRAM',\n  label: i18n.t('Program')\n}, {\n  value: 'TE',\n  label: i18n.t('Tracked entity')\n}];\nconst defaultTEITypeFilterOption = teiTypeFilterOptions[0];\nconst NAME = 'teiTypeFilter';\nconst DATATEST = 'input-tei-type-filter';\nconst LABEL = i18n.t('Filter by');\n\nconst TEITypeFilter = () => <RadioGroupField name={NAME} label={LABEL} options={teiTypeFilterOptions} dataTest={DATATEST} />;\n\nexport { TEITypeFilter, defaultTEITypeFilterOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst programStatusOptions = [{\n  value: '',\n  label: i18n.t('All')\n}, {\n  value: 'ACTIVE',\n  label: i18n.t('Active')\n}, {\n  value: 'COMPLETED',\n  label: i18n.t('Completed')\n}, {\n  value: 'CANCELLED',\n  label: i18n.t('Cancelled')\n}];\nconst defaultProgramStatusOption = programStatusOptions[0];\nconst NAME = 'programStatus';\nconst DATATEST = 'input-program-status';\nconst LABEL = i18n.t('Program status');\n\nconst ProgramStatus = ({\n  show\n}) => show && <RadioGroupField name={NAME} label={LABEL} options={programStatusOptions} dataTest={DATATEST} />;\n\nProgramStatus.propTypes = {\n  show: PropTypes.bool\n};\nexport { ProgramStatus, defaultProgramStatusOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst followUpStatusOptions = [{\n  value: 'ALL',\n  label: i18n.t('All')\n}, {\n  value: 'TRUE',\n  label: i18n.t('True')\n}, {\n  value: 'FALSE',\n  label: i18n.t('False')\n}];\nconst defaultFollowUpStatusOption = followUpStatusOptions[0];\nconst NAME = 'followUpStatus';\nconst DATATEST = 'input-follow-up-status';\nconst LABEL = i18n.t('Follow up status');\n\nconst FollowUpStatus = ({\n  show\n}) => show && <RadioGroupField name={NAME} label={LABEL} options={followUpStatusOptions} dataTest={DATATEST} />;\n\nFollowUpStatus.propTypes = {\n  show: PropTypes.bool\n};\nexport { FollowUpStatus, defaultFollowUpStatusOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui-forms';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'programStartDate';\nconst DATATEST = 'input-program-start-date';\nconst LABEL = i18n.t('Program start date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst ProgramStartDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nProgramStartDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { ProgramStartDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui-forms';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'programEndDate';\nconst DATATEST = 'input-program-end-date';\nconst LABEL = i18n.t('Program end date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst ProgramEndDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nProgramEndDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { ProgramEndDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedTETypes';\nconst DATATEST = 'input-te-type-picker';\nconst LABEL = i18n.t('Tracked entity types');\nconst LISTNAME = 'teTypePicker';\nconst FILTERLABEL = i18n.t('Filter tracked entity types by name');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the tracked entity types!');\nconst RESOURCETYPE = resourceTypes.TETYPE;\n\nconst SINGLE_TETYPE_VALIDATOR = selectedTypes => selectedTypes.length == 0 ? i18n.t('At least one tracked entity type must be selected') : undefined;\n\nconst SINGLE_EXACT_TETYPE_VALIDATOR = selectedTypes => selectedTypes.length != 1 ? i18n.t('One tracked entity type must be selected') : undefined;\n\nconst TETypePicker = ({\n  multiSelect,\n  show,\n  ...rest\n}) => {\n  const teTypeValidator = multiSelect ? SINGLE_TETYPE_VALIDATOR : SINGLE_EXACT_TETYPE_VALIDATOR;\n  const validator = composeValidators(hasValue, teTypeValidator);\n  return show && <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={LABEL} filterLabel={FILTERLABEL} dataTest={DATATEST} multiSelect={multiSelect} validator={validator} withActions={false} autoSelectFirst={true} {...rest} />;\n};\n\nTETypePicker.defaultProps = {\n  multiSelect: false\n};\nTETypePicker.propTypes = {\n  multiSelect: PropTypes.bool,\n  show: PropTypes.bool\n};\nexport { TETypePicker };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst lastUpdatedFilterOptions = [{\n  value: 'NONE',\n  label: i18n.t('None')\n}, {\n  value: 'DATE',\n  label: i18n.t('Start and end date')\n}, {\n  value: 'DURATION',\n  label: i18n.t('Duration')\n}];\nconst defaultLastUpdatedFilterOption = lastUpdatedFilterOptions[0];\nconst NAME = 'lastUpdatedFilter';\nconst DATATEST = 'input-last-updated-filter';\nconst LABEL = i18n.t('Filter by last updated');\n\nconst LastUpdatedFilter = () => <RadioGroupField name={NAME} label={LABEL} options={lastUpdatedFilterOptions} dataTest={DATATEST} />;\n\nexport { LastUpdatedFilter, defaultLastUpdatedFilterOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui-forms';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'lastUpdatedStartDate';\nconst DATATEST = 'input-last-updated-start-date';\nconst LABEL = i18n.t('Last updated start date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst LastUpdatedStartDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nLastUpdatedStartDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { LastUpdatedStartDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui-forms';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'lastUpdatedEndDate';\nconst DATATEST = 'input-last-updated-end-date';\nconst LABEL = i18n.t('Last updated end date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst LastUpdatedEndDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nLastUpdatedEndDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { LastUpdatedEndDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui-core';\nimport { Field } from '@dhis2/ui-forms';\nimport { FormField } from '../index'; // (\\d+d)?: one or more numbers followed by d; d for days\n// rest of the capturing groups are similar to the one described above\n\nconst durationRegex = /^(\\d+d)?(\\d+h)?(\\d+m)?(\\d+s)?$/;\n\nconst DURATION_VALIDATOR = duration => !duration || duration.match(durationRegex) ? undefined : i18n.t('Invalid duration');\n\nconst formatHelpText = `${i18n.t('Format')}: 00d00h00m00s`;\nconst exampleDuration = '100d5h30m';\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta: {\n    error\n  },\n  inputName,\n  label,\n  dataTest\n}) => <FormField label={label} dataTest={dataTest}>\n        <InputField name={inputName} value={value} onChange={({\n    value\n  }) => onChange(value)} inputWidth=\"200px\" error={!!error} validationText={error} helpText={formatHelpText} placeholder={exampleDuration} />\n    </FormField>;\n\nWrapper.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  input: PropTypes.shape({\n    value: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string\n  }).isRequired\n};\n\nconst DurationField = ({\n  name,\n  validator,\n  ...rest\n}) => <Field component={Wrapper} name={name} inputName={name} validate={validator} {...rest} />;\n\nDurationField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func.isRequired\n};\nexport { DurationField, DURATION_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { DurationField } from '../index';\nimport { DURATION_VALIDATOR } from '../Duration/DurationField';\nconst NAME = 'lastUpdatedDuration';\nconst DATATEST = 'input-last-updated-duration';\nconst LABEL = i18n.t('Last updated duration');\nconst VALIDATOR = composeValidators(hasValue, DURATION_VALIDATOR);\n\nconst LastUpdatedDuration = ({\n  show\n}) => show && <DurationField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nLastUpdatedDuration.propTypes = {\n  show: PropTypes.bool\n};\nexport { LastUpdatedDuration };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst assignedUserModeOptions = [{\n  value: 'ANY',\n  label: i18n.t('Any')\n}, {\n  value: 'CURRENT',\n  label: i18n.t('Current')\n}, {\n  value: 'NONE',\n  label: i18n.t('None')\n}, {\n  value: 'PROVIDED',\n  label: i18n.t('Provided')\n}];\nconst defaultAssignedUserModeOption = assignedUserModeOptions[0];\nconst NAME = 'assignedUserMode';\nconst DATATEST = 'input-assigned-user-mode';\nconst LABEL = i18n.t('Assigned user mode');\n\nconst AssignedUserMode = () => <RadioGroupField name={NAME} label={LABEL} options={assignedUserModeOptions} dataTest={DATATEST} />;\n\nexport { AssignedUserMode, defaultAssignedUserModeOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedUsers';\nconst DATATEST = 'input-user-picker';\nconst LABEL = i18n.t('Users');\nconst LISTNAME = 'userPicker';\nconst FILTERLABEL = i18n.t('Filter users by name');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the users!');\nconst RESOURCETYPE = resourceTypes.USER;\n\nconst SINGLE_USER_VALIDATOR = selectedUsers => selectedUsers.length == 0 ? i18n.t('At least one user must be selected') : undefined;\n\nconst SINGLE_EXACT_USER_VALIDATOR = selectedUsers => selectedUsers.length != 1 ? i18n.t('One user must be selected') : undefined;\n\nconst UserPicker = ({\n  multiSelect,\n  show,\n  ...rest\n}) => {\n  const userValidator = multiSelect ? SINGLE_USER_VALIDATOR : SINGLE_EXACT_USER_VALIDATOR;\n  const validator = composeValidators(hasValue, userValidator);\n  return show && <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={LABEL} filterLabel={FILTERLABEL} dataTest={DATATEST} multiSelect={multiSelect} validator={validator} withActions={true} {...rest} />;\n};\n\nUserPicker.defaultProps = {\n  multiSelect: true\n};\nUserPicker.propTypes = {\n  multiSelect: PropTypes.bool,\n  show: PropTypes.bool\n};\nexport { UserPicker };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../index';\nconst NAME = 'includeAllAttributes';\nconst DATATEST = 'input-include-all-attributes';\nconst LABEL = i18n.t('Include all attributes');\n\nconst IncludeAllAttributes = () => <Switch name={NAME} label={LABEL} dataTest={DATATEST} />;\n\nexport { IncludeAllAttributes };","export const FORM_ERROR = 'FINAL_FORM/form-error';\nexport const ARRAY_ERROR = 'FINAL_FORM/array-error';","import i18n from '@dhis2/d2-i18n';\nimport { FORM_ERROR } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    format,\n    identifier,\n    importReportMode,\n    preheatMode,\n    importStrategy,\n    atomicMode,\n    mergeMode,\n    flushMode,\n    skipSharing,\n    skipValidation,\n    inclusionStrategy,\n    isAsync,\n    firstRowIsHeader,\n    classKey\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'metadata.json';\n  const params = [`importMode=${dryRun ? 'VALIDATE' : 'COMMIT'}`, `identifier=${identifier.value}`, `importReportMode=${importReportMode.value}`, `preheatMode=${preheatMode.value}`, `importStrategy=${importStrategy.value}`, `atomicMode=${atomicMode.value}`, `mergeMode=${mergeMode.value}`, `flushMode=${flushMode.value}`, `skipSharing=${skipSharing}`, `skipValidation=${skipValidation}`, `inclusionStrategy=${inclusionStrategy.value}`, `async=${isAsync}`, `format=${format.value}`, format.value == 'csv' ? `firstRowIsHeader=${firstRowIsHeader}&classKey=${classKey.value}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format.value,\n      type: 'METADATA_IMPORT',\n      setProgress,\n      addEntry: (id, entry) => addTask('metadata', id, { ...entry,\n        jobDetails: values\n      })\n    });\n  } catch (e) {\n    const formErrors = validate(values);\n    const allErrors = {\n      [FORM_ERROR]: [e],\n      ...formErrors\n    };\n    return allErrors;\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nconst validate = values => {\n  const classKeyValidator = (format, classKey) => format.value == 'csv' && !classKey ? i18n.t('A class key must be selected') : undefined;\n\n  return {\n    classKey: classKeyValidator(values.format, values.classKey)\n  };\n};\n\nexport { onImport, validate };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { Form } from '@dhis2/ui-forms';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { FileUpload, Format, formatOptions, defaultFormatOption, FirstRowIsHeader, ClassKey, Identifier, defaultIdentifierOption, ImportReportMode, defaultImportReportModeOption, PreheatMode, defaultPreheatModeOption, ImportStrategy, defaultImportStrategyOption, AtomicMode, defaultAtomicModeOption, MergeMode, defaultMergeModeOption, FlushMode, defaultFlushModeOption, SkipSharing, SkipValidation, IsAsync, InclusionStrategy, defaultInclusionStrategyOption, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MetadataImportIcon, MoreOptions } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Metadata import');\nconst PAGE_DESCRIPTION = i18n.t('Import metadata like data elements and organisation units using the DXF 2 format.');\nconst PAGE_ICON = <MetadataImportIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  identifier: prevJobDetails.identifier || defaultIdentifierOption,\n  importReportMode: prevJobDetails.importReportMode || defaultImportReportModeOption,\n  preheatMode: prevJobDetails.preheatMode || defaultPreheatModeOption,\n  importStrategy: prevJobDetails.importStrategy || defaultImportStrategyOption,\n  firstRowIsHeader: !!prevJobDetails.firstRowIsHeader,\n  atomicMode: prevJobDetails.atomicMode || defaultAtomicModeOption,\n  mergeMode: prevJobDetails.mergeMode || defaultMergeModeOption,\n  flushMode: prevJobDetails.flushMode || defaultFlushModeOption,\n  inclusionStrategy: prevJobDetails.inclusionStrategy || defaultInclusionStrategyOption,\n  skipSharing: !!prevJobDetails.skipSharing,\n  skipValidation: !!prevJobDetails.skipValidation,\n  isAsync: !prevJobDetails.isAsync\n});\n\nconst MetadataImport = () => {\n  const {\n    tasks: {\n      metadata: metadataTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, metadataTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-metadata\" summaryTask={getNewestTask(metadataTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <FileUpload />\n                        <Format availableFormats={formatOptions} />\n                        <FirstRowIsHeader show={values.format.value == 'csv'} />\n                        <ClassKey show={values.format.value == 'csv'} form={form} prevValue={prevJobDetails.classKey} />\n                        <Identifier />\n                        <ImportReportMode />\n                        <PreheatMode />\n                        <ImportStrategy />\n                        <AtomicMode />\n                        <MergeMode />\n                        <MoreOptions>\n                            <FlushMode />\n                            <SkipSharing />\n                            <SkipValidation />\n                            <IsAsync />\n                            <InclusionStrategy />\n                        </MoreOptions>\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataImport };","import React from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Form } from '@dhis2/ui-forms';\nimport { Format, formatOptions, defaultFormatOption, Schemas, Compression, defaultCompressionOption, SkipSharing, ExportButton } from '../../components/Inputs/index';\nimport { Page, MetadataExportIcon } from '../../components/index';\nimport { onExport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Metadata export');\nconst PAGE_DESCRIPTION = i18n.t('Export meta data like data elements and organisation units in the XML, JSON or CSV format.');\nconst PAGE_ICON = <MetadataExportIcon />;\nconst initialValues = {\n  checkedSchemas: [],\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  skipSharing: false\n};\n\nconst MetadataExport = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-metadata\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} render={({\n      handleSubmit,\n      form\n    }) => <form onSubmit={handleSubmit}>\n                        <Schemas />\n                        <Format availableFormats={formatOptions} />\n                        <Compression />\n                        <SkipSharing />\n                        <ExportButton />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataExport };","import { locationAssign } from '../../utils/helper';\n\nconst onExport = baseUrl => values => {\n  const {\n    checkedSchemas,\n    format,\n    compression,\n    skipSharing\n  } = values; // generate download url\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `metadata`;\n  const endpointExtension = compression.value ? `${format.value}.${compression.value}` : format.value;\n  const schemaParams = checkedSchemas.map(name => `${name}=true`).join('&');\n  const downloadUrlParams = `skipSharing=${skipSharing}&download=true&${schemaParams}`;\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url);\n};\n\nexport { onExport };","import React from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Form } from '@dhis2/ui-forms';\nimport { Format, formatNoCsvOptions, defaultFormatOption, Compression, defaultCompressionOption, ObjectType, defaultObjectTypeOption, Objects, SkipSharing, ExportButton } from '../../components/Inputs/index';\nimport { Page, MetadataDependencyExportIcon } from '../../components/index';\nimport { onExport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Metadata dependency export');\nconst PAGE_DESCRIPTION = i18n.t('Export metadata like data sets and programs including related metadata objects in the XML or JSON format.');\nconst PAGE_ICON = <MetadataDependencyExportIcon />;\nconst initialValues = {\n  objectType: defaultObjectTypeOption,\n  object: undefined,\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  skipSharing: false\n};\n\nconst MetadataDependencyExport = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-metadata-dependency\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} render={({\n      handleSubmit,\n      form,\n      values\n    }) => <form onSubmit={handleSubmit}>\n                        <ObjectType />\n                        <Objects objectType={values.objectType} form={form} />\n                        <Format availableFormats={formatNoCsvOptions} />\n                        <Compression />\n                        <SkipSharing />\n                        <ExportButton />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataDependencyExport };","import { locationAssign } from '../../utils/helper';\n\nconst onExport = baseUrl => values => {\n  const {\n    objectType,\n    object,\n    format,\n    compression,\n    skipSharing\n  } = values;\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `${objectType.value}/${object.value}/metadata`;\n  const endpointExtension = compression.value ? `${format.value}.${compression.value}` : format.value;\n  const downloadUrlParams = `skipSharing=${skipSharing}&download=true`;\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url);\n};\n\nexport { onExport };","import React, { useContext } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './JobOverview.module.css';\nimport { TaskContext } from '../../contexts/index';\nimport { JobOverview as JobOverviewComponent, Page, TasksIcon } from '../../components/index';\n\nconst JobOverview = () => {\n  const {\n    jobOverview,\n    updateJobOverview\n  } = useContext(TaskContext);\n\n  const setActiveTypes = types => {\n    updateJobOverview({\n      activeTypes: types\n    });\n  };\n\n  const setSelectedJob = job => {\n    updateJobOverview({\n      selectedJob: job\n    });\n  };\n\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"job-overview-page\">\n            <div className={styles.container}>\n                <JobOverviewComponent activeTypes={jobOverview.activeTypes} setActiveTypes={setActiveTypes} selectedJob={jobOverview.selectedJob} setSelectedJob={setSelectedJob} />\n            </div>\n        </Page>;\n}; // PAGE INFO\n\n\nconst PAGE_NAME = i18n.t('Job overview');\nconst PAGE_DESCRIPTION = i18n.t('An overview of all import jobs started this session.');\nconst PAGE_ICON = <TasksIcon />;\nexport { JobOverview };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { Form } from '@dhis2/ui-forms';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { FileUpload, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { Page, GMLIcon } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('GML import');\nconst PAGE_DESCRIPTION = i18n.t('Import geographic data for organisation units using the GML format. GML is an XML grammar for expressing geographical features.');\nconst PAGE_ICON = <GMLIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files\n});\n\nconst GMLImport = () => {\n  const {\n    tasks: {\n      gml: gmlTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, gmlTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-gml\" summaryTask={getNewestTask(gmlTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <FileUpload />\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { GMLImport };","import { FORM_ERROR } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'metadata/gml.json';\n  const params = [`dryRun=${dryRun}`, 'format=json'].join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: 'gml',\n      type: 'GML_IMPORT',\n      setProgress,\n      addEntry: (id, entry) => addTask('gml', id, { ...entry,\n        jobDetails: values\n      })\n    });\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { Form } from '@dhis2/ui-forms';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { FileUpload, Format, formatOptions, defaultFormatOption, DataElementIdScheme, defaultDataElementIdSchemeOption, EventIdScheme, defaultEventIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MoreOptions, EventIcon } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Event import');\nconst PAGE_DESCRIPTION = i18n.t('Import events for programs, stages and tracked entities using the DXF 2 format.');\nconst PAGE_ICON = <EventIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  dataElementIdScheme: prevJobDetails.dataElementIdScheme || defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: prevJobDetails.orgUnitIdScheme || defaultOrgUnitIdSchemeOption,\n  eventIdScheme: prevJobDetails.eventIdScheme || defaultEventIdSchemeOption,\n  idScheme: prevJobDetails.idScheme || defaultIdSchemeOption\n});\n\nconst EventImport = () => {\n  const {\n    tasks: {\n      event: eventTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, eventTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-event\" summaryTask={getNewestTask(eventTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <FileUpload />\n                        <Format availableFormats={formatOptions} />\n                        <MoreOptions>\n                            <EventIdScheme />\n                            <DataElementIdScheme />\n                            <OrgUnitIdScheme />\n                            <IdScheme />\n                        </MoreOptions>\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { EventImport };","import { FORM_ERROR } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    format,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    eventIdScheme,\n    idScheme\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'events.json';\n  const params = ['skipFirst=true', 'async=true', `dryRun=${dryRun}`, `dataElementIdScheme=${dataElementIdScheme.value}`, `orgUnitIdScheme=${orgUnitIdScheme.value}`, `eventIdScheme=${eventIdScheme.value}`, `idScheme=${idScheme.value}`, `payloadFormat=${format.value}`].join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format.value,\n      type: 'EVENT_IMPORT',\n      setProgress,\n      addEntry: (id, entry) => addTask('event', id, { ...entry,\n        jobDetails: values\n      })\n    });\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import { jsDateToISO8601, locationAssign, pathToId } from '../../utils/helper';\nimport { ALL_VALUE } from '../../hooks/useProgramStages';\nimport { DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR } from '../../components/DatePicker/DatePickerField';\n\nconst onExport = baseUrl => values => {\n  const {\n    selectedOrgUnits,\n    selectedPrograms,\n    programStage,\n    format,\n    compression,\n    startDate,\n    endDate,\n    includeDeleted,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    idScheme,\n    inclusion\n  } = values; // generate URL and redirect\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `events`;\n  const endpointExtension = compression.value ? `${format.value}.${compression.value}` : format.value;\n  const filename = `${endpoint}.${endpointExtension}`;\n  const downloadUrlParams = ['links=false', 'skipPaging=true', `orgUnit=${pathToId(selectedOrgUnits[0])}`, `program=${selectedPrograms[0]}`, `includeDeleted=${includeDeleted}`, `dataElementIdScheme=${dataElementIdScheme.value}`, `orgUnitIdScheme=${orgUnitIdScheme.value}`, `idScheme=${idScheme.value}`, `attachment=${filename}`, `startDate=${jsDateToISO8601(startDate)}`, `endDate=${jsDateToISO8601(endDate)}`, `ouMode=${inclusion.value}`, `format=${format.value}`, programStage.value != ALL_VALUE ? `programStage=${programStage.value}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url);\n};\n\nconst validate = values => ({\n  startDate: DATE_BEFORE_VALIDATOR(values.startDate, values.endDate),\n  endDate: DATE_AFTER_VALIDATOR(values.endDate, values.startDate)\n});\n\nexport { onExport, validate };","import React from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Form } from '@dhis2/ui-forms';\nimport { OrgUnitTree, ProgramPicker, Format, formatOptions, defaultFormatOption, Compression, defaultCompressionOption, StartDate, EndDate, IncludeDeleted, Inclusion, defaultInclusionOption, ExportButton, ProgramStages, DataElementIdScheme, defaultDataElementIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, IdScheme, defaultIdSchemeOption } from '../../components/Inputs/index';\nimport { Page, MoreOptions, EventIcon } from '../../components/index';\nimport { onExport, validate } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Event export');\nconst PAGE_DESCRIPTION = i18n.t('Export event data for programs, stages and tracked entities in the DXF 2 format.');\nconst PAGE_ICON = <EventIcon />;\nconst today = new Date();\nconst initialValues = {\n  selectedOrgUnits: [],\n  selectedPrograms: [],\n  programStage: undefined,\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  startDate: new Date(today.getFullYear(), today.getMonth() - 3, today.getDate()),\n  endDate: today,\n  includeDeleted: false,\n  dataElementIdScheme: defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: defaultOrgUnitIdSchemeOption,\n  idScheme: defaultIdSchemeOption,\n  inclusion: defaultInclusionOption\n};\n\nconst EventExport = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-data\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} validate={validate} subscription={{\n      values: true\n    }} render={({\n      handleSubmit,\n      form,\n      values\n    }) => <form onSubmit={handleSubmit}>\n                        <OrgUnitTree multiSelect={false} />\n                        <ProgramPicker autoSelectFirst />\n                        <ProgramStages selectedPrograms={values.selectedPrograms} form={form} />\n                        <StartDate />\n                        <EndDate />\n                        <Format availableFormats={formatOptions} />\n                        <Compression />\n                        <MoreOptions>\n                            <IncludeDeleted />\n                            <DataElementIdScheme />\n                            <OrgUnitIdScheme />\n                            <IdScheme />\n                            <Inclusion />\n                        </MoreOptions>\n                        <ExportButton />\n                    </form>} />\n        </Page>;\n};\n\nexport { EventExport };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { Form } from '@dhis2/ui-forms';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { FileUpload, Format, formatAdxPdfOptions, defaultFormatOption, FirstRowIsHeader, Strategy, defaultStrategyOption, PreheatCache, SkipAudit, SkipExistingCheck, DataElementIdScheme, defaultDataElementIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { hasAuthorityToSkipAudit } from '../../components/WithAuthority/predicates';\nimport { Page, WithAuthority, MoreOptions, DataIcon } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Data import');\nconst PAGE_DESCRIPTION = i18n.t('Import data values from ADX XML, DXF 2 XML, JSON, CSV or PDF files.');\nconst PAGE_ICON = <DataIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  strategy: prevJobDetails.strategy || defaultStrategyOption,\n  firstRowIsHeader: !!prevJobDetails.firstRowIsHeader,\n  preheatCache: !!prevJobDetails.preheatCache,\n  skipAudit: !!prevJobDetails.skipAudit,\n  dataElementIdScheme: prevJobDetails.dataElementIdScheme || defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: prevJobDetails.orgUnitIdScheme || defaultOrgUnitIdSchemeOption,\n  idScheme: prevJobDetails.idScheme || defaultIdSchemeOption,\n  skipExistingCheck: !!prevJobDetails.skipExistingCheck\n});\n\nconst DataImport = () => {\n  const {\n    tasks: {\n      data: dataTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, dataTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-data\" summaryTask={getNewestTask(dataTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <FileUpload />\n                        <Format availableFormats={formatAdxPdfOptions} />\n                        <FirstRowIsHeader show={values.format.value == 'csv'} />\n                        <Strategy />\n                        <PreheatCache />\n                        <WithAuthority pred={hasAuthorityToSkipAudit}>\n                            <SkipAudit />\n                        </WithAuthority>\n                        <MoreOptions>\n                            <DataElementIdScheme />\n                            <OrgUnitIdScheme />\n                            <IdScheme />\n                            <SkipExistingCheck />\n                        </MoreOptions>\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { DataImport };","import { FORM_ERROR } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    strategy,\n    preheatCache,\n    skipAudit,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    idScheme,\n    skipExistingCheck,\n    format,\n    firstRowIsHeader\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'dataValueSets.json';\n  const params = ['async=true', `dryRun=${dryRun}`, `strategy=${strategy.value}`, `preheatCache=${preheatCache}`, `skipAudit=${skipAudit}`, `dataElementIdScheme=${dataElementIdScheme.value}`, `orgUnitIdScheme=${orgUnitIdScheme.value}`, `idScheme=${idScheme.value}`, `skipExistingCheck=${skipExistingCheck}`, `format=${format.value}`, format == 'csv' ? `firstRowIsHeader=${firstRowIsHeader}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format.value,\n      type: 'DATAVALUE_IMPORT',\n      setProgress,\n      addEntry: (id, entry) => addTask('data', id, { ...entry,\n        jobDetails: values\n      })\n    });\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import i18n from '@dhis2/d2-i18n';\nimport JSZip from 'jszip';\nimport { FORM_ERROR } from '../../utils/final-form';\nimport { createBlob, downloadBlob, jsDateToISO8601, pathToId } from '../../utils/helper';\nimport { DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR } from '../../components/DatePicker/DatePickerField';\nconst dataValueSetQuery = {\n  sets: {\n    resource: 'dataValueSets',\n    params: ({\n      dataElementIdScheme,\n      orgUnitIdScheme,\n      idScheme,\n      includeDeleted,\n      children,\n      startDate,\n      endDate,\n      orgUnit,\n      dataSet,\n      format\n    }) => ({\n      dataElementIdScheme,\n      orgUnitIdScheme,\n      idScheme,\n      includeDeleted,\n      children,\n      startDate,\n      endDate,\n      orgUnit,\n      dataSet,\n      format\n    })\n  }\n};\n\nconst onExport = engine => async values => {\n  const {\n    selectedOrgUnits,\n    includeChildren,\n    selectedDataSets,\n    format,\n    compression,\n    startDate,\n    endDate,\n    includeDeleted,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    idScheme\n  } = values; // fetch data\n\n  try {\n    const {\n      sets\n    } = await engine.query(dataValueSetQuery, {\n      variables: {\n        dataElementIdScheme: dataElementIdScheme.value,\n        orgUnitIdScheme: orgUnitIdScheme.value,\n        idScheme: idScheme.value,\n        includeDeleted: includeDeleted.toString(),\n        children: includeChildren.toString(),\n        startDate: jsDateToISO8601(startDate),\n        endDate: jsDateToISO8601(endDate),\n        orgUnit: selectedOrgUnits.map(o => pathToId(o)),\n        dataSet: selectedDataSets,\n        format: format.value\n      }\n    });\n    const dataStr = format.value === 'json' ? JSON.stringify(sets) : sets;\n    const filename = `data.${format.value}`;\n\n    if (compression.value !== '') {\n      const zip = new JSZip();\n      zip.file(filename, dataStr);\n      zip.generateAsync({\n        type: 'blob'\n      }).then(content => {\n        const url = URL.createObjectURL(content);\n        downloadBlob(url, `${filename}.${compression.value}`);\n      });\n    } else {\n      const url = createBlob(dataStr, format.value);\n      downloadBlob(url, filename);\n    }\n  } catch (error) {\n    const errors = [{\n      id: `http-${new Date().getTime()}`,\n      critical: true,\n      message: `${i18n.t('HTTP error when fetching data')}. ${error.message}`\n    }];\n    console.error('DataExport onExport error: ', error);\n    return {\n      [FORM_ERROR]: errors\n    };\n  }\n};\n\nconst validate = values => ({\n  startDate: DATE_BEFORE_VALIDATOR(values.startDate, values.endDate),\n  endDate: DATE_AFTER_VALIDATOR(values.endDate, values.startDate)\n});\n\nexport { onExport, validate };","import React from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Form } from '@dhis2/ui-forms';\nimport { OrgUnitTree, IncludeChildren, DataSetPicker, Format, formatAdxOptions, defaultFormatOption, Compression, defaultCompressionOption, StartDate, EndDate, IncludeDeleted, DataElementIdScheme, defaultDataElementIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ExportButton, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MoreOptions, DataIcon } from '../../components/index';\nimport { onExport, validate } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Data export');\nconst PAGE_DESCRIPTION = i18n.t('Export data values as ADX XML, DFX 2 XML, JSON or CSV files.');\nconst PAGE_ICON = <DataIcon />;\nconst today = new Date();\nconst initialValues = {\n  selectedOrgUnits: [],\n  includeChildren: true,\n  selectedDataSets: [],\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  startDate: new Date(today.getFullYear(), today.getMonth() - 3, today.getDate()),\n  endDate: today,\n  includeDeleted: false,\n  dataElementIdScheme: defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: defaultOrgUnitIdSchemeOption,\n  idScheme: defaultIdSchemeOption\n};\n\nconst DataExport = () => {\n  const engine = useDataEngine();\n  const onSubmit = onExport(engine);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-data\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} validate={validate} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <OrgUnitTree />\n                        <IncludeChildren />\n                        <DataSetPicker />\n                        <Format availableFormats={formatAdxOptions} />\n                        <Compression />\n                        <StartDate />\n                        <EndDate />\n                        <MoreOptions>\n                            <IncludeDeleted />\n                            <DataElementIdScheme />\n                            <OrgUnitIdScheme />\n                            <IdScheme />\n                        </MoreOptions>\n                        <ExportButton />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { DataExport };","import i18n from '@dhis2/d2-i18n';\nimport JSZip from 'jszip';\nimport { FORM_ERROR } from '../../utils/final-form';\nimport { createBlob, downloadBlob, jsDateToISO8601, pathToId } from '../../utils/helper';\nimport { DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR } from '../../components/DatePicker/DatePickerField'; // calculate minimum set of parameters based on given filters\n\nconst minimizeParams = ({\n  selectedOrgUnits,\n  selectedUsers,\n  selectedPrograms,\n  selectedTETypes,\n  ouMode,\n  format,\n  includeDeleted,\n  includeAllAttributes,\n  dataElementIdScheme,\n  eventIdScheme,\n  orgUnitIdScheme,\n  idScheme,\n  assignedUserMode,\n  teiTypeFilter,\n  programStatus,\n  followUpStatus,\n  programStartDate,\n  programEndDate,\n  lastUpdatedFilter,\n  lastUpdatedStartDate,\n  lastUpdatedEndDate,\n  lastUpdatedDuration\n}) => {\n  const minParams = {\n    id: format.value.toLowerCase(),\n    ou: selectedOrgUnits.map(o => pathToId(o)).join(';'),\n    ouMode: ouMode.value,\n    format: format.value,\n    includeDeleted: includeDeleted.toString(),\n    includeAllAttributes: includeAllAttributes.toString(),\n    dataElementIdScheme: dataElementIdScheme.value,\n    eventIdScheme: eventIdScheme.value,\n    orgUnitIdScheme: orgUnitIdScheme.value,\n    idScheme: idScheme.value,\n    assignedUserMode: assignedUserMode.value\n  };\n\n  if (assignedUserMode.value == 'PROVIDED') {\n    minParams.assignedUser = selectedUsers.join(';');\n  }\n\n  if (teiTypeFilter.value == 'PROGRAM') {\n    minParams.program = selectedPrograms[0];\n\n    if (minParams.programStatus) {\n      // programStatus = ALL is now the same\n      // as not providing a value for this param at all\n      minParams.programStatus = programStatus.value;\n    }\n\n    minParams.followUpStatus = followUpStatus.value;\n\n    if (programStartDate) {\n      minParams.programStartDate = jsDateToISO8601(programStartDate);\n    }\n\n    if (programEndDate) {\n      minParams.programEndDate = jsDateToISO8601(programEndDate);\n    }\n  }\n\n  if (teiTypeFilter.value == 'TE') {\n    minParams.trackedEntity = selectedTETypes[0];\n  }\n\n  if (lastUpdatedFilter.value == 'DATE') {\n    if (lastUpdatedStartDate) {\n      minParams.lastUpdatedStartDate = jsDateToISO8601(lastUpdatedStartDate);\n    }\n\n    if (lastUpdatedEndDate) {\n      minParams.lastUpdatedEndDate = jsDateToISO8601(lastUpdatedEndDate);\n    }\n  }\n\n  if (lastUpdatedFilter.value == 'DURATION') {\n    minParams.lastUpdatedDuration = lastUpdatedDuration;\n  }\n\n  return minParams;\n}; // HACK: this endpoint does not respect the 'format' parameter\n\n\nconst teiQuery = {\n  sets: {\n    resource: '/',\n    id: ({\n      id\n    }) => `trackedEntityInstances.${id}`,\n    params: x => x\n  }\n};\n\nconst onExport = engine => async values => {\n  const {\n    format,\n    compression\n  } = values; // fetch data\n\n  try {\n    const {\n      sets: teis\n    } = await engine.query(teiQuery, {\n      variables: minimizeParams(values)\n    });\n    const teiStr = format.value === 'json' ? JSON.stringify(teis) : teis;\n    const filename = `trackedEntityInstances.${format.value}`;\n\n    if (compression.value !== '') {\n      const zip = new JSZip();\n      zip.file(filename, teiStr);\n      zip.generateAsync({\n        type: 'blob'\n      }).then(content => {\n        const url = URL.createObjectURL(content);\n        downloadBlob(url, `${filename}.${compression.value}`);\n      });\n    } else {\n      const url = createBlob(teiStr, format.value);\n      downloadBlob(url, filename);\n    }\n  } catch (error) {\n    const errors = [{\n      id: `http-${new Date().getTime()}`,\n      critical: true,\n      message: `${i18n.t('HTTP error when fetching tracked entity instances')}. ${error.message}`\n    }];\n    console.error('TEIExport onExport error: ', error);\n    return {\n      [FORM_ERROR]: errors\n    };\n  }\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (values.teiTypeFilter.value == 'PROGRAM' && values.programStartDate && values.programEndDate) {\n    errors.programStartDate = DATE_BEFORE_VALIDATOR(values.programStartDate, values.programEndDate);\n    errors.programEndDate = DATE_AFTER_VALIDATOR(values.programEndDate, values.programStartDate);\n  }\n\n  if (values.lastUpdatedFilter.value == 'DATE' && values.lastUpdatedStartDate && values.lastUpdatedEndDate) {\n    errors.lastUpdatedStartDate = DATE_BEFORE_VALIDATOR(values.lastUpdatedStartDate, values.lastUpdatedEndDate);\n    errors.lastUpdatedEndDate = DATE_AFTER_VALIDATOR(values.lastUpdatedEndDate, values.lastUpdatedStartDate);\n  }\n\n  if (values.lastUpdatedFilter.value == 'DATE' && !values.lastUpdatedStartDate && !values.lastUpdatedEndDate) {\n    errors.lastUpdatedEndDate = i18n.t(\"At least one of the 'last updated' date fields must be specified\");\n  }\n\n  return errors;\n};\n\nexport { onExport, validate };","import React from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Form } from '@dhis2/ui-forms';\nimport { Format, formatJsonpOptions, defaultFormatOption, OrgUnitTree, OrgUnitMode, defaultOrgUnitSelectionModeOption, TEITypeFilter, defaultTEITypeFilterOption, ProgramStatus, defaultProgramStatusOption, FollowUpStatus, defaultFollowUpStatusOption, ProgramStartDate, ProgramEndDate, ProgramPicker, TETypePicker, Compression, defaultCompressionOption, LastUpdatedFilter, defaultLastUpdatedFilterOption, LastUpdatedStartDate, LastUpdatedEndDate, LastUpdatedDuration, AssignedUserMode, defaultAssignedUserModeOption, UserPicker, IncludeDeleted, IncludeAllAttributes, DataElementIdScheme, defaultDataElementIdSchemeOption, EventIdScheme, defaultEventIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ExportButton, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MoreOptions, TEIIcon } from '../../components/index';\nimport { onExport, validate } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Tracked entity instances export');\nconst PAGE_DESCRIPTION = i18n.t('Export tracked entity instances in the XML, JSON, JSONP or CSV format.');\nconst PAGE_ICON = <TEIIcon />;\nconst initialValues = {\n  selectedOrgUnits: [],\n  selectedPrograms: [],\n  selectedTETypes: [],\n  selectedUsers: [],\n  format: defaultFormatOption,\n  ouMode: defaultOrgUnitSelectionModeOption,\n  teiTypeFilter: defaultTEITypeFilterOption,\n  programStatus: defaultProgramStatusOption,\n  followUpStatus: defaultFollowUpStatusOption,\n  programStartDate: '',\n  programEndDate: '',\n  compression: defaultCompressionOption,\n  lastUpdatedFilter: defaultLastUpdatedFilterOption,\n  lastUpdatedStartDate: '',\n  lastUpdatedEndDate: '',\n  lastUpdatedDuration: '',\n  assignedUserMode: defaultAssignedUserModeOption,\n  includeDeleted: false,\n  includeAllAttributes: false,\n  dataElementIdScheme: defaultDataElementIdSchemeOption,\n  eventIdScheme: defaultEventIdSchemeOption,\n  orgUnitIdScheme: defaultOrgUnitIdSchemeOption,\n  idScheme: defaultIdSchemeOption\n};\n\nconst TEIExport = () => {\n  const engine = useDataEngine();\n  const onSubmit = onExport(engine);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-tei\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} validate={validate} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => {\n      const showProgramFilters = values.teiTypeFilter.value == 'PROGRAM';\n      const showTEFilters = values.teiTypeFilter.value == 'TE';\n      const showLUDates = values.lastUpdatedFilter.value == 'DATE';\n      const showLUDuration = values.lastUpdatedFilter.value == 'DURATION';\n      const showUserPicker = values.assignedUserMode.value == 'PROVIDED';\n      return <form onSubmit={handleSubmit}>\n                            <OrgUnitTree />\n                            <OrgUnitMode />\n                            <TEITypeFilter />\n                            <ProgramPicker show={showProgramFilters} />\n                            <ProgramStatus show={showProgramFilters} />\n                            <FollowUpStatus show={showProgramFilters} />\n                            <ProgramStartDate show={showProgramFilters} />\n                            <ProgramEndDate show={showProgramFilters} />\n                            <TETypePicker show={showTEFilters} />\n                            <Format availableFormats={formatJsonpOptions} />\n                            <Compression />\n                            <MoreOptions>\n                                <LastUpdatedFilter />\n                                <LastUpdatedStartDate show={showLUDates} />\n                                <LastUpdatedEndDate show={showLUDates} />\n                                <LastUpdatedDuration show={showLUDuration} />\n                                <AssignedUserMode />\n                                <UserPicker show={showUserPicker} />\n                                <IncludeDeleted />\n                                <IncludeAllAttributes />\n                                <DataElementIdScheme />\n                                <EventIdScheme />\n                                <OrgUnitIdScheme />\n                                <IdScheme />\n                            </MoreOptions>\n                            <ExportButton />\n                            <FormAlerts alerts={submitError} />\n                        </form>;\n    }} />\n        </Page>;\n};\n\nexport { TEIExport };","import { FORM_ERROR } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    format,\n    identifier,\n    importReportMode,\n    preheatMode,\n    importStrategy,\n    atomicMode,\n    mergeMode,\n    flushMode,\n    skipSharing,\n    skipValidation,\n    inclusionStrategy,\n    isAsync,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    eventIdScheme,\n    idScheme\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'trackedEntityInstances.json';\n  const params = [`importMode=${dryRun ? 'VALIDATE' : 'COMMIT'}`, `identifier=${identifier.value}`, `importReportMode=${importReportMode.value}`, `preheatMode=${preheatMode.value}`, `importStrategy=${importStrategy.value}`, `atomicMode=${atomicMode.value}`, `mergeMode=${mergeMode.value}`, `flushMode=${flushMode.value}`, `skipSharing=${skipSharing}`, `skipValidation=${skipValidation}`, `inclusionStrategy=${inclusionStrategy.value}`, `async=${isAsync}`, `format=${format.value}`, `dataElementIdScheme=${dataElementIdScheme.value}`, `orgUnitIdScheme=${orgUnitIdScheme.value}`, `eventIdScheme=${eventIdScheme.value}`, `idScheme=${idScheme.value}`].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format.value,\n      type: 'TEI_IMPORT',\n      setProgress,\n      addEntry: (id, entry) => addTask('tei', id, { ...entry,\n        jobDetails: values\n      })\n    });\n  } catch (e) {\n    const formErrors = validate(values);\n    const allErrors = {\n      [FORM_ERROR]: [e],\n      ...formErrors\n    };\n    return allErrors;\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nconst validate = () => {\n  return {};\n};\n\nexport { onImport, validate };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { Form } from '@dhis2/ui-forms';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { FileUpload, Format, formatNoCsvOptions, defaultFormatOption, Identifier, defaultIdentifierOption, ImportReportMode, defaultImportReportModeOption, PreheatMode, defaultPreheatModeOption, ImportStrategy, defaultImportStrategyOption, AtomicMode, defaultAtomicModeOption, MergeMode, defaultMergeModeOption, FlushMode, defaultFlushModeOption, SkipSharing, SkipValidation, IsAsync, InclusionStrategy, defaultInclusionStrategyOption, ImportButtonStrip, FormAlerts, DataElementIdScheme, defaultDataElementIdSchemeOption, EventIdScheme, defaultEventIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption } from '../../components/Inputs/index';\nimport { Page, TEIIcon, MoreOptions } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Tracked entity instances import');\nconst PAGE_DESCRIPTION = i18n.t('Import tracked entity instances from JSON or XML files.');\nconst PAGE_ICON = <TEIIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  identifier: prevJobDetails.identifier || defaultIdentifierOption,\n  importReportMode: prevJobDetails.importReportMode || defaultImportReportModeOption,\n  preheatMode: prevJobDetails.preheatMode || defaultPreheatModeOption,\n  importStrategy: prevJobDetails.importStrategy || defaultImportStrategyOption,\n  atomicMode: prevJobDetails.atomicMode || defaultAtomicModeOption,\n  mergeMode: prevJobDetails.mergeMode || defaultMergeModeOption,\n  flushMode: prevJobDetails.flushMode || defaultFlushModeOption,\n  inclusionStrategy: prevJobDetails.inclusionStrategy || defaultInclusionStrategyOption,\n  skipSharing: !!prevJobDetails.skipSharing,\n  skipValidation: !!prevJobDetails.skipValidation,\n  isAsync: !prevJobDetails.isAsync,\n  dataElementIdScheme: prevJobDetails.dataElementIdScheme || defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: prevJobDetails.orgUnitIdScheme || defaultOrgUnitIdSchemeOption,\n  eventIdScheme: prevJobDetails.eventIdScheme || defaultEventIdSchemeOption,\n  idScheme: prevJobDetails.idScheme || defaultIdSchemeOption\n});\n\nconst TEIImport = () => {\n  const {\n    tasks: {\n      tei: teiTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, teiTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-tei\" summaryTask={getNewestTask(teiTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <FileUpload />\n                        <Format availableFormats={formatNoCsvOptions} />\n                        <Identifier />\n                        <ImportReportMode />\n                        <PreheatMode />\n                        <ImportStrategy />\n                        <AtomicMode />\n                        <MergeMode />\n                        <MoreOptions>\n                            <FlushMode />\n                            <SkipSharing />\n                            <SkipValidation />\n                            <IsAsync />\n                            <InclusionStrategy />\n                            <DataElementIdScheme />\n                            <EventIdScheme />\n                            <OrgUnitIdScheme />\n                            <IdScheme />\n                        </MoreOptions>\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { TEIImport };","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { DataImport, DataExport, EventExport, EventImport, GMLImport, MetadataDependencyExport, MetadataExport, MetadataImport, TEIExport, TEIImport, JobOverview } from '../../pages';\n\nconst Router = () => {\n  return <Switch>\n            <Route path=\"/import/data\" component={DataImport} />\n            <Route path=\"/import/event\" component={EventImport} />\n            <Route path=\"/import/gml\" component={GMLImport} />\n            <Route path=\"/import/metadata\" component={MetadataImport} />\n            <Route path=\"/import/tei\" component={TEIImport} />\n            <Route path=\"/export/data\" component={DataExport} />\n            <Route path=\"/export/event\" component={EventExport} />\n            <Route path=\"/export/metadata-dependency\" component={MetadataDependencyExport} />\n            <Route path=\"/export/metadata\" component={MetadataExport} />\n            <Route path=\"/export/tei\" component={TEIExport} />\n            <Route path=\"/utils/job-overview\" component={JobOverview} />\n            <Redirect from=\"*\" to=\"/import/data\" />\n        </Switch>;\n};\n\nexport { Router };","/**\n * Group and sort schemas\n * ======================\n */\nconst groupSchemas = schemas => schemas.reduce((groups, schema) => {\n  const {\n    group\n  } = schema;\n  return { ...groups,\n    // add schema to \"group\" collection if existing,\n    // otherwise create new collection with schema as first entry\n    [group]: groups[group] ? [...groups[group], schema] : [schema]\n  };\n}, {});\n\nconst combineSingleItemGroups = groups => {\n  const groupNames = Object.keys(groups);\n  return groupNames.reduce((combinedGroups, groupName) => {\n    const group = groups[groupName];\n\n    if (group.length === 1) {\n      return { ...combinedGroups,\n        other: [...combinedGroups.other, group[0]]\n      };\n    }\n\n    return { ...combinedGroups,\n      [groupName]: group\n    };\n  }, {\n    other: []\n  });\n};\n/**\n * Get group label helpers\n * =======================\n */\n\n/**\n * This function will loop through all schemas and\n * compare the the lower case groupKey with\n * the schemas' name.\n * If a match is found, that match will be returned\n */\n\n\nfunction findLabelByLowerCaseComparison(groupKey, schemas) {\n  const isGroupKeyMatchingLowerCaseSchemaName = schemaName => groupKey === schemaName.toLowerCase();\n\n  return schemas.reduce((foundLabel, {\n    name: schemaName,\n    displayName\n  }) => {\n    // do not try to compare anything if a label already\n    // has been found\n    if (foundLabel) return foundLabel;\n\n    if (isGroupKeyMatchingLowerCaseSchemaName(schemaName)) {\n      return displayName;\n    }\n\n    return foundLabel;\n  }, '');\n}\n\nconst ucFirst = str => str[0].toUpperCase() + str.substr(1);\n/**\n * This function will go through all schemas\n * and will compare the scheme name with the\n * lower case group key at position 0 of the schema key.\n * Once a match is found, the match will be extracted,\n * spaces will be inserted before all capital letters\n * and the result returned\n */\n\n\nfunction findKeyByCamelCaseComparison(groupKey, schemas) {\n  const isGroupKeyInSchemaName = schemaName => schemaName.includes(groupKey) && schemaName.indexOf(groupKey) === 0; // Will return either a label or an empty string\n  // if no match for the groupKey was found\n\n\n  return schemas.reduce((foundLabel, {\n    name: schemaName\n  }) => {\n    // do not try to compare anything if a label already\n    // has been found\n    if (foundLabel) return foundLabel;\n    const lowerCaseSchemaName = schemaName.toLowerCase();\n\n    if (isGroupKeyInSchemaName(lowerCaseSchemaName)) {\n      return ucFirst(schemaName // extract part that matches the groupKey\n      .substr(0, groupKey.length) // insert space before capital letters\n      .replace(/([A-Z]+)/g, ' $1'));\n    }\n\n    return foundLabel;\n  }, '');\n}\n\nfunction extractGroupLabelFromSchemas(groupKey, schemas) {\n  const lowerCaseGroupKey = groupKey.toLowerCase();\n\n  if (lowerCaseGroupKey === 'oauth2' || lowerCaseGroupKey === 'other') {\n    return groupKey;\n  }\n\n  return findLabelByLowerCaseComparison(lowerCaseGroupKey, schemas) || findKeyByCamelCaseComparison(lowerCaseGroupKey, schemas) || groupKey[0].toUpperCase() + groupKey.substr(1);\n}\n\nconst getSchemaGroups = schemas => {\n  const groups = groupSchemas(schemas);\n  const combinedGroups = combineSingleItemGroups(groups);\n  return combinedGroups;\n};\n\nconst getGroupLabels = schemaGroups => {\n  return Object.entries(schemaGroups).reduce((groupLabels, [groupKey, schemas]) => {\n    const label = extractGroupLabelFromSchemas(groupKey, schemas);\n    return { ...groupLabels,\n      [groupKey]: label\n    };\n  }, {});\n};\n\nconst getGroupOrder = schemas => {\n  const groupKeys = Object.keys(schemas);\n  groupKeys.sort();\n  return groupKeys;\n};\n\nconst filterOutExcludedSchemas = (excludedSchemas, schemas) => schemas.filter(schema => schema.metadata && !excludedSchemas.has(schema.collectionName));\n\nconst groupName = klass => {\n  const group = klass.split('.');\n  group.pop();\n\n  if (!klass.includes('.dhis')) {\n    group.pop();\n  }\n\n  return group[group.length - 1].replace(/(.)([A-Z])/g, '$1 $2');\n};\n\nconst formatSchemas = (schemas, checkedByDefault) => schemas.map(schema => ({\n  checked: checkedByDefault,\n  label: schema.displayName,\n  name: schema.collectionName,\n  group: groupName(schema.klass)\n}));\n\nexport { filterOutExcludedSchemas, groupName, formatSchemas, getSchemaGroups, getGroupLabels, getGroupOrder };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from '@dhis2/ui-core';\nimport styles from './Schemas.module.css';\n\nconst SchemaGroup = ({\n  label,\n  schemas,\n  toggleSchema,\n  dataTest\n}) => <div className={styles.group} data-test={dataTest}>\n        <span className={styles.formLabel}>{label}</span>\n        <div className={styles.schema}>\n            {schemas.map((schema, ind) => <div key={schema.name}>\n                    <Checkbox label={schema.label} name={`schemas.${schema.name}`} value={`schemas.${schema.name}`} checked={schema.checked} onChange={() => toggleSchema(ind)} />\n                </div>)}\n        </div>\n    </div>;\n\nSchemaGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  schemas: PropTypes.arrayOf(PropTypes.exact({\n    checked: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    group: PropTypes.string.isRequired\n  })).isRequired,\n  toggleSchema: PropTypes.func.isRequired,\n  dataTest: PropTypes.string\n};\nexport { SchemaGroup };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, CircularLoader, Help } from '@dhis2/ui-core';\nimport { filterOutExcludedSchemas, formatSchemas, getSchemaGroups, getGroupLabels, getGroupOrder } from './helper';\nimport { SchemaGroup } from './SchemaGroup';\nimport styles from './Schemas.module.css';\nconst schemaQuery = {\n  schemas: {\n    resource: 'schemas',\n    params: {\n      fields: ['metadata', 'collectionName', 'displayName', 'klass']\n    }\n  }\n};\n\nconst Schemas = ({\n  excludeSchemas,\n  setCheckedSchemas,\n  meta,\n  checkedByDefault,\n  dataTest\n}) => {\n  const [schemaGroups, setSchemaGroups] = useState(undefined);\n  const [schemaGroupLabels, setSchemaGroupLabels] = useState(undefined);\n  const [schemaGroupOrder, setSchemaGroupOrder] = useState(undefined);\n  const {\n    error,\n    loading\n  } = useDataQuery(schemaQuery, {\n    onComplete: data => {\n      const schemas = data.schemas.schemas;\n      const filteredSchemas = filterOutExcludedSchemas(excludeSchemas, schemas);\n      const formattedSchemas = formatSchemas(filteredSchemas, checkedByDefault);\n      const groups = getSchemaGroups(formattedSchemas);\n      setSchemaGroups(groups);\n      setSchemaGroupOrder(getGroupOrder(groups));\n      setSchemaGroupLabels(getGroupLabels(groups));\n      propagateCheckedSchemas(groups);\n    },\n    onError: error => {\n      console.error('Schemas error: ', error);\n    }\n  });\n\n  const propagateCheckedSchemas = updatedSchemaGroups => {\n    setCheckedSchemas(Object.keys(updatedSchemaGroups).reduce((acc, groupName) => [...acc, ...updatedSchemaGroups[groupName].filter(s => s.checked).map(s => s.name)], []));\n  };\n\n  const onSelectGeneric = val => () => {\n    const updatedSchemaGroups = Object.keys(schemaGroups).reduce((acc, groupName) => ({ ...acc,\n      [groupName]: schemaGroups[groupName].reduce((grAcc, group) => [...grAcc, { ...group,\n        checked: val\n      }], [])\n    }), {});\n    setSchemaGroups(updatedSchemaGroups);\n    propagateCheckedSchemas(updatedSchemaGroups);\n  };\n\n  const toggleSchema = schemaGroup => ind => {\n    const updatedGroup = [...schemaGroups[schemaGroup]];\n    updatedGroup[ind] = { ...updatedGroup[ind],\n      checked: !updatedGroup[ind].checked\n    };\n    const updatedSchemaGroups = { ...schemaGroups,\n      [schemaGroup]: updatedGroup\n    };\n    setSchemaGroups(updatedSchemaGroups);\n    propagateCheckedSchemas(updatedSchemaGroups);\n  };\n\n  const showSchemas = !loading && !error;\n  return <div className={styles.container} data-test={dataTest}>\n            {loading && <CircularLoader dataTest={`${dataTest}-loading`} />}\n            {error && <div data-test={`${dataTest}-error`}>\n                    <p>\n                        {i18n.t('Something went wrong when loading the schemas!')}\n                    </p>\n                    <p>{error.message}</p>\n                </div>}\n            {showSchemas && <>\n                    <ButtonStrip>\n                        <Button onClick={onSelectGeneric(true)} dataTest={`${dataTest}-select-all`}>\n                            {i18n.t('Select All')}\n                        </Button>\n                        <Button onClick={onSelectGeneric(false)} dataTest={`${dataTest}-select-none`}>\n                            {i18n.t('Select None')}\n                        </Button>\n                    </ButtonStrip>\n\n                    <div className={styles.formControl}>\n                        {schemaGroupOrder.map(groupKey => {\n          const label = schemaGroupLabels[groupKey];\n          return <SchemaGroup key={label} label={label} schemas={schemaGroups[groupKey]} toggleSchema={toggleSchema(groupKey)} />;\n        })}\n                    </div>\n                    {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n                </>}\n        </div>;\n};\n\nSchemas.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  excludeSchemas: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n  setCheckedSchemas: PropTypes.func.isRequired,\n  checkedByDefault: PropTypes.bool\n};\nexport { Schemas };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SingleSelectField, SingleSelectOption, Help } from '@dhis2/ui-core';\nimport { optionPropType, optionsPropType } from '../../utils/options';\nimport styles from './Select.module.css';\nimport { FormField } from '../index';\n\nconst Select = ({\n  name,\n  dataTest,\n  label,\n  options,\n  setValue,\n  selected,\n  noMatchText,\n  loading,\n  error,\n  meta,\n  warning,\n  validationText,\n  helpText,\n  filled,\n  dense,\n  filterable,\n  initialFocus\n}) => {\n  const optionEls = options.map(o => <SingleSelectOption key={o.value} value={o.value} label={o.label} />);\n\n  const onChange = ({\n    selected\n  }) => setValue(selected);\n\n  return <FormField label={label} dataTest={dataTest}>\n            <div className={styles.select} data-test={`${dataTest}-container`}>\n                <SingleSelectField dense={dense} filled={filled} initialFocus={initialFocus} loading={loading} warning={warning} error={error} name={name} onChange={onChange} selected={selected} filterable={filterable} noMatchText={noMatchText ? noMatchText : `No match found for filter`} helpText={helpText} validationText={validationText} dataTest={`${dataTest}-ssf`}>\n                    {optionEls}\n                </SingleSelectField>\n                {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n            </div>\n        </FormField>;\n};\n\nSelect.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  options: optionsPropType.isRequired,\n  setValue: PropTypes.func.isRequired,\n  dense: PropTypes.bool,\n  error: PropTypes.bool,\n  filled: PropTypes.bool,\n  filterable: PropTypes.bool,\n  helpText: PropTypes.string,\n  initialFocus: PropTypes.bool,\n  loading: PropTypes.bool,\n  noMatchText: PropTypes.string,\n  selected: optionPropType,\n  validationText: PropTypes.string,\n  warning: PropTypes.bool\n};\nexport { Select };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from '@dhis2/ui-forms';\nimport { Select } from '../index';\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  inputName,\n  ...rest\n}) => <Select name={inputName} meta={meta} selected={value || undefined} setValue={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.any,\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst SelectField = ({\n  name,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} inputName={name} {...rest} />;\n};\n\nSelectField.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport { SelectField };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Checkbox, InputField, MenuItem, Radio } from '@dhis2/ui-core';\nimport { optionsPropType } from '../../utils/options';\nimport styles from './SelectableList.module.css';\n\nconst SelectableList = ({\n  label,\n  name,\n  selected,\n  setSelected,\n  list,\n  multiSelect,\n  withFilter,\n  withActions,\n  dataTest\n}) => {\n  const [filter, setFilter] = useState('');\n\n  const onSelectAll = () => {\n    if (multiSelect) {\n      const all = list.map(({\n        value\n      }) => value);\n      setSelected(all);\n    }\n  };\n\n  const onClearAll = () => {\n    if (multiSelect) {\n      setSelected([]);\n    }\n  };\n\n  const onSelect = ({\n    value: id\n  }) => {\n    if (multiSelect) {\n      const newValue = !selected.includes(id);\n\n      if (newValue == false) {\n        setSelected(selected.filter(p => p != id));\n      } else {\n        setSelected([...selected, id]);\n      }\n    } else {\n      setSelected([id]);\n    }\n  };\n\n  return <div data-test={dataTest}>\n            {withFilter && <div className={styles.filter} data-test={`${dataTest}-filter`}>\n                    <InputField name=\"filter\" label={label} value={filter} onChange={({\n        value\n      }) => setFilter(value)} dense />\n                </div>}\n\n            {withActions && <div className={styles.actions} data-test={`${dataTest}-actions`}>\n                    <Button className={styles.action} onClick={onSelectAll} dataTest={`${dataTest}-actions-select-all`}>\n                        {i18n.t('Select all')}\n                    </Button>\n                    <Button className={styles.action} onClick={onClearAll} dataTest={`${dataTest}-actions-clear-all`}>\n                        {i18n.t('Clear all')}\n                    </Button>\n                </div>}\n\n            <div className={styles.body} data-test={`${dataTest}-body`} name={name}>\n                {list.filter(({\n        label\n      }) => label.toLowerCase().includes(filter.toLowerCase())).map(({\n        value,\n        label\n      }) => {\n        const component = multiSelect ? <Checkbox value={value} name={name} label={label} checked={selected.includes(value)} onChange={() => 0} /> : <Radio value={value} name={name} label={label} checked={selected.includes(value)} onChange={() => 0} />;\n        return <MenuItem dataTest={`${dataTest}-body-li-${value}`} key={`${dataTest}-body-li-${value}`} value={value} label={component} onClick={onSelect} />;\n      })}\n            </div>\n        </div>;\n};\n\nSelectableList.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  list: optionsPropType.isRequired,\n  name: PropTypes.string.isRequired,\n  selected: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelected: PropTypes.func.isRequired,\n  multiSelect: PropTypes.bool,\n  withActions: PropTypes.bool,\n  withFilter: PropTypes.bool\n};\nexport { SelectableList };","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, Menu, MenuItem } from '@dhis2/ui-core';\nimport styles from './Sidebar.module.css';\nimport { StyledLink } from '../index';\nimport { DataIcon, EventIcon, GMLIcon, MetadataDependencyExportIcon, MetadataExportIcon, MetadataImportIcon, TEIIcon, TasksIcon } from '../index';\nconst dataImportPage = {\n  name: i18n.t('Data import'),\n  code: 'data-import',\n  icon: <DataIcon />,\n  path: '/import/data'\n};\nconst eventImportPage = {\n  name: i18n.t('Event import'),\n  code: 'event-import',\n  icon: <EventIcon />,\n  path: '/import/event'\n};\nconst gmlImportPage = {\n  name: i18n.t('GML import'),\n  code: 'gml-import',\n  icon: <GMLIcon />,\n  path: '/import/gml'\n};\nconst metadataImportPage = {\n  name: i18n.t('Metadata import'),\n  code: 'metadata-import',\n  path: '/import/metadata',\n  icon: <MetadataImportIcon />\n};\nconst teiImportPage = {\n  name: i18n.t('TEI import'),\n  code: 'tei-import',\n  path: '/import/tei',\n  icon: <TEIIcon />\n};\nconst dataExportPage = {\n  name: i18n.t('Data export'),\n  code: 'data-export',\n  path: '/export/data',\n  icon: <DataIcon />\n};\nconst eventExportPage = {\n  name: i18n.t('Event export'),\n  code: 'event-export',\n  path: '/export/event',\n  icon: <EventIcon />\n};\nconst metadataDependencyExportPage = {\n  name: i18n.t('Metadata dependency export'),\n  code: 'metadata-dependency-export',\n  path: '/export/metadata-dependency',\n  icon: <MetadataDependencyExportIcon />\n};\nconst metadataExportPage = {\n  name: i18n.t('Metadata export'),\n  code: 'metadata-export',\n  path: '/export/metadata',\n  icon: <MetadataExportIcon />\n};\nconst teiExportPage = {\n  name: i18n.t('TEI export'),\n  code: 'tei-export',\n  path: '/export/tei',\n  icon: <TEIIcon />\n};\nconst importPages = [dataImportPage, eventImportPage, gmlImportPage, metadataImportPage, teiImportPage];\nconst exportPages = [dataExportPage, eventExportPage, metadataDependencyExportPage, metadataExportPage, teiExportPage];\nconst jobOverviewPage = {\n  name: i18n.t('Job overview'),\n  code: 'job-overview',\n  path: '/utils/job-overview',\n  icon: <TasksIcon />\n};\n\nconst SidebarItem = ({\n  name,\n  path,\n  code,\n  icon,\n  active,\n  className\n}) => <StyledLink to={path} dataTest={`sidebar-link-${code}`}>\n        <MenuItem active={active} icon={icon} label={name} className={className} />\n    </StyledLink>;\n\nSidebarItem.propTypes = {\n  active: PropTypes.bool.isRequired,\n  code: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\n\nconst Sidebar = () => {\n  const location = useLocation();\n  const pathname = location.pathname;\n  return <Menu className={styles.Menu}>\n            <h3 className={styles.sectionTitle}>{i18n.t('Import')}</h3>\n            {importPages.map(({\n      icon,\n      name,\n      code,\n      path\n    }) => {\n      const active = pathname == path;\n      return <SidebarItem name={name} path={path} code={code} icon={icon} active={active} key={path} />;\n    })}\n            <Divider />\n            <h3 className={styles.sectionTitle}>{i18n.t('Export')}</h3>\n            {exportPages.map(({\n      icon,\n      name,\n      code,\n      path\n    }) => {\n      const active = pathname == path;\n      return <SidebarItem name={name} path={path} code={code} icon={icon} active={active} key={path} />;\n    })}\n            <Divider />\n            <SidebarItem name={jobOverviewPage.name} path={jobOverviewPage.path} code={jobOverviewPage.code} icon={jobOverviewPage.icon} active={pathname == jobOverviewPage.path} className={pathname == jobOverviewPage.path ? '' : styles.jobOverview} key={jobOverviewPage.path} />\n        </Menu>;\n};\n\nexport { Sidebar };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styles from './StyledLink.module.css';\n\nconst StyledLink = ({\n  dataTest,\n  ...passThroughProps\n}) => <Link data-test={dataTest} className={styles.link} {...passThroughProps} />;\n\nStyledLink.propTypes = {\n  dataTest: PropTypes.string.isRequired\n};\nexport { StyledLink };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field, Switch as SwitchUI } from '@dhis2/ui-forms';\nimport { FormField } from '../index';\n\nconst Wrapper = ({\n  input,\n  meta,\n  ...rest\n}) => <SwitchUI input={input} meta={meta} label={input.value ? i18n.t('Yes') : i18n.t('No')} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired\n};\n\nconst Switch = ({\n  name,\n  label,\n  help,\n  dataTest\n}) => {\n  return <FormField label={label} dataTest={dataTest}>\n            <Field component={Wrapper} name={name} helpText={help} dataTest={`${dataTest}-sf`} />\n        </FormField>;\n};\n\nSwitch.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  help: PropTypes.string\n};\nexport { Switch };","import { useContext } from 'react';\nimport { UserContext } from '../../contexts/index';\n\nconst WithAuthority = ({\n  pred,\n  children\n}) => {\n  const user = useContext(UserContext);\n  if (!user) return null;\n  return pred(user.authorities) ? children : null;\n};\n\nexport { WithAuthority };","const dataSetQuery = {\n  dataSets: {\n    resource: 'dataSets',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nconst programQuery = {\n  programs: {\n    resource: 'programs',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nconst TETypeQuery = {\n  trackedEntityTypes: {\n    resource: 'trackedEntityTypes',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nconst userQuery = {\n  users: {\n    resource: 'users',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nexport { dataSetQuery, programQuery, TETypeQuery, userQuery };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { CircularLoader, Help } from '@dhis2/ui-core';\nimport { dataSetQuery, programQuery, TETypeQuery, userQuery } from './queries';\nimport { resourceTypes } from './resourceTypes';\nimport { FormField, SelectableList } from '../index';\n\nconst resourceToQuery = resourceType => {\n  if (resourceType == resourceTypes.DATASET) {\n    return {\n      resourceName: 'dataSets',\n      query: dataSetQuery\n    };\n  } else if (resourceType == resourceTypes.PROGRAM) {\n    return {\n      resourceName: 'programs',\n      query: programQuery\n    };\n  } else if (resourceType == resourceTypes.TETYPE) {\n    return {\n      resourceName: 'trackedEntityTypes',\n      query: TETypeQuery\n    };\n  } else if (resourceType == resourceTypes.USER) {\n    return {\n      resourceName: 'users',\n      query: userQuery\n    };\n  }\n\n  return {\n    error: `Unkown resource type: ${resourceType}`\n  };\n};\n\nconst ResourcePicker = ({\n  label,\n  resourceType,\n  selected,\n  setSelected,\n  meta,\n  multiSelect,\n  withFilter,\n  withActions,\n  autoSelectFirst,\n  dataTest,\n  listName,\n  filterLabel,\n  errorMessage\n}) => {\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(undefined);\n  const {\n    error: resourceError,\n    resourceName,\n    query\n  } = resourceToQuery(resourceType);\n\n  if (resourceError) {\n    console.error(`ResourcePicker: ${resourceError}`);\n    return null;\n  }\n\n  const {\n    loading\n  } = useDataQuery(query, {\n    onComplete: data => {\n      const elements = data[resourceName][resourceName];\n      const list = elements.map(({\n        id,\n        displayName\n      }) => ({\n        value: id,\n        label: displayName\n      }));\n      setList(list);\n\n      if (autoSelectFirst) {\n        setSelected([list[0].value]);\n      }\n    },\n    onError: error => {\n      setError(error);\n      console.error(`ResourcePicker(${resourceName}) error: `, error);\n    }\n  });\n  const showList = !loading && !error;\n  return <FormField label={label} dataTest={dataTest}>\n            {loading && <CircularLoader dataTest={`${dataTest}-loading`} />}\n            {error && <div data-test={`${dataTest}-error`}>\n                    <p>{errorMessage}</p>\n                    <p>{error.message}</p>\n                </div>}\n            {showList && <SelectableList name={listName} label={filterLabel} selected={selected} setSelected={setSelected} multiSelect={multiSelect} list={list} withFilter={withFilter} withActions={withActions} dataTest={`${dataTest}-list`} />}\n            {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n        </FormField>;\n};\n\nResourcePicker.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string.isRequired,\n  filterLabel: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  listName: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  resourceType: PropTypes.number.isRequired,\n  selected: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelected: PropTypes.func.isRequired,\n  autoSelectFirst: PropTypes.bool,\n  multiSelect: PropTypes.bool,\n  withActions: PropTypes.bool,\n  withFilter: PropTypes.bool\n};\nResourcePicker.defaultProps = {\n  multiSelect: true,\n  withFilter: true,\n  withActions: true\n};\nexport { ResourcePicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from '@dhis2/ui-forms';\nimport { ResourcePicker } from '../index';\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  ...rest\n}) => <ResourcePicker meta={meta} selected={value} setSelected={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst ResourcePickerField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nResourcePickerField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { ResourcePickerField };","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssReset, CircularLoader, ScreenCover } from '@dhis2/ui-core';\nimport { TaskContext } from './contexts/';\nimport { UserContext } from './contexts/';\nimport { useUser, useTasks } from './hooks/';\nimport styles from './App.module.css';\nimport { Sidebar } from './components/';\nimport { Router } from './components/';\n\nconst App = () => {\n  const {\n    tasks,\n    addTask,\n    jobOverview,\n    updateJobOverview\n  } = useTasks();\n  const {\n    loading,\n    error,\n    user\n  } = useUser();\n  const showApp = !loading && !error;\n  return <>\n            <CssReset />\n            {loading && <ScreenCover dataTest=\"app-screen-cover\">\n                    <CircularLoader dataTest=\"app-loader\" />\n                </ScreenCover>}\n            {error && <div data-test=\"app-error\">\n                    <p>\n                        {i18n.t('Something went wrong when loading the current user!')}\n                    </p>\n                    <p>{error.message}</p>\n                </div>}\n            {showApp && <HashRouter>\n                    <UserContext.Provider value={user}>\n                        <TaskContext.Provider value={{\n          tasks,\n          addTask,\n          jobOverview,\n          updateJobOverview\n        }}>\n                            <div className={styles.container}>\n                                <div className={styles.sidebar}>\n                                    <Sidebar />\n                                </div>\n                                <div className={styles.content}>\n                                    <Router />\n                                </div>\n                            </div>\n                        </TaskContext.Provider>\n                    </UserContext.Provider>\n                </HashRouter>}\n        </>;\n};\n\nexport default App;"],"sourceRoot":""}