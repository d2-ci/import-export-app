{"version":3,"sources":["components/Form/Select/styles.module.css","components/Loading/styles.module.css","components/Form/Radio/styles.module.css","components/TaskSummary/styles.module.css","components/Form/Date/styles.module.css","pages/Template/styles.module.css","components/Form/MoreOptions/styles.module.css","components/FormBase/styles.module.css","components/Form/styles.module.css","components/Logger/styles.module.css","pages/home/styles.module.css","components/Form/DataSetPicker/styles.module.css","components/Tree/styles.module.css","components/SidePanel/styles.module.css","locales/index.js","services/API.js","services/index.js","components/Loading/Progress.js","components/Loading/index.js","components/Error/index.js","components/Icon.js","helpers/download.js","components/Form/material-ui/FormControl/index.js","components/Form/material-ui/FormLabel/index.js","components/Form/material-ui/FormGroup/index.js","components/TaskSummary/PaginatedTable.js","components/TaskSummary/helpers.js","components/TaskSummary/index.js","components/Form/File/index.js","components/Form/Date/index.js","components/Form/Radio/index.js","components/Form/Select/index.js","reducers/user/actions.js","reducers/user/index.js","reducers/schemas/actions.js","reducers/schemas/index.js","reducers/index.js","reducers/schemas/selectors.js","components/Form/Schemas/index.js","components/Tree/index.js","components/Form/OrgUnitTree/index.js","components/Form/MoreOptions/index.js","components/Form/DataSetPicker/index.js","components/Form/constants.js","components/Form/index.js","helpers/fields.js","helpers/form.js","helpers/mime.js","helpers/values.js","helpers/date.js","pages/import/helpers.js","helpers/xhr.js","components/FormBase/index.js","pages/import/MetaData.js","pages/import/Data.js","pages/import/GML.js","pages/import/Event.js","pages/export/MetaData.js","pages/export/MetaDataDependency.js","pages/export/Data.js","pages/export/Event.js","pages/home/list.js","pages/home/index.js","components/SidePanel/links.js","components/SidePanel/index.js","components/Logger/index.js","pages/Template/index.js","App.js","store.js","serviceWorker.js","index.js","components/Form/Schemas/styles.module.css","components/Error/styles.module.css","components/Form/File/styles.module.css"],"names":["module","exports","formControl","formLabel","select","menuItem","container","radioGroup","head","title","content","label","table","totals","typeCount","paginatedTable","pagination","nav","action","pages","page","current","dateField","form","wrapper","icon","desc","fields","buttons","upper","actions","messages","message","date","type","contents","text","logo","heading","purpose","list","item","description","header","filter","body","actionLabel","selected","children","link","active","namespace","moment","locale","i18n","addResources","enTranslations","ruTranslations","svTranslations","urTranslations","setDefaultNamespace","changeLanguage","config","baseURL","concat","process","withCredentials","maxRedirects","headers","X-Requested-With","API","path","url","axios","get","data","post","api","eventEmitter","EventEmitter2","Progress","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","progress","onProgress","stats","setState","percentComplete","inherits","createClass","key","value","on","off","react_default","a","createElement","className","s","LinearProgress_default","amount","margin","Component","Loading","_ref","size","thickness","index_es","Error","onClear","t","primary","onClick","Icon","width","height","style","display","fill","color","userSelect","transition","viewBox","MetadataImportIcon","props","d","MetadataExportIcon","MetadataDependencyExportIcon","DataIcon","EventIcon","GMLIcon","ArrowUpIcon","ArrowDownIcon","LogoIcon","blobType","format","compression","createBlob","undefined","URL","createObjectURL","Blob","downloadBlob","filename","document","href","setAttribute","appendChild","click","remove","getDownloadUrl","endpoint","sharing","params","compressionStr","join","FormControl","FormLabel","FormGroup","TOTAL_PAGES_IN_NAV","Pagination","_total","total","start","limit","Math","ceil","_getPaginationRange","first","last","getPaginationRange","_getPaginationRange2","slicedToArray","getPaginationStats","_loop","i","push","getPages","PaginatedTable","_this$props","rows","slice","k","map","row","_ref2","j","_ref3","_ref4","colSpan","colgroup","thead","tbody","tfoot","React","Totals","created","deleted","ignored","updated","TypeStats","Summaries","PaginatedTable_PaginatedTable","titles","Messages","_ref5","Conflicts","_ref6","initialState","loading","typeStats","conflicts","summaries","getClassName","c","substr","lastIndexOf","TaskSummary","_React$Component","objectSpread","onLoaded","onLoading","onTotals","onTypeReports","report","newStats","newMessages","keys","forEach","_report$i","klass","objectReports","r","uid","errorReports","e","mainKlass","property","errorProperty","onImportCount","imported","onConflicts","onImportSummaries","events","summary.loading","summary.loaded","summary.clear","summary.totals","summary.typeReports","summary.importCount","summary.conflicts","summary.importSummaries","entries","evt","fn","react","marginTop","_this$state","isEmpty","viewTypeStats","viewConflicts","viewMessages","viewImportSummaries","FileUploadIcon","FileField","fileRef","onChange","name","files","_this2","required","formMeta","helpText","submitted","isValueNil","Fragment","ref","hiddenFileInput","button","styles","textFieldStyle","fontSize","fontWeight","DateField","_","minDate","localeData","longDateFormat","DatePicker_default","assign","autoOk","iconStyle","marginRight","RadioField","values","valueSelected","v","labelStyle","menuItemStyle","underlineStyle","borderBottom","selectedMenuItemStyle","top","SelectField","index","autoWidth","fullWidth","primaryText","USER_SET","USER_CLEAR","SCHEMAS_SET","loaded","error","loadedState","combineReducers","user","payload","schemas","getSchemas","getSortedSchemaGroups","createSelector","groups","group","groupsWith1Item","otherGroup","schemaGroups","groupName","split","pop","includes","breakOnCamelCase","schemaName","temp","replace","toUpperCase","groupLabel","nameLC","toLowerCase","_groupLabelLowerCase","n","groupLabelLowerCase","_groupLabelLowerCase2","isLower","displayName","_groupLabelCamelCase","indexOf","groupLabelCamelCase","_groupLabelCamelCase2","isCamelCase","ccName","Group","checked","schema","collectionName","onCheck","status","Controls","onSelectAll","onSelectNone","controls","DumbSchemas","isChecked","setChecked","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","stop","defineProperty","reduce","accum","colName","metadata","EXCLUDE_SCHEMAS","has","sort","b","localeCompare","_fetch","_callee2","_context2","sent","setSchemas","t0","console","log","_this3","viewSchemas","connect","NodeIcon","hasChildren","open","NodeSpacer","minWidth","depth","NodeLabel","Node","isSelected","onIconClick","isArray","cx","Tree","stopPropagation","updateState","toConsumableArray","multiple","selectable","setSelected","found","node","view","OrgUnitTree","fetchNode","updateSelected","fetchRoot","getInstance","models","organisationUnits","level","paging","then","root","toArray","id","items","encodeURIComponent","setChildren","newProps","Tree_Tree","PlusIcon","MinusIcon","MoreOptions","enabled","CTX_DEFAULT","CTX_MORE_OPTIONS","padding","minHeight","lineHeight","innerDivStyle","Action","DataSetPicker","onUpdateFilter","onClearAll","hintText","DataSetPicker_Action","check_box_default","check_box_outline_blank_default","insetChildren","leftIcon","TYPE_FILE","TYPE_DATE","TYPE_RADIO","TYPE_SELECT","TYPE_SCHEMAS","TYPE_ORG_UNIT","TYPE_ORG_UNIT_SINGLE_SELECT","TYPE_MORE_OPTIONS","TYPE_DATASET_PICKER","CTX_CSV_OPTION","Form","fieldValues","context","_meta","field","Radio_RadioField","Select_SelectField","File_FileField","Date_DateField","changeContext","Schemas","OrgUnitTree_OrgUnitTree","DataSetPicker_DataSetPicker","onSubmit","submitLabel","TaskSummary_TaskSummary","getField","async","atomicMode","categoryOptionComboIdScheme","classKey","dataElementIdScheme","dryRun","endDate","eventIdScheme","firstRowIsHeader","flushMode","idScheme","identifier","importMode","importReportMode","importStrategy","includeDeleted","inclusion","inclusionStrategy","mergeMode","objectList","objectType","orgUnit","orgUnitIdScheme","orgUnit_SingleSelect","preheatCache","preheatMode","programStages","programs","selectedDataSets","skipExistingCheck","skipSharing","skipValidation","startDate","strategy","upload","getFormField","options","getFormFields","getFormFieldMoreOptions","getFieldValue","getParamsFromFormState","append","mapping","json","xml","csv","gml","adx","pdf","getMimeType","getValue","getValues","val","supportedFormats","getBoolean","labelTrue","labelFalse","getScheme","calculated","extensions","ext","Date","setMonth","getMonth","endDateDefault","getFormValues","o","valid","processing","_k$split","_k$split2","Set","CATEGORY_2_LABEL","METADATA_IMPORT","DATAVALUE_IMPORT","GML_IMPORT","EVENT_IMPORT","lastIds","emitLog","_data$i","category","time","emit","emitLogOnFirstResponse","xhr","importType","JSON","parse","responseText","typeReports","response","getTime","setTimeout","getFetchLogPath","jobId","fetchResponseIsArray","fetchResponseIsObject","isFetchLogComplete","completed","fetchLogAfter","fetchLog","_x","_x2","_fetchLog","records","fetchTaskSummary","_x3","_x4","_fetchTaskSummary","logStats","importCount","logImportCount","logConflicts","importSummaries","_conflicts$i","object","getUploadXHR","onResponse","onError","XMLHttpRequest","contentType","setRequestHeader","onreadystatechange","_handleChange","floor","readyState","abrupt","onReadyStateChange","onprogress","lengthComputable","parseInt","FormBase","validateOnChange","validate","f","FormData","set","getFieldState","setMetaState","onFormUpdate","setProcessing","clearProcessing","onClearError","assertOnError","target","err","requiredFields","getRequiredFields","findIndex","hasRequiredFieldsWithoutValue","onBeforeSubmit","metaState","cb","Progress_Progress","Form_Form","formWidth","formTitle","formDescription","MetaDataImport","_FormBase","Icon_MetadataImportIcon","formData","_this$getFormState","getFormState","stringify","send","_callee3","_context3","order","menuIcon","DataImport","Icon_DataIcon","formattedFormat","GMLImport","Icon_GMLIcon","EventImport","Icon_EventIcon","MetaDataExport","Icon_MetadataExportIcon","downloadUrl","schemaParams","window","location","MetaDataDependencyExport","Icon_MetadataDependencyExportIcon","DataExport","zip","JSZip","file","generateAsync","_callee4","d2","dataSets","_context4","dataSet","collection","sets","contextTypes","PropTypes","EventExport","fetchProgramStages","attachment","orgUnitId","fetchPrograms","fetchOrgUnits","_fetchPrograms","_fetchOrgUnits","orgUnitTree","_fetchProgramStages","unshift","p","Item","DumbHome","history","Icon_LogoIcon","home_Item","Home","withRouter","menu","to","importLinks","exportLinks","Heading","Contents","react_router_dom","activeClassName","SidePanel","Icon_ArrowDownIcon","Icon_ArrowUpIcon","iconProps","ArrowIcon","Message","Logger","onMessage","msg","m","scrollToBottom","onOpen","clearSelection","elmMessages","appContent","onClose","selection","empty","getSelection","removeAllRanges","onDragStart","onDragEnd","onDrag","screenY","innerHeight","onDoubleClick","getElementById","scrollTop","scrollHeight","Logger_ArrowDownIcon","Logger_ArrowUpIcon","headerTitle","headerActions","prevDateHH","prevDate","truncate","prevType","getDate","Template","HeaderBar_default","appName","Logger_Logger","strings","add","App","lang","currentUser","userSettings","settings","keyUiLocale","documentElement","code","langs","prefixed","startsWith","isLangRTL","setUser","clearUser","Template_Template","react_router","exact","component","childContextTypes","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","Boolean","hostname","match","init","baseUrl","lightBaseTheme","palette","primary1Color","primary2Color","primary3Color","pickerHeaderColor","muiTheme","getMuiTheme","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edf5be70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"styles_formControl__1VOaw\",\"formLabel\":\"styles_formLabel__3FQrH\",\"select\":\"styles_select__2gSF3\",\"menuItem\":\"styles_menuItem__3z4m5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2EN7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"styles_formControl__1v_MR\",\"formLabel\":\"styles_formLabel__2arXT\",\"radioGroup\":\"styles_radioGroup__3sH5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1gT1J\",\"head\":\"styles_head__3fCHk\",\"title\":\"styles_title__3Tu-E\",\"content\":\"styles_content__2bD9o\",\"label\":\"styles_label__1xZ53\",\"table\":\"styles_table__JhG2X\",\"totals\":\"styles_totals__2Uavp\",\"typeCount\":\"styles_typeCount__P91F-\",\"paginatedTable\":\"styles_paginatedTable__24o2k\",\"pagination\":\"styles_pagination__2wZjU\",\"nav\":\"styles_nav__3D44W\",\"action\":\"styles_action__1rrmy\",\"pages\":\"styles_pages__2MjAW\",\"page\":\"styles_page__1xcRu\",\"current\":\"styles_current__kbGPy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"styles_formControl__3o5W9\",\"formLabel\":\"styles_formLabel__3BHqx\",\"dateField\":\"styles_dateField__2mVvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3ERN-\",\"content\":\"styles_content__1MWUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3XEsw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1qM29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__2e30N\",\"form\":\"styles_form__14Kui\",\"head\":\"styles_head__3qhiG\",\"icon\":\"styles_icon__3Yd6M\",\"title\":\"styles_title__tRV0S\",\"desc\":\"styles_desc__wC9cm\",\"fields\":\"styles_fields__ppN-H\",\"buttons\":\"styles_buttons__45bdj\",\"formControl\":\"styles_formControl__nckL5\",\"formLabel\":\"styles_formLabel__39ofy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__15wHt\",\"nav\":\"styles_nav__1hEkg\",\"title\":\"styles_title__1wWYk\",\"upper\":\"styles_upper__1u2xt\",\"actions\":\"styles_actions__1b_uT\",\"messages\":\"styles_messages__KZFs3\",\"message\":\"styles_message__3gbHR\",\"date\":\"styles_date__XIDWP\",\"type\":\"styles_type__2uwE_\",\"contents\":\"styles_contents__3e7XF\",\"text\":\"styles_text__3dqqD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3GhJc\",\"logo\":\"styles_logo__3irtk\",\"heading\":\"styles_heading__o9IHd\",\"purpose\":\"styles_purpose__UJioA\",\"list\":\"styles_list__vXqCn\",\"item\":\"styles_item__2Q7Za\",\"head\":\"styles_head___8AqZ\",\"icon\":\"styles_icon__2BOnE\",\"title\":\"styles_title__3b4OM\",\"description\":\"styles_description__oTyGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3EPgR\",\"header\":\"styles_header__gnz6H\",\"formLabel\":\"styles_formLabel__7r19G\",\"filter\":\"styles_filter__1TpJU\",\"body\":\"styles_body__TBHlE\",\"actions\":\"styles_actions__2N1oX\",\"action\":\"styles_action__3fpE6\",\"actionLabel\":\"styles_actionLabel__1P0Sk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2Q1W_\",\"label\":\"styles_label__w1FSJ\",\"icon\":\"styles_icon__fbWxY\",\"text\":\"styles_text__2brv4\",\"selected\":\"styles_selected__1HgMd\",\"children\":\"styles_children__vxSuS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2zfe6\",\"heading\":\"styles_heading__MWxRn\",\"list\":\"styles_list__2LNm8\",\"item\":\"styles_item__3XBO6\",\"text\":\"styles_text__pVWFi\",\"link\":\"styles_link__DgEmd\",\"active\":\"styles_active__2QH2V\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\n\nimport enTranslations from './en/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\n\nconst namespace = 'import-export-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","import axios from 'axios'\n\nconst { REACT_APP_DHIS2_BASE_URL } = process.env\nconst config = {\n    baseURL: `${REACT_APP_DHIS2_BASE_URL}/api/`,\n    withCredentials: true,\n    maxRedirects: 0,\n    headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n    },\n}\n\nexport default class API {\n    url(path) {\n        return `${config.baseURL}${path}`\n    }\n\n    get(url) {\n        return axios.get(url, config)\n    }\n\n    post(url, data) {\n        return axios.post(url, data, config)\n    }\n}\n","import API from './API'\nimport { EventEmitter2 } from 'eventemitter2'\n\nexport const api = new API()\nexport const eventEmitter = new EventEmitter2()\n","import React, { Component } from 'react'\nimport LinearProgress from '@dhis2/ui/core/LinearProgress'\nimport { eventEmitter } from '../../services'\nimport s from './styles.module.css'\n\nexport class Progress extends Component {\n    state = {\n        progress: 0,\n    }\n\n    componentDidMount() {\n        eventEmitter.on('upload.progress', this.onProgress)\n    }\n\n    componentWillUnmount() {\n        eventEmitter.off('upload.progress', this.onProgress)\n    }\n\n    onProgress = stats =>\n        this.setState({\n            progress: stats.percentComplete,\n        })\n\n    render() {\n        return (\n            <div className={s.container}>\n                <LinearProgress amount={this.state.progress} margin={'100px'} />\n            </div>\n        )\n    }\n}\n\nexport default Progress\n","import React from 'react'\nimport { CircularProgress } from 'material-ui'\nimport s from './styles.module.css'\n\nexport function Loading({ size, thickness }) {\n    return (\n        <div className={s.container}>\n            <CircularProgress size={size || 80} thickness={thickness || 3} />\n        </div>\n    )\n}\n\nexport { Progress } from './Progress'\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { RaisedButton } from 'material-ui'\nimport s from './styles.module.css'\n\nexport function Error({ message, onClear }) {\n    return (\n        <div className={s.container}>\n            <div className={s.head}>\n                <div className={s.title}>{i18n.t('Import Error')}</div>\n            </div>\n            <div className={s.contents}>{message}</div>\n            <div className={s.buttons}>\n                <RaisedButton\n                    primary={true}\n                    label={i18n.t('Go Back')}\n                    onClick={onClear}\n                />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Icon({ width, height, children }) {\n    const style = {\n        width: width || 24,\n        height: height || 24,\n        display: 'inline-block',\n        fill: '#000',\n        color: 'rgba(0, 0, 0, 0.87)',\n        userSelect: 'none',\n        transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\n    }\n\n    return (\n        <svg viewBox=\"0 0 24 24\" style={style}>\n            {children}\n        </svg>\n    )\n}\n\nexport const MetadataImportIcon = props => (\n    <Icon {...props}>\n        <path d=\"M14.039 8.968l-3.961-3.968h1.968s.991-3.178-2.985-5c6.191.222 6.972 5 6.972 5h1.967l-3.961 3.968zm6.461 5.575l-.342.195v1.717l.342-.195v-1.717zm-.844.481l-.35.199v1.717l.35-.199v-1.717zm.906-10.024l-1.306 1.55 1.62.919-6.859 3.698-8.86-5.138 4.436-2.685c-.234-.5-.626-.989-1.313-1.338l-5.124 2.978-3.156 5.487 2 1.106v5.445l12.25 6.978 9.75-5.551v-11.508l-3.438-1.941zm-16.624 2.688l7.897 4.54-1.192 2.091-7.872-4.605 1.167-2.026zm9.062 13.298l-9-5.126v-3.112l7.377 4.319 1.623-2.845v6.764zm9-3.7l-7 3.985v-8.361l7-3.773v8.149zm-4.907-.802l-.349.199v1.713l.349-.195v-1.717zm.584-.333l-.343.195v1.717l.343-.195v-1.717zm1.395-.794l-.343.195v1.717l.343-.195v-1.717zm-.574.327l-.344.196v1.717l.344-.196v-1.717z\" />\n    </Icon>\n)\n\nexport const MetadataExportIcon = props => (\n    <Icon {...props}>\n        <path d=\"M13.904 9c-3.514-3.984-.1-7.598-.1-7.598l-1.393-1.389 5.589-.013v5.607l-1.372-1.391c0 .001-3.581.706-2.724 4.784zm5.752 6.024l-.35.199v1.717l.35-.199v-1.717zm.844-.481l-.342.195v1.717l.342-.195v-1.717zm-3.407 1.941l-.349.199v1.713l.349-.195v-1.717zm1.979-1.127l-.343.195v1.717l.343-.195v-1.717zm.949-10.673v2.295l.855.489-6.859 3.698-8.86-5.138 6.374-3.654-1.5-1.406-6.864 3.97-3.167 5.533 2 1.106v5.445l12.25 6.978 9.75-5.551v-11.508l-3.979-2.257zm-16.083 3.004l7.897 4.54-1.193 2.091-7.871-4.605 1.167-2.026zm9.062 13.298l-9-5.126v-3.112l5.632 3.297 1.746 1.022 1.002-1.757.62-1.088v6.764zm9-3.7l-7 3.985v-8.361l7-3.773v8.149zm-4.323-1.135l-.343.195v1.717l.343-.195v-1.717zm.821-.467l-.344.196v1.717l.344-.196v-1.717z\" />\n    </Icon>\n)\n\nexport const MetadataDependencyExportIcon = props => (\n    <Icon {...props}>\n        <path d=\"M16.949 16.132h2.332c-1.092 1.728-3.605 3.638-6.281 3.852v-8.984h3v-2h-3v-1.103c0-2.39 2-2.619 2-4.897 0-1.654-1.346-3-3-3s-3 1.346-3 3c0 2.297 2 2.487 2 4.897v1.103h-3v2h3v9c-2.639-.18-5.133-2.053-6.281-3.868h2.332l-5.051-3.132v5.912l1.269-1.8c2.702 4.503 6.379 4.305 8.731 6.888 2.352-2.583 6.029-2.385 8.731-6.889l1.269 1.8v-5.911l-5.051 3.132zm-5.949-13.132c0-.551.449-1 1-1s1 .449 1 1-.448 1-1 1-1-.449-1-1z\" />\n    </Icon>\n)\n\nexport const DataIcon = props => (\n    <Icon {...props}>\n        <path d=\"M6.083 4c1.38 1.612 2.578 3 4.917 3h11v13h-20v-16h4.083zm.917-2h-7v20h24v-17h-13c-1.629 0-2.305-1.058-4-3z\" />\n    </Icon>\n)\n\nexport const EventIcon = props => (\n    <Icon {...props}>\n        <path d=\"M20 20h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm6 0h-4v4h4v-4zm-6-6h-4v4h4v-4zm16-8v22h-24v-22h3v1c0 1.103.897 2 2 2s2-.897 2-2v-1h10v1c0 1.103.897 2 2 2s2-.897 2-2v-1h3zm-2 6h-20v14h20v-14zm-2-7c0-.552-.447-1-1-1s-1 .448-1 1v2c0 .552.447 1 1 1s1-.448 1-1v-2zm-14 2c0 .552-.447 1-1 1s-1-.448-1-1v-2c0-.552.447-1 1-1s1 .448 1 1v2z\" />\n    </Icon>\n)\n\nexport const GMLIcon = props => (\n    <Icon {...props}>\n        <path d=\"M13.144 8.171c-.035-.066.342-.102.409-.102.074.009-.196.452-.409.102zm-2.152-3.072l.108-.031c.064.055-.072.095-.051.136.086.155.021.248.008.332-.014.085-.104.048-.149.093-.053.066.258.075.262.085.011.033-.375.089-.304.171.096.136.824-.195.708-.176.225-.113.029-.125-.097-.19-.043-.215-.079-.547-.213-.68l.088-.102c-.206-.299-.36.362-.36.362zm13.008 6.901c0 6.627-5.373 12-12 12-6.628 0-12-5.373-12-12s5.372-12 12-12c6.627 0 12 5.373 12 12zm-8.31-5.371c-.006-.146-.19-.284-.382-.031-.135.174-.111.439-.184.557-.104.175.567.339.567.174.025-.277.732-.063.87-.025.248.069.643-.226.211-.381-.355-.13-.542-.269-.574-.523 0 0 .188-.176.106-.166-.218.027-.614.786-.614.395zm6.296 5.371c0-1.035-.177-2.08-.357-2.632-.058-.174-.189-.312-.359-.378-.256-.1-1.337.597-1.5.254-.107-.229-.324.146-.572.008-.12-.066-.454-.515-.605-.46-.309.111.474.964.688 1.076.201-.152.852-.465.992-.038.268.804-.737 1.685-1.251 2.149-.768.694-.624-.449-1.147-.852-.275-.211-.272-.66-.55-.815-.124-.07-.693-.725-.688-.813l-.017.166c-.094.071-.294-.268-.315-.321 0 .295.48.765.639 1.001.271.405.416.995.748 1.326.178.178.858.914 1.035.898.193-.017.803-.458.911-.433.644.152-1.516 3.205-1.721 3.583-.169.317.138 1.101.113 1.476-.029.433-.37.573-.693.809-.346.253-.265.745-.556.925-.517.318-.889 1.353-1.623 1.348-.216-.001-1.14.36-1.261.007-.094-.256-.22-.45-.353-.703-.13-.248-.015-.505-.173-.724-.109-.152-.475-.497-.508-.677-.002-.155.117-.626.28-.708.229-.117.044-.458.016-.656-.048-.354-.267-.646-.53-.851-.389-.299-.188-.537-.097-.964 0-.204-.124-.472-.398-.392-.564.164-.393-.44-.804-.413-.296.021-.538.209-.813.292-.346.104-.7-.082-1.042-.125-1.407-.178-1.866-1.786-1.499-2.946.037-.19-.114-.542-.048-.689.158-.352.48-.747.762-1.014.158-.15.361-.112.547-.229.287-.181.291-.553.572-.781.4-.325.946-.318 1.468-.388.278-.037 1.336-.266 1.503-.06 0 .038.191.604-.019.572.433.023 1.05.749 1.461.579.211-.088.134-.736.567-.423.262.188 1.436.272 1.68.069.15-.124.234-.93.052-1.021.116.115-.611.124-.679.098-.12-.044-.232.114-.425.025.116.055-.646-.354-.218-.667-.179.131-.346-.037-.539.107-.133.108.062.18-.128.274-.302.153-.53-.525-.644-.602-.116-.076-1.014-.706-.77-.295l.789.785c-.039.025-.207-.286-.207-.059.053-.135.02.579-.104.347-.055-.089.09-.139.006-.268 0-.085-.228-.168-.272-.226-.125-.155-.457-.497-.637-.579-.05-.023-.764.087-.824.11-.07.098-.13.201-.179.311-.148.055-.287.126-.419.214l-.157.353c-.068.061-.765.291-.769.3.029-.075-.487-.171-.453-.321.038-.165.213-.68.168-.868-.048-.197 1.074.284 1.146-.235.029-.225.046-.487-.313-.525.068.008.695-.246.799-.36.146-.168.481-.442.724-.442.284 0 .223-.413.354-.615.131.053-.07.376.087.507-.01-.103.445.057.489.033.104-.054.684-.022.594-.294-.1-.277.051-.195.181-.253-.022.009.34-.619.402-.413-.043-.212-.421.074-.553.063-.305-.024-.176-.52-.061-.665.089-.115-.243-.256-.247-.036-.006.329-.312.627-.241 1.064.108.659-.735-.159-.809-.114-.28.17-.509-.214-.364-.444.148-.235.505-.224.652-.476.104-.178.225-.385.385-.52.535-.449.683-.09 1.216-.041.521.048.176.124.104.324-.069.19.286.258.409.099.07-.092.229-.323.298-.494.089-.222.901-.197.334-.536-.374-.223-2.004-.672-3.096-.672-.236 0-.401.263-.581.412-.356.295-1.268.874-1.775.698-.519-.179-1.63.66-1.808.666-.065.004.004-.634.358-.681-.153.023 1.247-.707 1.209-.859-.046-.18-2.799.822-2.676 1.023.059.092.299.092-.016.294-.18.109-.372.801-.541.801-.505.221-.537-.435-1.099.409l-.894.36c-1.328 1.411-2.247 3.198-2.58 5.183-.013.079.334.226.379.28.112.134.112.712.167.901.138.478.479.744.74 1.179.154.259.41.914.329 1.186.108-.178 1.07.815 1.246 1.022.414.487.733 1.077.061 1.559-.217.156.33 1.129.048 1.368l-.361.093c-.356.219-.195.756.021.982 1.818 1.901 4.38 3.087 7.22 3.087 5.517 0 9.989-4.472 9.989-9.989zm-11.507-6.357c.125-.055.293-.053.311-.22.015-.148.044-.046.08-.1.035-.053-.067-.138-.11-.146-.064-.014-.108.069-.149.104l-.072.019-.068.087.008.048-.087.106c-.085.084.002.139.087.102z\" />\n    </Icon>\n)\n\nexport const ArrowUpIcon = () => (\n    <Icon width={20} height={20}>\n        <path d=\"M12 0l8 9h-6v15h-4v-15h-6z\" />\n    </Icon>\n)\n\nexport const ArrowDownIcon = () => (\n    <Icon width={20} height={20}>\n        <path d=\"M12 24l-8-9h6v-15h4v15h6z\" />\n    </Icon>\n)\n\nexport const LogoIcon = props => (\n    <Icon {...props}>\n        <path d=\"M9 3L5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </Icon>\n)\n","import { api } from '../services'\n\nexport function blobType(format, compression) {\n    if (compression === 'gzip') {\n        return `application/${format}+gzip`\n    } else if (compression === 'zip') {\n        return `application/${format}+zip`\n    }\n\n    if (format === 'xml') {\n        return 'application/xml'\n    } else if (format === 'json') {\n        return 'application/json'\n    }\n}\n\nexport function createBlob(contents, format, compression = 'none') {\n    return URL.createObjectURL(\n        new Blob([contents], { type: blobType(format, compression) })\n    )\n}\n\nexport function downloadBlob(url, filename) {\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('download', filename)\n    document.body.appendChild(link)\n    link.click()\n    link.remove()\n}\n\nexport function getDownloadUrl({ format, compression, endpoint, sharing }) {\n    const params = [`skipSharing=${sharing !== 'true'}`, 'download=true']\n    const compressionStr =\n        compression === 'none' || !compression ? '' : compression\n\n    const url = `${endpoint}${format}${compressionStr}?${params.join('&')}`\n    return api.url(url)\n}\n","import React from 'react'\n\nexport function FormControl({ className, style, onClick, children }) {\n    return (\n        <div style={style} className={className} onClick={onClick}>\n            {children}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport function FormLabel({ className, children }) {\n    return <div className={className}>{children}</div>\n}\n","import React from 'react'\n\nexport function FormGroup({ className, children }) {\n    return <div className={className}>{children}</div>\n}\n","import React from 'react'\nimport s from './styles.module.css'\n\nconst TOTAL_PAGES_IN_NAV = 10\n\nfunction getPaginationRange(current, total) {\n    let first = current - TOTAL_PAGES_IN_NAV / 2\n    if (first <= 0) {\n        first = 1\n    }\n\n    let last = first + TOTAL_PAGES_IN_NAV - 1\n    if (last > total) {\n        last = total\n        first = last - TOTAL_PAGES_IN_NAV\n\n        if (first < 0) {\n            first = 1\n        }\n    }\n\n    return [first, last]\n}\n\n// eslint-disable-next-line max-params\nfunction getPages(current, first, last, limit, onClick) {\n    const pages = []\n    for (let i = first; i <= last; i += 1) {\n        const className = i === current ? `${s.page} ${s.current}` : s.page\n        pages.push(\n            <div\n                key={`pi-${i}`}\n                className={className}\n                onClick={() => onClick((i - 1) * limit)}\n            >\n                {i}\n            </div>\n        )\n    }\n    return <div className={s.pages}>{pages}</div>\n}\n\n// eslint-disable-next-line max-params\nfunction getPaginationStats(current, start, limit, total, onClick) {\n    return (\n        <div className={s.nav}>\n            <div className={s.action} onClick={() => onClick(start - limit)}>\n                &#60;\n            </div>\n            <div className={s.text}>\n                Page {current} of {total}\n            </div>\n            <div className={s.action} onClick={() => onClick(start + limit)}>\n                &#62;\n            </div>\n        </div>\n    )\n}\n\nfunction Pagination({ total: _total, start, limit, onClick }) {\n    const total = Math.ceil(_total / limit)\n    const current = Math.ceil((start + limit) / limit)\n    const [first, last] = getPaginationRange(current, total)\n\n    if (last === 1) {\n        return null\n    }\n\n    return (\n        <div className={s.pagination}>\n            {getPaginationStats(current, start, limit, total, onClick)}\n            {getPages(current, first, last, limit, onClick)}\n        </div>\n    )\n}\n\nexport default class PaginatedTable extends React.Component {\n    state = {\n        start: 0,\n        limit: 10,\n    }\n\n    rows() {\n        const { fields, list } = this.props\n        const rows = list.slice(\n            this.state.start,\n            this.state.start + this.state.limit\n        )\n\n        if (rows.length === 0) {\n            return null\n        }\n\n        const k = fields[0]['key']\n\n        return rows.map((row, i) => (\n            <tr key={`rtr-${row[k]}-${i}`}>\n                {fields.map(({ key }, j) => (\n                    <td key={`rtd-${row[key]}-${j}`}>{row[key]}</td>\n                ))}\n            </tr>\n        ))\n    }\n\n    onClick = start => this.setState({ start })\n\n    colgroup() {\n        return (\n            <colgroup>\n                {this.props.fields.map(({ width }, i) => (\n                    <col key={`col-${i}`} width={width} />\n                ))}\n            </colgroup>\n        )\n    }\n\n    thead() {\n        return (\n            <thead>\n                <tr>\n                    {this.props.fields.map(({ title }) => (\n                        <td key={`title-${title}`}>{title}</td>\n                    ))}\n                </tr>\n            </thead>\n        )\n    }\n\n    tfoot() {\n        return (\n            <tfoot>\n                <tr>\n                    <td colSpan={this.props.fields.length}>\n                        <Pagination\n                            start={this.state.start}\n                            limit={this.state.limit}\n                            total={this.props.list.length}\n                            onClick={this.onClick}\n                        />\n                    </td>\n                </tr>\n            </tfoot>\n        )\n    }\n\n    tbody() {\n        return <tbody>{this.rows()}</tbody>\n    }\n\n    render() {\n        if (this.props.list.length === 0) {\n            return null\n        }\n\n        return (\n            <table className={`${s.table} ${s.paginatedTable}`}>\n                {this.colgroup()}\n                {this.thead()}\n                {this.tbody()}\n                {this.tfoot()}\n            </table>\n        )\n    }\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport PaginatedTable from './PaginatedTable'\nimport s from './styles.module.css'\n\nexport function Totals({ created, deleted, ignored, updated, total }) {\n    return (\n        <table className={`${s.table} ${s.totals}`}>\n            <thead>\n                <tr>\n                    <td>{i18n.t('Created')}</td>\n                    <td>{i18n.t('Deleted')}</td>\n                    <td>{i18n.t('Ignored')}</td>\n                    <td>{i18n.t('Updated')}</td>\n                    <td>{i18n.t('Total')}</td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>{created}</td>\n                    <td>{deleted}</td>\n                    <td>{ignored}</td>\n                    <td>{updated}</td>\n                    <td>{total}</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport function TypeStats({ list }) {\n    return (\n        <table className={`${s.table} ${s.typeCount}`}>\n            <thead>\n                <tr>\n                    <td>{i18n.t('Type')}</td>\n                    <td>{i18n.t('Created')}</td>\n                    <td>{i18n.t('Deleted')}</td>\n                    <td>{i18n.t('Ignored')}</td>\n                    <td>{i18n.t('Updated')}</td>\n                    <td>{i18n.t('Total')}</td>\n                </tr>\n            </thead>\n            <tbody>\n                {list.map(\n                    (\n                        { type, created, deleted, ignored, updated, total },\n                        i\n                    ) => (\n                        <tr key={`ts-${i}`}>\n                            <td>{type}</td>\n                            <td>{created}</td>\n                            <td>{deleted}</td>\n                            <td>{ignored}</td>\n                            <td>{updated}</td>\n                            <td>{total}</td>\n                        </tr>\n                    )\n                )}\n            </tbody>\n        </table>\n    )\n}\n\nexport function Summaries({ list }) {\n    const fields = [\n        {\n            key: 'reference',\n            title: 'Reference',\n            width: '15%',\n        },\n        {\n            key: 'status',\n            title: 'Status',\n            width: '10%',\n        },\n        {\n            key: 'responseType',\n            title: 'Type',\n            width: '15%',\n        },\n        {\n            key: 'description',\n            title: 'Description',\n            width: '60%',\n        },\n    ]\n    const titles = ['reference', 'status', 'Type', 'Description']\n    return <PaginatedTable fields={fields} titles={titles} list={list} />\n}\n\nexport function Messages({ list }) {\n    const fields = [\n        {\n            key: 'uid',\n            title: 'UID',\n            width: '10%',\n        },\n        {\n            key: 'type',\n            title: 'Type',\n            width: '15%',\n        },\n        {\n            key: 'property',\n            title: 'Property',\n            width: '15%',\n        },\n        {\n            key: 'message',\n            title: 'Message',\n            width: '60%',\n        },\n    ]\n    const titles = ['uid', 'Type', 'Property', 'Message']\n\n    return <PaginatedTable fields={fields} titles={titles} list={list} />\n}\n\nexport function Conflicts({ list }) {\n    const fields = [\n        {\n            key: 'object',\n            title: 'Object',\n            width: '40%',\n        },\n        {\n            key: 'value',\n            title: 'Value',\n            width: '60%',\n        },\n    ]\n    const titles = ['Object', 'Value']\n\n    return <PaginatedTable fields={fields} titles={titles} list={list} />\n}\n","import React, { Fragment } from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { eventEmitter } from '../../services'\nimport { Loading } from '../'\nimport { Totals, TypeStats, Conflicts, Messages, Summaries } from './helpers'\nimport s from './styles.module.css'\n\nconst initialState = {\n    loading: false,\n\n    stats: {\n        created: 0,\n        deleted: 0,\n        ignored: 0,\n        updated: 0,\n        total: 0,\n    },\n\n    typeStats: [],\n    conflicts: [],\n    summaries: [],\n    messages: [],\n}\n\nfunction getClassName(c) {\n    return c.substr(c.lastIndexOf('.') + 1)\n}\n\nexport class TaskSummary extends React.Component {\n    state = {\n        ...initialState,\n    }\n\n    componentDidMount() {\n        Object.entries(this.events).forEach(([evt, fn]) => {\n            eventEmitter.on(evt, fn)\n        })\n    }\n\n    componentWillUnmount() {\n        Object.entries(this.events).forEach(([evt, fn]) =>\n            eventEmitter.off(evt, fn)\n        )\n    }\n\n    onLoaded = () => this.setState({ loading: false })\n\n    onLoading = () => this.setState({ loading: true })\n    onClear = () => this.setState({ ...initialState })\n    onTotals = stats => this.setState({ stats })\n\n    onTypeReports = report => {\n        const newStats = []\n        const newMessages = []\n\n        Object.keys(report).forEach(i => {\n            const { klass, objectReports, stats } = report[i]\n\n            newStats.push({\n                ...stats,\n                type: getClassName(klass),\n            })\n\n            objectReports &&\n                objectReports.forEach(r => {\n                    const { uid, errorReports } = r\n\n                    errorReports &&\n                        errorReports.forEach(e => {\n                            newMessages.push({\n                                uid,\n                                type: getClassName(e.mainKlass),\n                                property: e.errorProperty,\n                                message: e.message,\n                            })\n                        })\n                })\n        })\n        const typeStats = this.state.typeStats.concat(newStats)\n        const messages = this.state.messages.concat(newMessages)\n\n        this.setState({ typeStats, messages })\n    }\n\n    onImportCount = ({ deleted, ignored, updated, imported }) =>\n        this.setState({\n            stats: {\n                deleted,\n                ignored,\n                updated,\n                created: imported,\n                total: deleted + ignored + updated + imported,\n            },\n        })\n\n    onConflicts = conflicts => this.setState({ conflicts })\n\n    onImportSummaries = rows => {\n        this.setState({\n            summaries: rows.slice(0),\n        })\n    }\n\n    events = {\n        'summary.loading': this.onLoading,\n        'summary.loaded': this.onLoaded,\n        'summary.clear': this.onClear,\n        'summary.totals': this.onTotals,\n        'summary.typeReports': this.onTypeReports,\n        'summary.importCount': this.onImportCount,\n        'summary.conflicts': this.onConflicts,\n        'summary.importSummaries': this.onImportSummaries,\n    }\n\n    viewTypeStats() {\n        const { typeStats } = this.state\n        if (typeStats.length === 0) {\n            return null\n        }\n\n        return (\n            <Fragment>\n                <div className={`${s.label} ${s.marginTop}`}>\n                    {i18n.t('Type Count')}\n                </div>\n\n                <TypeStats list={typeStats} />\n            </Fragment>\n        )\n    }\n\n    viewMessages() {\n        const { messages } = this.state\n        if (messages.length === 0) {\n            return null\n        }\n\n        return (\n            <Fragment>\n                <div className={`${s.label} ${s.marginTop}`}>\n                    {i18n.t('Messages')}\n                </div>\n                <Messages list={messages} />\n            </Fragment>\n        )\n    }\n\n    viewImportSummaries() {\n        const { summaries } = this.state\n        if (summaries.length === 0) {\n            return null\n        }\n\n        return (\n            <Fragment>\n                <div className={`${s.label} ${s.marginTop}`}>\n                    {i18n.t('Summaries')}\n                </div>\n                <Summaries list={summaries} />\n            </Fragment>\n        )\n    }\n\n    viewConflicts() {\n        const { conflicts } = this.state\n        if (conflicts === 0) {\n            return null\n        }\n\n        return (\n            <Fragment>\n                <div className={`${s.label} ${s.marginTop}`}>\n                    {i18n.t('Conflicts')}\n                </div>\n                <Conflicts list={conflicts} />\n            </Fragment>\n        )\n    }\n\n    isEmpty() {\n        const { stats, typeStats, messages, summaries } = this.state\n        if (\n            stats.total === 0 &&\n            typeStats.length === 0 &&\n            summaries.length === 0 &&\n            messages.length === 0\n        ) {\n            return true\n        }\n\n        return false\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <Loading />\n        }\n\n        if (this.isEmpty()) {\n            return null\n        }\n\n        return (\n            <div className={s.container}>\n                <div className={s.head}>\n                    <div className={s.title}>{i18n.t('Import Summary')}</div>\n                </div>\n                <div className={s.content}>\n                    <div className={s.label}>{i18n.t('Summary')}</div>\n                    <Totals {...this.state.stats} />\n\n                    {this.viewTypeStats()}\n                    {this.viewConflicts()}\n                    {this.viewMessages()}\n                    {this.viewImportSummaries()}\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { SvgIcon } from 'material-ui'\nimport { FormControl, FormLabel } from '../material-ui'\nimport s from './styles.module.css'\nimport i18n from '@dhis2/d2-i18n'\nimport { isValueNil } from '../../../helpers'\n\nfunction FileUploadIcon() {\n    return (\n        <SvgIcon>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\" />\n        </SvgIcon>\n    )\n}\n\nexport default class FileField extends React.Component {\n    onClick = () => {\n        this.fileRef && this.fileRef.click()\n    }\n\n    onChange = () => this.props.onChange(this.props.name, this.fileRef.files[0])\n\n    render() {\n        const { selected, required, formMeta } = this.props\n        let label = this.props.label || i18n.t('Choose a file to upload')\n        let helpText = this.props.helpText\n        if (selected) {\n            label = selected.name\n        }\n        if (required) {\n            label += ' *'\n            if (formMeta.submitted && isValueNil(selected)) {\n                helpText = i18n.t('Required')\n            }\n        }\n\n        return (\n            <React.Fragment>\n                <FormControl className={s.formControl} onClick={this.onClick}>\n                    <input\n                        type=\"file\"\n                        onChange={this.onChange}\n                        ref={c => (this.fileRef = c)}\n                        className={s.hiddenFileInput}\n                    />\n                    <FileUploadIcon className={s.button} />\n                    <FormLabel className={s.formLabel}>{label}</FormLabel>\n                </FormControl>\n                {helpText && <p className={s.helpText}>{helpText}</p>}\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react'\nimport moment from 'moment'\nimport DatePicker from 'material-ui/DatePicker'\nimport { FormControl, FormLabel } from '../material-ui'\nimport s from './styles.module.css'\n\nconst styles = {\n    style: {\n        height: 36,\n    },\n    textFieldStyle: {\n        height: 36,\n        fontSize: 15,\n        fontWeight: 500,\n    },\n}\n\nexport default class DateField extends React.Component {\n    onChange = (_, date) => this.props.onChange(this.props.name, date)\n\n    render() {\n        const { name, label, value, minDate } = this.props\n        const format =\n            this.props.format || moment.localeData().longDateFormat('L')\n        const marginTop = minDate ? 8 : 16\n\n        return (\n            <FormControl className={s.formControl} style={{ marginTop }}>\n                <FormLabel className={s.formLabel}>{label}</FormLabel>\n                <DatePicker\n                    {...styles}\n                    autoOk={true}\n                    key={`datePickerField-${name}`}\n                    name={`datePickerField-${name}`}\n                    format={format}\n                    minDate={minDate}\n                    value={value}\n                    onChange={this.onChange}\n                />\n            </FormControl>\n        )\n    }\n}\n","import React from 'react'\nimport { RadioButtonGroup, RadioButton } from 'material-ui'\nimport { FormLabel, FormControl } from '../material-ui'\nimport s from './styles.module.css'\n\nconst styles = {\n    radioButtonGroup: {},\n    radioButton: {\n        iconStyle: {\n            marginRight: 0,\n        },\n        style: {\n            width: 'auto',\n        },\n    },\n}\n\nexport default class RadioField extends React.Component {\n    onChange = (evt, value) => this.props.onChange(this.props.name, value)\n\n    render() {\n        const { name, label, values, selected } = this.props\n\n        return (\n            <FormControl className={s.formControl}>\n                <FormLabel className={s.formLabel}>{label}</FormLabel>\n                <RadioButtonGroup\n                    {...styles.radioButtonGroup}\n                    name={`radioGroup-${name}`}\n                    className={s.radioGroup}\n                    valueSelected={selected}\n                    onChange={this.onChange}\n                >\n                    {values.map(v => (\n                        <RadioButton\n                            {...styles.radioButton}\n                            key={`radio-${v.value}`}\n                            value={v.value}\n                            label={v.label}\n                        />\n                    ))}\n                </RadioButtonGroup>\n            </FormControl>\n        )\n    }\n}\n","import React from 'react'\nimport { SelectField as Select, MenuItem } from 'material-ui'\nimport { FormControl, FormLabel } from '../material-ui'\nimport s from './styles.module.css'\n\nconst styles = {\n    style: {},\n    labelStyle: {\n        fontSize: 14,\n        fontWeight: 500,\n    },\n    menuItemStyle: {\n        fontSize: 14,\n        fontWeight: 500,\n    },\n    underlineStyle: {\n        borderBottom: 0,\n    },\n    selectedMenuItemStyle: {\n        top: 0,\n    },\n}\n\nexport default class SelectField extends React.Component {\n    onChange = (evt, index, value) =>\n        this.props.onChange(this.props.name, value)\n\n    render() {\n        const { name, label, values, selected } = this.props\n\n        return (\n            <FormControl className={s.formControl}>\n                <FormLabel className={s.formLabel}>{label}</FormLabel>\n                <Select\n                    {...styles}\n                    autoWidth={true}\n                    value={selected}\n                    onChange={this.onChange}\n                    className={s.select}\n                    fullWidth={false}\n                >\n                    {values.map(v => (\n                        <MenuItem\n                            key={`mi-${name}-${v.value}`}\n                            value={v.value}\n                            primaryText={v.label}\n                            className={s.menuItem}\n                        />\n                    ))}\n                </Select>\n            </FormControl>\n        )\n    }\n}\n","export const USER_SET = 'user/SET'\nexport const USER_CLEAR = 'user/CLEAR'\n\nexport const setUser = user => ({ type: USER_SET, payload: user })\nexport const clearUser = () => ({ type: USER_CLEAR })\n","import { USER_SET, USER_CLEAR } from './actions'\n\nconst initialState = null\n\nexport default function userReducer(state = initialState, action) {\n    const { type, payload } = action\n\n    if (type === USER_SET) {\n        return { ...payload }\n    } else if (type === USER_CLEAR) {\n        return null\n    }\n\n    return state\n}\n","export const SCHEMAS_SET = 'schemas/SET'\nexport const SCHEMAS_CLEAR = 'schemas/CLEAR'\n\nexport const setSchemas = schemas => ({ type: SCHEMAS_SET, payload: schemas })\nexport const clearSchemas = () => ({ type: SCHEMAS_CLEAR })\n","import { SCHEMAS_SET } from './actions'\n\nconst initialState = { loaded: false, loading: true, error: false, list: [] }\nconst loadedState = { loaded: true, loading: false, error: false }\n\nexport * from './actions'\n\nexport default function schemasReducer(state = initialState, action) {\n    const { type, payload } = action\n\n    if (type === SCHEMAS_SET) {\n        return { ...loadedState, list: payload }\n    }\n\n    return state\n}\n","import { combineReducers } from 'redux'\nimport user from './user'\nimport schemas from './schemas'\n\nexport * from './user/actions'\nexport * from './schemas/actions'\n\nexport default combineReducers({\n    user,\n    schemas,\n})\n","import { createSelector } from 'reselect'\n\n// Groups schemas into groups\n// Ie. All Data Element related into 'dataElement'\nfunction schemaGroups(schemas) {\n    const groups = {}\n\n    schemas.forEach(s => {\n        if (!groups[s.group]) {\n            groups[s.group] = []\n        }\n\n        groups[s.group].push(s)\n    })\n\n    // check groups with 1 item and merge inside Other\n    const groupsWith1Item = []\n    const OTHER_GROUP_NAME = 'other'\n    let otherGroup = []\n\n    Object.entries(groups).forEach(([k, v]) => {\n        if (v.length === 1) {\n            groupsWith1Item.push(k)\n            v[0]['group'] = OTHER_GROUP_NAME\n            otherGroup = otherGroup.concat(v)\n        }\n    })\n    groups[OTHER_GROUP_NAME] = otherGroup\n\n    groupsWith1Item.forEach(k => {\n        delete groups[k]\n    })\n\n    return groups\n}\n\nexport const getSchemas = state => state.schemas.list\n\nexport const getSortedSchemaGroups = createSelector(\n    state => getSchemas(state),\n    schemas => schemaGroups(schemas)\n)\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { Checkbox, RaisedButton } from 'material-ui'\nimport { FormGroup, FormControl, FormLabel } from '../material-ui'\nimport { connect } from 'react-redux'\nimport { api } from '../../../services'\nimport { EXCLUDE_SCHEMAS } from '../../../helpers'\nimport { setSchemas } from '../../../reducers'\nimport {\n    getSortedSchemaGroups,\n    getSchemas,\n} from '../../../reducers/schemas/selectors'\nimport { Loading } from '../../Loading'\nimport s from './styles.module.css'\n\nfunction groupName(klass) {\n    const group = klass.split('.')\n    group.pop()\n\n    if (!klass.includes('.dhis')) {\n        group.pop()\n    }\n\n    return group[group.length - 1]\n}\n\nfunction breakOnCamelCase(schemaName, name) {\n    const temp = schemaName.substr(0, name.length).replace(/([A-Z]+)/g, ' $1')\n    return temp[0].toUpperCase() + temp.substr(1)\n}\n\nfunction groupLabelLowerCase(name, schemas) {\n    const validate = n => name === n.toLowerCase()\n    for (let i = 0; i < schemas.length; i += 1) {\n        if (validate(schemas[i]['name'])) {\n            return [true, schemas[i]['displayName']]\n        }\n    }\n\n    return [false, null]\n}\n\nfunction groupLabelCamelCase(name, schemas) {\n    const validate = n => n.includes(name) && n.indexOf(name) === 0\n    for (let i = 0; i < schemas.length; i += 1) {\n        const schemaName = schemas[i]['name'].toLowerCase()\n        if (validate(schemaName)) {\n            return [true, breakOnCamelCase(schemas[i]['name'], name)]\n        }\n    }\n\n    return [false, null]\n}\n\nfunction groupLabel(name, schemas) {\n    const nameLC = name.toLowerCase()\n    if (nameLC === 'oauth2' || nameLC === 'other') {\n        return name\n    }\n\n    const [isLower, displayName] = groupLabelLowerCase(nameLC, schemas)\n    if (isLower) {\n        return displayName\n    }\n\n    const [isCamelCase, ccName] = groupLabelCamelCase(nameLC, schemas)\n    if (isCamelCase) {\n        return ccName\n    }\n\n    return name[0].toUpperCase() + name.substr(1)\n}\n\nconst styles = {\n    iconStyle: {\n        marginRight: 0,\n    },\n}\n\nfunction Group({ label, schemas, checked, onClick }) {\n    return (\n        <div className={s.group}>\n            <FormLabel className={s.formLabel}>{label}</FormLabel>\n            <FormGroup className={s.schema}>\n                {schemas.map(s => (\n                    <Checkbox\n                        {...styles}\n                        key={`chk-${s.collectionName}`}\n                        value={s.name}\n                        label={s.displayName}\n                        checked={checked[s.collectionName]}\n                        onCheck={(evt, status) =>\n                            onClick(s.collectionName, status)\n                        }\n                    />\n                ))}\n            </FormGroup>\n        </div>\n    )\n}\n\nfunction Controls({ onSelectAll, onSelectNone }) {\n    return (\n        <div className={s.controls}>\n            <RaisedButton label={i18n.t('Select All')} onClick={onSelectAll} />\n            <RaisedButton\n                label={i18n.t('Select None')}\n                onClick={onSelectNone}\n            />\n        </div>\n    )\n}\n\nexport class DumbSchemas extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            checked:\n                props.schemas.length > 0 ? this.setChecked(null, true) : {},\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.schemas.length < 1) {\n            this.fetch()\n        }\n    }\n\n    /**\n     * Helper to handle setting checked-State. Note does not actually call setState,\n     * returns an object of the checked state.\n     * @param {f} collectionName if falsy, set all schemas to value - else, only update collectionName.\n     * @param {*} value value to set (true or false)\n     * @param {*} schemas schemas to use if collectionName is falsy\n     */\n    setChecked(collectionName, value, schemas = this.props.schemas) {\n        if (collectionName) {\n            return { ...this.state.checked, [collectionName]: value }\n        } else {\n            return schemas.reduce(\n                (accum, { collectionName: colName }) => ({\n                    ...accum,\n                    [colName]: value,\n                }),\n                {}\n            )\n        }\n    }\n\n    onClick = (collectionName, isChecked) => {\n        const updated = this.setChecked(collectionName, isChecked)\n\n        this.setState({ checked: updated }, () =>\n            this.props.onChange(this.props.name, updated)\n        )\n    }\n\n    getSchemas(schemas) {\n        return schemas\n            .filter(i => i.metadata && !EXCLUDE_SCHEMAS.has(i.collectionName))\n            .map(i => ({\n                name: i.name,\n                klass: i.klass,\n                displayName: i.displayName,\n                collectionName: i.collectionName,\n                group: groupName(i.klass),\n            }))\n            .sort((a, b) => a.displayName.localeCompare(b.displayName))\n    }\n\n    async fetch() {\n        try {\n            const { data } = await api.get('schemas.json')\n            const schemas = this.getSchemas(data.schemas)\n            this.props.setSchemas(schemas)\n            this.setState(\n                {\n                    checked: this.setChecked(null, true, schemas),\n                },\n                () => {\n                    this.props.onChange(this.props.name, this.state.checked)\n                }\n            )\n        } catch (e) {\n            console.log('fetch Schemas failed')\n            console.log(e)\n        }\n    }\n\n    onSelectNone = () => {\n        this.setState(\n            {\n                checked: this.setChecked(null, false),\n            },\n            () => this.props.onChange(this.props.name, this.state.checked)\n        )\n    }\n\n    onSelectAll = () => {\n        this.setState(\n            {\n                checked: this.setChecked(null, true),\n            },\n            () => this.props.onChange(this.props.name, this.state.checked)\n        )\n    }\n\n    viewSchemas() {\n        const groups = this.props.schemaGroups\n        const list = Object.keys(groups).sort((a, b) => a.localeCompare(b))\n\n        return (\n            <FormControl className={s.formControl}>\n                {list.map(k => (\n                    <Group\n                        key={`group-${k}`}\n                        label={groupLabel(k, groups[k])}\n                        schemas={groups[k]}\n                        checked={this.state.checked}\n                        onClick={this.onClick}\n                    />\n                ))}\n            </FormControl>\n        )\n    }\n\n    render() {\n        if (!this.props.loaded) {\n            return <Loading />\n        }\n        if (this.props.schemas.length === 0) {\n            return null\n        }\n\n        return (\n            <div className={s.container}>\n                <Controls\n                    onSelectAll={this.onSelectAll}\n                    onSelectNone={this.onSelectNone}\n                />\n                {this.viewSchemas()}\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        schemaGroups: getSortedSchemaGroups(state),\n        schemas: getSchemas(state),\n        loaded: state.schemas.loaded,\n    }),\n    { setSchemas }\n)(DumbSchemas)\n","import React from 'react'\nimport cx from 'classnames'\nimport s from './styles.module.css'\n\nfunction NodeIcon({ hasChildren, open, value, onClick }) {\n    if (hasChildren) {\n        return (\n            <div className={s.icon} onClick={evt => onClick(evt, !open, value)}>\n                {open ? '\\u2212' : '\\u002B'}\n            </div>\n        )\n    }\n\n    return <div className={s.icon} />\n}\n\nfunction NodeSpacer({ depth, hasChildren }) {\n    let minWidth = depth * 20\n    if (!hasChildren) {\n        minWidth += 7\n    }\n\n    return <div style={{ minWidth }} />\n}\n\nfunction NodeLabel({ label }) {\n    return <div className={s.text}>{label}</div>\n}\n\nfunction Node({\n    label,\n    value,\n    open,\n    depth,\n    isSelected,\n    children,\n    onClick,\n    onIconClick,\n}) {\n    const hasChildren = children && Array.isArray(children)\n    return (\n        <div>\n            <div\n                className={cx(s.label, {\n                    [s.selected]: isSelected,\n                })}\n                onClick={() => onClick(value)}\n            >\n                <NodeSpacer depth={depth} />\n                <NodeIcon\n                    hasChildren={hasChildren}\n                    open={open}\n                    value={value}\n                    onClick={onIconClick}\n                />\n                <NodeLabel label={label} />\n            </div>\n            {open && children && <div className={s.children}>{children}</div>}\n        </div>\n    )\n}\n\nexport class Tree extends React.Component {\n    updateState(list, open, value) {\n        if (!Array.isArray(list)) {\n            return\n        }\n\n        let found = false\n        for (let i = 0; i < list.length; i += 1) {\n            if (list[i]['value'] === value) {\n                list[i]['open'] = open\n                found = true\n            }\n\n            if (!found && typeof list[i]['children'] !== 'undefined') {\n                this.updateState(list[i]['children'], open, value)\n            }\n        }\n\n        return list\n    }\n\n    onIconClick = (evt, open, value) => {\n        evt.stopPropagation()\n        const list = this.updateState(this.props.list, open, value)\n        this.props.onIconClick(value, open, [...list])\n    }\n\n    onClick = value => {\n        const { multiple, selectable } = this.props\n        if (!selectable) {\n            return\n        }\n\n        let { selected } = this.props\n        const isSelected = selected.includes(value)\n        if (typeof multiple === 'undefined' || !multiple) {\n            this.props.setSelected(\n                isSelected ? [] : [value],\n                !isSelected,\n                value\n            )\n            return\n        }\n\n        if (isSelected) {\n            selected = selected.filter(v => v !== value)\n        } else {\n            selected = selected.slice(0)\n            selected.push(value)\n        }\n\n        this.props.setSelected(selected, !isSelected, value)\n    }\n\n    node(list, depth = 0) {\n        if (!Array.isArray(list)) {\n            return null\n        }\n\n        return list.map(({ open, label, value, children }) => {\n            return (\n                <Node\n                    key={`node-${value}`}\n                    depth={depth}\n                    open={open}\n                    label={label}\n                    value={value}\n                    onClick={this.onClick}\n                    onIconClick={this.onIconClick}\n                    isSelected={this.props.selected.includes(value)}\n                >\n                    {children ? this.node(children, depth + 1) : null}\n                </Node>\n            )\n        })\n    }\n\n    view() {\n        return this.node(this.props.list)\n    }\n\n    render() {\n        if (this.props.list.length === 0) {\n            return null\n        }\n\n        return <div className={s.container}>{this.view()}</div>\n    }\n}\n","import React from 'react'\nimport { getInstance } from 'd2/lib/d2'\nimport { Tree } from '../../Tree'\nimport { api } from '../../../services'\n\nexport default class OrgUnitTree extends React.Component {\n    state = {\n        list: [],\n        selected: this.props.selected || [],\n    }\n\n    onIconClick = (value, open, list) => {\n        this.setState({ list })\n\n        if (open) {\n            this.fetchNode(value)\n        }\n    }\n\n    setSelected = (selected, isSelected, value) => {\n        this.setState({ selected })\n        this.props.updateSelected(selected, isSelected, value)\n    }\n\n    componentDidMount() {\n        this.fetchRoot()\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({ selected: newProps.selected })\n    }\n\n    fetchRoot = async () => {\n        try {\n            const d2 = await getInstance()\n            d2.models.organisationUnits\n                .list({\n                    level: 1,\n                    paging: false,\n                    fields: 'id,path,displayName,children::isNotEmpty',\n                })\n                .then(root => {\n                    const list = root.toArray()\n                    this.setState({\n                        list: list.map(item => {\n                            const { path, displayName } = item\n                            return {\n                                open: false,\n                                value: path,\n                                label: displayName,\n                                children: [],\n                            }\n                        }),\n                    })\n                })\n        } catch (e) {\n            console.log('OrgUnitTree root fetch failed')\n        }\n    }\n\n    fetchNode = async path => {\n        try {\n            const params = []\n            const id = path.substr(path.lastIndexOf('/') + 1)\n            params.push('filter=' + encodeURIComponent(`id:in:[${id}]`))\n            params.push(\n                'fields=' +\n                    encodeURIComponent(\n                        ':all,displayName,path,children[id,displayName,path,children::isNotEmpty]'\n                    )\n            )\n            params.push('paging=false')\n            params.push('format=json')\n\n            const {\n                data: { organisationUnits },\n            } = await api.get(`organisationUnits?${params.join('&')}`)\n            const { children } = organisationUnits[0]\n\n            const items = children.map(({ path, displayName, children }) => ({\n                open: false,\n                value: path,\n                label: displayName,\n                children: children ? [] : null,\n            }))\n            items.sort((a, b) => a.label.localeCompare(b.label))\n\n            const { list } = this.state\n            this.setChildren(path, items, list)\n            this.setState({\n                list: [...list],\n            })\n        } catch (e) {\n            console.log('OrgUnitTree fetchNode failed')\n            console.log(e)\n        }\n    }\n\n    setChildren(path, children, list) {\n        if (!Array.isArray(list)) {\n            return\n        }\n\n        for (let i = 0; i < list.length; i += 1) {\n            if (list[i]['value'] === path) {\n                list[i]['children'] = children.slice(0)\n                return\n            }\n\n            if (list[i]['children'] && list[i]['children'].length > 0) {\n                this.setChildren(path, children, list[i]['children'])\n            }\n        }\n    }\n\n    render() {\n        const { multiple, selectable } = this.props\n        const { list, selected } = this.state\n        return (\n            <Tree\n                multiple={typeof multiple !== 'undefined' ? multiple : false}\n                selectable={\n                    typeof selectable !== 'undefined' ? selectable : true\n                }\n                list={list}\n                selected={selected}\n                onIconClick={this.onIconClick}\n                setSelected={this.setSelected}\n            />\n        )\n    }\n}\n","import React from 'react'\nimport { SvgIcon } from 'material-ui'\nimport i18n from '@dhis2/d2-i18n'\nimport s from './styles.module.css'\nimport { CTX_DEFAULT, CTX_MORE_OPTIONS } from '../'\n\nfunction PlusIcon() {\n    return (\n        <SvgIcon>\n            <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        </SvgIcon>\n    )\n}\n\nfunction MinusIcon() {\n    return (\n        <SvgIcon>\n            <path d=\"M19 13H5v-2h14v2z\" />\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        </SvgIcon>\n    )\n}\n\nexport default function MoreOptions({ enabled, onClick }) {\n    return (\n        <div\n            className={s.container}\n            onClick={() => onClick(enabled ? CTX_DEFAULT : CTX_MORE_OPTIONS)}\n        >\n            {enabled ? <MinusIcon /> : <PlusIcon />}\n            {i18n.t('more options')}\n        </div>\n    )\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { FormLabel } from '../material-ui'\nimport { TextField, MenuItem } from 'material-ui'\nimport CheckedIcon from 'material-ui/svg-icons/toggle/check-box'\nimport UnCheckedIcon from 'material-ui/svg-icons/toggle/check-box-outline-blank'\nimport s from './styles.module.css'\n\nconst styles = {\n    menuItem: {\n        style: {\n            padding: 0,\n            minHeight: 24,\n            lineHeight: '24px',\n        },\n        innerDivStyle: {\n            padding: 0,\n        },\n    },\n}\n\nconst Action = ({ label, children, onClick }) => (\n    <div className={s.action} onClick={onClick}>\n        {children}\n        <div className={s.actionLabel}>{label}</div>\n    </div>\n)\n\nexport default class DataSetPicker extends React.Component {\n    state = {\n        filter: '',\n    }\n\n    onUpdateFilter = (evt, filter) => this.setState({ filter })\n\n    onChange = value => {\n        let list = this.props.selected\n        if (list.includes(value)) {\n            list = list.filter(v => v !== value)\n        } else {\n            list.push(value)\n        }\n\n        this.props.onChange(this.props.name, list)\n    }\n\n    filter() {\n        return (\n            <div className={s.filter}>\n                <TextField\n                    fullWidth={true}\n                    hintText={i18n.t('filter data sets by name')}\n                    value={this.state.filter}\n                    onChange={this.onUpdateFilter}\n                />\n            </div>\n        )\n    }\n\n    onSelectAll = () =>\n        this.props.onChange(\n            this.props.name,\n            this.props.value.map(({ value }) => value)\n        )\n    onClearAll = () => this.props.onChange(this.props.name, [])\n\n    actions() {\n        return (\n            <div className={s.actions}>\n                <Action onClick={this.onSelectAll} label={i18n.t('Select All')}>\n                    <CheckedIcon />\n                </Action>\n                <Action onClick={this.onClearAll} label={i18n.t('Clear All')}>\n                    <UnCheckedIcon />\n                </Action>\n            </div>\n        )\n    }\n\n    header() {\n        return (\n            <div className={s.header}>\n                <FormLabel className={s.formLabel}>\n                    {i18n.t('Data sets')}\n                </FormLabel>\n            </div>\n        )\n    }\n\n    values() {\n        const { value } = this.props\n        const filter = this.state.filter.toLowerCase()\n        return filter.length === 0\n            ? value\n            : value.filter(({ label }) => label.toLowerCase().includes(filter))\n    }\n\n    leftIcon(value) {\n        return this.props.selected.includes(value) ? (\n            <CheckedIcon />\n        ) : (\n            <UnCheckedIcon />\n        )\n    }\n\n    contents() {\n        const values = this.values()\n        return (\n            <div className={s.body}>\n                {values.map(({ value, label }) => (\n                    <MenuItem\n                        key={`dateSetPicker-mi-${value}`}\n                        {...styles.menuItem}\n                        value={value}\n                        primaryText={label}\n                        insetChildren={true}\n                        leftIcon={this.leftIcon(value)}\n                        onClick={() => this.onChange(value)}\n                    />\n                ))}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className={s.container}>\n                {this.header()}\n                {this.filter()}\n                {this.actions()}\n                {this.contents()}\n            </div>\n        )\n    }\n}\n","export const TYPE_FILE = 'fieldType/FILE'\nexport const TYPE_DATE = 'fieldType/DATE'\nexport const TYPE_RADIO = 'fieldType/RADIO'\nexport const TYPE_SELECT = 'fieldType/SELECT'\nexport const TYPE_SCHEMAS = 'fieldType/SCHEMAS'\nexport const TYPE_ORG_UNIT = 'fieldType/ORG_UNIT'\nexport const TYPE_ORG_UNIT_SINGLE_SELECT = 'fieldType/ORG_UNIT_SINGLE_SELECT'\nexport const TYPE_MORE_OPTIONS = 'fieldType/MORE_OPTIONS'\nexport const TYPE_DATASET_PICKER = 'fieldType/DATASET_PICKER'\n\nexport const CTX_DEFAULT = 'ctx/DEFAULT'\nexport const CTX_MORE_OPTIONS = 'ctx/MORE_OPTIONS'\nexport const CTX_CSV_OPTION = 'ctx/CSV_OPTION'\n","import React from 'react'\nimport cx from 'classnames'\nimport { RaisedButton } from 'material-ui'\nimport { FormLabel, FormControl } from './material-ui'\nimport { TaskSummary } from '../TaskSummary'\nimport s from './styles.module.css'\nimport File from './File'\nimport Date from './Date'\nimport Radio from './Radio'\nimport Select from './Select'\nimport Schemas from './Schemas'\nimport OrgUnitTree from './OrgUnitTree'\nimport MoreOptions from './MoreOptions'\nimport DataSetPicker from './DataSetPicker'\nimport {\n    TYPE_FILE,\n    TYPE_DATE,\n    TYPE_RADIO,\n    TYPE_SELECT,\n    TYPE_SCHEMAS,\n    TYPE_ORG_UNIT,\n    TYPE_ORG_UNIT_SINGLE_SELECT,\n    TYPE_MORE_OPTIONS,\n    TYPE_DATASET_PICKER,\n} from './constants'\nimport { CTX_DEFAULT, CTX_MORE_OPTIONS } from './constants'\n\nexport * from './constants'\n\nexport class Form extends React.Component {\n    fields() {\n        const { fields, fieldValues } = this.props\n        const { _context: context, _meta: formMeta } = fieldValues\n\n        return fields.map(field => {\n            if (field.context !== CTX_DEFAULT && field.context !== context) {\n                return null\n            }\n\n            const { type, name, label, className, required } = field\n            const props = { name, label, className, required, formMeta }\n\n            if (type === TYPE_RADIO) {\n                props['values'] = fieldValues[name]['values']\n                props['selected'] = fieldValues[name]['selected']\n\n                return (\n                    <Radio\n                        {...props}\n                        key={`radio-${name}`}\n                        onChange={this.props.onChange}\n                    />\n                )\n            } else if (type === TYPE_SELECT) {\n                props['values'] = fieldValues[name]['values']\n                props['selected'] = fieldValues[name]['selected']\n\n                return (\n                    <Select\n                        {...props}\n                        key={`select-${name}`}\n                        onChange={this.props.onChange}\n                    />\n                )\n            } else if (type === TYPE_FILE) {\n                props['selected'] = fieldValues[name]['selected']\n\n                return (\n                    <File\n                        {...props}\n                        key={`file-${name}`}\n                        onChange={this.props.onChange}\n                    />\n                )\n            } else if (type === TYPE_DATE) {\n                props['value'] = fieldValues[name]['selected']\n                if (name === 'endDate') {\n                    props['minDate'] = fieldValues['startDate']['selected']\n                }\n\n                return (\n                    <Date\n                        {...props}\n                        key={`radio-${name}`}\n                        onChange={this.props.onChange}\n                    />\n                )\n            } else if (type === TYPE_MORE_OPTIONS) {\n                return (\n                    <MoreOptions\n                        key=\"moreOptions\"\n                        enabled={context === CTX_MORE_OPTIONS}\n                        onClick={this.props.changeContext}\n                    />\n                )\n            } else if (type === TYPE_SCHEMAS) {\n                return (\n                    <Schemas\n                        {...props}\n                        key={`schemas-${name}`}\n                        onChange={this.props.onChange}\n                    />\n                )\n            } else if (type === TYPE_ORG_UNIT) {\n                const { selected } = fieldValues[name]\n\n                return (\n                    <FormControl\n                        key={`orgUnitTree-${name}`}\n                        className={s.formControl}\n                    >\n                        <FormLabel className={s.formLabel}>{label}</FormLabel>\n                        <OrgUnitTree\n                            multiple={true}\n                            selectable={true}\n                            selected={selected}\n                            updateSelected={(selected, isSelected, value) =>\n                                this.props.onChange(name, {\n                                    selected,\n                                    isSelected,\n                                    value,\n                                })\n                            }\n                        />\n                    </FormControl>\n                )\n            } else if (type === TYPE_ORG_UNIT_SINGLE_SELECT) {\n                const { selected } = fieldValues[name]\n\n                return (\n                    <FormControl\n                        key={`orgUnitTree-${name}`}\n                        className={s.formControl}\n                    >\n                        <FormLabel className={s.formLabel}>{label}</FormLabel>\n                        <OrgUnitTree\n                            multiple={false}\n                            selectable={true}\n                            selected={selected}\n                            updateSelected={(selected, isSelected, value) =>\n                                this.props.onChange(name, {\n                                    selected,\n                                    isSelected,\n                                    value,\n                                })\n                            }\n                        />\n                    </FormControl>\n                )\n            } else if (type === TYPE_DATASET_PICKER) {\n                if (fieldValues[name]['value'] === null) {\n                    return null\n                }\n\n                props['value'] = fieldValues[name]['value']\n                props['selected'] = fieldValues[name]['selected']\n\n                return (\n                    <FormControl key={`dataSetPicker-${name}`}>\n                        <DataSetPicker\n                            {...props}\n                            onChange={this.props.onChange}\n                        />\n                    </FormControl>\n                )\n            }\n\n            return null\n        })\n    }\n\n    description() {\n        return (\n            this.props.description && (\n                <div className={s.desc}>{this.props.description}</div>\n            )\n        )\n    }\n\n    header() {\n        return (\n            <div className={s.head}>\n                <div className={s.icon}>{this.props.icon}</div>\n                <div className={s.title}>{this.props.title}</div>\n            </div>\n        )\n    }\n\n    buttons() {\n        return (\n            <div className={s.buttons}>\n                {this.props.onSubmit && (\n                    <RaisedButton\n                        primary={true}\n                        label={this.props.submitLabel}\n                        onClick={this.props.onSubmit}\n                    />\n                )}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className={s.wrapper}>\n                <TaskSummary />\n\n                <form\n                    style={this.props.style}\n                    className={cx(this.props.className, s.form)}\n                    onSubmit={this.props.onSubmit}\n                >\n                    {this.header()}\n                    {this.description()}\n\n                    <div className={s.fields}>{this.fields()}</div>\n                    {this.buttons()}\n                </form>\n            </div>\n        )\n    }\n}\n","import i18n from '@dhis2/d2-i18n'\nimport {\n    CTX_DEFAULT,\n    CTX_MORE_OPTIONS,\n    CTX_CSV_OPTION,\n    TYPE_FILE,\n    TYPE_DATE,\n    TYPE_DATASET_PICKER,\n    TYPE_SELECT,\n    TYPE_ORG_UNIT,\n    TYPE_ORG_UNIT_SINGLE_SELECT,\n    TYPE_MORE_OPTIONS,\n    TYPE_RADIO,\n    TYPE_SCHEMAS,\n} from '../components/Form'\n\n// eslint-disable-next-line max-params\nfunction getField(name, label, type, context = CTX_DEFAULT, required = false) {\n    return {\n        context,\n        type,\n        name,\n        label,\n        required,\n    }\n}\n\nconst fields = {\n    async: getField('async', i18n.t('Async'), TYPE_RADIO, CTX_MORE_OPTIONS),\n    atomicMode: getField('atomicMode', i18n.t('Atomic Mode'), TYPE_RADIO),\n    categoryOptionComboIdScheme: getField(\n        'categoryOptionComboIdScheme',\n        i18n.t('Category ID scheme'),\n        TYPE_RADIO,\n        CTX_MORE_OPTIONS\n    ),\n    children: getField('children', i18n.t('Children'), TYPE_RADIO),\n    classKey: getField(\n        'classKey',\n        i18n.t('Object type'),\n        TYPE_SELECT,\n        CTX_CSV_OPTION\n    ),\n    compression: getField('compression', i18n.t('Compression'), TYPE_RADIO),\n    dataElementIdScheme: getField(\n        'dataElementIdScheme',\n        i18n.t('Data element ID scheme'),\n        TYPE_RADIO,\n        CTX_MORE_OPTIONS\n    ),\n    dryRun: getField('dryRun', i18n.t('Dry run'), TYPE_RADIO),\n    endDate: getField('endDate', i18n.t('End date'), TYPE_DATE),\n    eventIdScheme: getField(\n        'eventIdScheme',\n        i18n.t('Event ID Scheme'),\n        TYPE_RADIO\n    ),\n    firstRowIsHeader: getField(\n        'firstRowIsHeader',\n        i18n.t('First row is header'),\n        TYPE_RADIO,\n        CTX_CSV_OPTION\n    ),\n    flushMode: getField(\n        'flushMode',\n        i18n.t('Flush Mode'),\n        TYPE_RADIO,\n        CTX_MORE_OPTIONS\n    ),\n    format: getField('format', i18n.t('Format'), TYPE_RADIO),\n    idScheme: getField('idScheme', i18n.t('ID scheme'), TYPE_RADIO),\n    identifier: getField('identifier', i18n.t('Identifier'), TYPE_RADIO),\n    importMode: getField('importMode', i18n.t('Dry run'), TYPE_RADIO),\n    importReportMode: getField(\n        'importReportMode',\n        i18n.t('Report Mode'),\n        TYPE_RADIO\n    ),\n    importStrategy: getField(\n        'importStrategy',\n        i18n.t('Import Strategy'),\n        TYPE_RADIO\n    ),\n    includeDeleted: getField(\n        'includeDeleted',\n        i18n.t('Include deleted'),\n        TYPE_RADIO,\n        CTX_MORE_OPTIONS\n    ),\n    inclusion: getField(\n        'inclusion',\n        i18n.t('Inclusion'),\n        TYPE_RADIO,\n        CTX_MORE_OPTIONS\n    ),\n    inclusionStrategy: getField(\n        'inclusionStrategy',\n        i18n.t('Inclusion Strategy'),\n        TYPE_RADIO,\n        CTX_MORE_OPTIONS\n    ),\n    mergeMode: getField('mergeMode', i18n.t('Merge Mode'), TYPE_RADIO),\n    objectList: getField('objectList', i18n.t('Object'), TYPE_SELECT),\n    objectType: getField('objectType', i18n.t('Object type'), TYPE_SELECT),\n    orgUnit: getField('orgUnit', i18n.t('Organisation unit'), TYPE_ORG_UNIT),\n    orgUnitIdScheme: getField(\n        'orgUnitIdScheme',\n        i18n.t('Org unit ID scheme'),\n        TYPE_RADIO,\n        CTX_MORE_OPTIONS\n    ),\n    orgUnit_SingleSelect: getField(\n        'orgUnit',\n        i18n.t('Organisation unit'),\n        TYPE_ORG_UNIT_SINGLE_SELECT\n    ),\n    preheatCache: getField('preheatCache', i18n.t('Preheat cache'), TYPE_RADIO),\n    preheatMode: getField('preheatMode', i18n.t('Preheat Mode'), TYPE_RADIO),\n    programStages: getField(\n        'programStages',\n        i18n.t('Program Stages'),\n        TYPE_SELECT\n    ),\n    programs: getField('programs', i18n.t('Programs'), TYPE_SELECT),\n    schemas: getField('schemas', i18n.t('Schemas'), TYPE_SCHEMAS),\n    selectedDataSets: getField(\n        'selectedDataSets',\n        i18n.t('Data Sets'),\n        TYPE_DATASET_PICKER\n    ),\n    sharing: getField('sharing', i18n.t('Sharing'), TYPE_RADIO),\n    skipExistingCheck: getField(\n        'skipExistingCheck',\n        i18n.t('Existing record check'),\n        TYPE_RADIO,\n        CTX_MORE_OPTIONS\n    ),\n    skipSharing: getField(\n        'skipSharing',\n        i18n.t('Skip Sharing'),\n        TYPE_RADIO,\n        CTX_MORE_OPTIONS\n    ),\n    skipValidation: getField(\n        'skipValidation',\n        i18n.t('Skip Validation'),\n        TYPE_RADIO,\n        CTX_MORE_OPTIONS\n    ),\n    startDate: getField('startDate', i18n.t('Start date'), TYPE_DATE),\n    strategy: getField('strategy', i18n.t('Strategy'), TYPE_RADIO),\n    upload: getField('upload', null, TYPE_FILE, undefined, true),\n}\n\nexport function getFormField(name, options = {}) {\n    if (typeof fields[name] === 'undefined') {\n        console.error('field', name, 'not found in fields')\n    }\n\n    return {\n        ...fields[name],\n        ...options,\n    }\n}\n\nexport function getFormFields(list) {\n    return list.map(i => getFormField(i))\n}\n\nexport function getFormFieldMoreOptions() {\n    return {\n        context: CTX_DEFAULT,\n        type: TYPE_MORE_OPTIONS,\n    }\n}\n","import {\n    TYPE_FILE,\n    TYPE_DATE,\n    TYPE_RADIO,\n    TYPE_SELECT,\n    TYPE_SCHEMAS,\n    TYPE_ORG_UNIT,\n    TYPE_ORG_UNIT_SINGLE_SELECT,\n    TYPE_DATASET_PICKER,\n} from '../components/Form'\nimport { isValueNil } from '../helpers'\n\nexport function getField(name, fields) {\n    return fields.filter(f => f.name === name)[0]\n}\n\n// eslint-disable-next-line max-params\nexport function getFieldState(name, value, fields, state) {\n    const f = getField(name, fields)\n\n    if (\n        [\n            TYPE_FILE,\n            TYPE_DATE,\n            TYPE_RADIO,\n            TYPE_SELECT,\n            TYPE_SCHEMAS,\n            TYPE_DATASET_PICKER,\n        ].includes(f.type)\n    ) {\n        state[name]['selected'] = value\n    } else if (f.type === TYPE_ORG_UNIT) {\n        const { selected, value: path } = value\n\n        const formData = new FormData()\n        formData.set('id', path.substr(path.lastIndexOf('/') + 1))\n\n        state[name]['selected'] = selected.slice(0)\n    } else if (f.type === TYPE_ORG_UNIT_SINGLE_SELECT) {\n        const { selected } = value\n        state[name]['selected'] = selected.slice(0)\n    }\n\n    return state\n}\n\nexport function getFieldValue(field) {\n    return field.selected\n}\n\nexport function getParamsFromFormState(state, list, append = []) {\n    const params = list.map(k => `${k}=${encodeURIComponent(state[k])}`)\n    append.forEach(v => params.push(v))\n\n    return params.join('&')\n}\n\nexport function getRequiredFields(fields) {\n    return fields.filter(f => !!f.required)\n}\n\nexport function hasRequiredFieldsWithoutValue(fields, fieldValues) {\n    const requiredFields = getRequiredFields(fields)\n\n    return requiredFields.length === 0\n        ? false\n        : requiredFields.findIndex(\n              f => f.name && isValueNil(getFieldValue(fieldValues[f.name]))\n          ) > -1\n}\n","const mapping = {\n    json: 'application/json',\n    xml: 'application/xml',\n    csv: 'application/csv',\n    gml: 'application/xml',\n    adx: 'application/adx+xml',\n    pdf: 'application/pdf',\n}\n\nexport const getMimeType = format => mapping[format] || null\n","import i18n from '@dhis2/d2-i18n'\nimport { CTX_DEFAULT } from '../components/Form'\nimport { today, endDateDefault } from '../helpers'\n\nfunction getValue(value, label) {\n    return {\n        value,\n        label,\n    }\n}\n\nfunction getValues(list) {\n    return list.map(([value, label]) => getValue(value, label))\n}\n\nexport function isValueNil(val) {\n    return val == null || val === ''\n}\n\nconst supportedFormats = ['adx', 'csv', 'json', 'pdf', 'xml']\n\nfunction getFormat(selected, list) {\n    const extensions = {}\n    supportedFormats.forEach(ext => {\n        extensions[ext] = getValue(`.${ext}`, ext.toUpperCase())\n    })\n\n    const values = []\n    list.split(',').forEach(k => values.push(extensions[k]))\n\n    return {\n        selected,\n        values,\n    }\n}\n\n// eslint-disable-next-line max-params\nfunction getBoolean(\n    selected,\n    labelTrue = i18n.t('Yes'),\n    labelFalse = i18n.t('No'),\n    reverseOrder = false\n) {\n    return {\n        selected,\n        values: reverseOrder\n            ? getValues([['false', labelFalse], ['true', labelTrue]])\n            : getValues([['true', labelTrue], ['false', labelFalse]]),\n    }\n}\n\nfunction getScheme(selected) {\n    return {\n        selected,\n        values: getValues([['UID', i18n.t('UID')], ['CODE', i18n.t('Code')]]),\n    }\n}\n\nconst calculated = {\n    format: getFormat,\n}\n\nconst values = {\n    upload: {\n        selected: null,\n    },\n\n    dryRun: getBoolean('false'),\n    firstRowIsHeader: getBoolean('false'),\n\n    idScheme: getScheme('UID'),\n    eventIdScheme: getScheme('UID'),\n\n    orgUnitIdScheme: {\n        selected: 'UID',\n        values: getValues([\n            ['UID', i18n.t('UID')],\n            ['CODE', i18n.t('Code')],\n            ['NAME', i18n.t('Name')],\n            ['ATTRIBUTE:UKNKz1H10EE', i18n.t('HR identifier')],\n        ]),\n    },\n\n    children: getBoolean(\n        'true',\n        i18n.t('Include descendants of organisation unit'),\n        i18n.t('Selected organisation unit')\n    ),\n\n    preheatCache: getBoolean('false', i18n.t('Yes (faster for large imports)')),\n\n    strategy: {\n        selected: 'NEW_AND_UPDATES',\n        values: getValues([\n            ['NEW_AND_UPDATES', i18n.t('New and Updates')],\n            ['NEW', i18n.t('New only')],\n            ['UPDATES', i18n.t('Updates only')],\n            ['DELETE', i18n.t('Delete')],\n        ]),\n    },\n\n    skipExistingCheck: getBoolean(\n        'false',\n        i18n.t('Skip check (fast)'),\n        i18n.t('Check (safe, recommended)')\n    ),\n\n    dataElementIdScheme: {\n        selected: 'UID',\n        values: getValues([\n            ['UID', i18n.t('UID')],\n            ['CODE', i18n.t('Code')],\n            ['NAME', i18n.t('Name')],\n        ]),\n    },\n\n    classKey: {\n        selected: '',\n        values: [],\n    },\n\n    _context: CTX_DEFAULT,\n\n    importMode: {\n        selected: 'COMMIT',\n        values: getValues([\n            ['VALIDATE', i18n.t('Yes')],\n            ['COMMIT', i18n.t('No')],\n        ]),\n    },\n\n    identifier: {\n        selected: 'UID',\n        values: getValues([\n            ['UID', i18n.t('UID')],\n            ['CODE', i18n.t('Code')],\n            ['AUTO', i18n.t('AUTO')],\n        ]),\n    },\n\n    importReportMode: {\n        selected: 'ERRORS',\n        values: getValues([\n            ['ERRORS', i18n.t('Errors')],\n            ['FULL', i18n.t('Full')],\n            ['DEBUG', i18n.t('Debug')],\n        ]),\n    },\n\n    preheatMode: {\n        selected: 'REFERENCE',\n        values: getValues([\n            ['REFERENCE', i18n.t('Reference')],\n            ['ALL', i18n.t('All')],\n            ['NONE', i18n.t('None')],\n        ]),\n    },\n\n    importStrategy: {\n        selected: 'CREATE_AND_UPDATE',\n        values: getValues([\n            ['CREATE_AND_UPDATE', i18n.t('Create and Update')],\n            ['CREATE', i18n.t('Create')],\n            ['UPDATE', i18n.t('Update')],\n            ['DELETE', i18n.t('Delete')],\n        ]),\n    },\n\n    atomicMode: {\n        selected: 'ALL',\n        values: getValues([['ALL', i18n.t('All')], ['NONE', i18n.t('None')]]),\n    },\n\n    mergeMode: {\n        selected: 'MERGE',\n        values: getValues([\n            ['MERGE', i18n.t('Merge')],\n            ['REPLACE', i18n.t('Replace')],\n        ]),\n    },\n\n    flushMode: {\n        selected: 'AUTO',\n        values: getValues([\n            ['AUTO', i18n.t('Auto')],\n            ['OBJECT', i18n.t('Object')],\n        ]),\n    },\n\n    sharing: getBoolean(\n        'true',\n        i18n.t('With sharing'),\n        i18n.t('Without sharing')\n    ),\n\n    skipSharing: getBoolean('false'),\n\n    skipValidation: getBoolean('false'),\n\n    async: getBoolean('true'),\n\n    inclusionStrategy: {\n        selected: 'NON_NULL',\n        values: getValues([\n            ['NON_NULL', i18n.t('Non Null')],\n            ['ALWAYS', i18n.t('Always')],\n            ['NON_EMPTY', i18n.t('Non Empty')],\n        ]),\n    },\n\n    inclusion: {\n        selected: 'selected',\n        values: getValues([\n            ['selected', i18n.t('Selected organisation unit')],\n            ['children', i18n.t('Include children of organisation unit')],\n            ['descendants', i18n.t('Include descendants of organisation unit')],\n        ]),\n    },\n\n    orgUnit: {\n        selected: [],\n        value: null,\n    },\n\n    selectedDataSets: {\n        selected: [],\n        value: null,\n    },\n\n    startDate: {\n        selected: endDateDefault(),\n    },\n\n    endDate: {\n        selected: today(),\n    },\n\n    compression: {\n        selected: '.zip',\n        values: getValues([\n            ['.zip', i18n.t('Zip')],\n            ['.gz', i18n.t('Gzip')],\n            ['none', i18n.t('Uncompressed')],\n        ]),\n    },\n\n    includeDeleted: getBoolean('false'),\n\n    categoryOptionComboIdScheme: getScheme('UID'),\n\n    schemas: {\n        selected: [],\n    },\n\n    objectType: {\n        selected: 'dataSets',\n        values: getValues([\n            ['dataSets', i18n.t('Data sets')],\n            ['programs', i18n.t('Programs')],\n            ['categoryCombos', i18n.t('Category combination')],\n            ['dashboards', i18n.t('Dashboard')],\n            ['dataElementGroups', i18n.t('Data element groups')],\n            ['optionSets', i18n.t('Option sets')],\n        ]),\n    },\n\n    objectList: {\n        selected: '',\n        values: [],\n    },\n\n    programs: {\n        selected: '',\n        values: [],\n    },\n\n    programStages: {\n        selected: -1,\n        values: getValues([[-1, i18n.t('[ All program stages]')]]),\n    },\n}\n\nexport function getFormValues(list) {\n    const o = {\n        _meta: {\n            submitted: false,\n            valid: false,\n            processing: false,\n            error: null,\n        },\n    }\n\n    list.forEach(k => {\n        if (typeof values[k] === 'undefined' && !k.includes(':')) {\n            console.error('value', k, 'not found in values')\n        }\n\n        if (k.includes(':')) {\n            const [name, selected, list] = k.split(':')\n            o[name] = calculated[name](selected, list)\n        } else {\n            o[k] = values[k]\n        }\n    })\n\n    return o\n}\n\nexport const EXCLUDE_SCHEMAS = new Set([\n    'analyticsTableHooks',\n    'charts',\n    'constants',\n    'dataElementDimensions',\n    'dataEntryForms',\n    'dataSetNotificationTemplates',\n    'dataStores',\n    'documents',\n    'eventCharts',\n    'eventReports',\n    'icons',\n    'jobConfigurations',\n    'messageConversations',\n    'metadataVersions',\n    'minMaxDataElements',\n    'oAuth2Clients',\n    'programDataElements',\n    'programNotificationTemplates',\n    'pushAnalysis',\n    'reportTables',\n    'reportingRates',\n    'reports',\n    'sections',\n    'smsCommands',\n    'sqlViews',\n    'trackedEntityInstanceFilters',\n    'validationNotificationTemplates',\n])\n","export function today() {\n    return new Date()\n}\n\nexport function endDateDefault() {\n    const d = new Date()\n    d.setMonth(d.getMonth() - 3)\n    return d\n}\n","import { api, eventEmitter } from '../../services'\n\nconst CATEGORY_2_LABEL = {\n    METADATA_IMPORT: 'Metadata import',\n    DATAVALUE_IMPORT: 'Data import',\n    GML_IMPORT: 'GML import',\n    EVENT_IMPORT: 'Event import',\n}\n\nconst lastIds = {}\n\nfunction emitLog(data) {\n    for (let i = data.length - 1; i >= 0; i -= 1) {\n        const { category, level, message, time, uid } = data[i]\n        eventEmitter.emit('log', {\n            id: uid,\n            d: new Date(time),\n            type: `${level} - ${CATEGORY_2_LABEL[category]}`,\n            text: message,\n        })\n    }\n}\n\nexport function emitLogOnFirstResponse(xhr, importType) {\n    const data = JSON.parse(xhr.responseText)\n    const { message, status, typeReports, response } = data\n\n    if (status && status === 'ERROR') {\n        if (\n            Array.isArray(typeReports) &&\n            Array.isArray(typeReports[0].objectReports) &&\n            Array.isArray(typeReports[0].objectReports[0].errorReports)\n        ) {\n            eventEmitter.emit('log', {\n                id: new Date().getTime(),\n                d: new Date(),\n                type: `ERROR - ${CATEGORY_2_LABEL[importType]}`,\n                text: typeReports[0].objectReports[0].errorReports[0].message,\n            })\n\n            setTimeout(() => {\n                eventEmitter.emit('summary.loading')\n                eventEmitter.emit('summary.typeReports', typeReports)\n                eventEmitter.emit('summary.loaded')\n            }, 1000)\n\n            return -1\n        }\n    }\n\n    if (typeof response !== 'undefined') {\n        eventEmitter.emit('log', {\n            id: new Date().getTime(),\n            d: new Date(response.created),\n            type: `INFO - ${CATEGORY_2_LABEL[importType]}`,\n            text: message,\n        })\n\n        return response.id\n    }\n\n    return -1\n}\n\nfunction getFetchLogPath(jobId, type) {\n    let path = `system/tasks/${type}`\n    if (lastIds[type]) {\n        path += `?lastId=${lastIds[type]}`\n    }\n\n    return path\n}\n\nfunction fetchResponseIsArray(data) {\n    return Array.isArray(data) && data.length > 0\n}\n\nfunction fetchResponseIsObject(data) {\n    return typeof data === 'object'\n}\n\nfunction isFetchLogComplete(data) {\n    if (!data) {\n        return false\n    }\n\n    return data.filter(item => item.completed).length === 0\n}\n\nfunction fetchLogAfter(jobId, type, time = 2000) {\n    setTimeout(() => fetchLog(jobId, type), time)\n}\n\nexport async function fetchLog(jobId, type) {\n    try {\n        const { data } = await api.get(getFetchLogPath(jobId, type))\n\n        if (fetchResponseIsArray(data)) {\n            lastIds[type] = data[0]['uid']\n            emitLog(data, type)\n\n            if (isFetchLogComplete(data)) {\n                fetchLogAfter(jobId, type)\n            }\n        } else if (fetchResponseIsObject(data)) {\n            let records = null\n            Object.keys(data).forEach(k => {\n                lastIds[type] = data[k][0]['uid']\n                records = data[k]\n                emitLog(data[k], type)\n            })\n\n            if (isFetchLogComplete(records)) {\n                fetchLogAfter(jobId, type)\n            } else {\n                await fetchTaskSummary(jobId, type)\n            }\n        }\n    } catch (e) {\n        console.log(`Error fetching ${type}`)\n        console.log(e)\n    }\n}\n\nexport async function fetchTaskSummary(jobId, type) {\n    try {\n        const path = `system/taskSummaries/${type}/${jobId}.json`\n        const { data } = await api.get(path)\n\n        if (data) {\n            data.stats && logStats(data.stats, type)\n            data.importCount && logImportCount(data.importCount, type)\n            data.conflicts && logConflicts(data.conflicts, type)\n\n            if (data.typeReports) {\n                eventEmitter.emit('summary.totals', data.stats)\n                eventEmitter.emit('summary.typeReports', data.typeReports)\n            } else if (data.conflicts) {\n                eventEmitter.emit('summary.importCount', data.importCount)\n                eventEmitter.emit('summary.conflicts', data.conflicts)\n            } else if (data.importSummaries) {\n                eventEmitter.emit('summary.importCount', data)\n                eventEmitter.emit(\n                    'summary.importSummaries',\n                    data.importSummaries\n                )\n            } else if (data.importCount) {\n                eventEmitter.emit('summary.importCount', data.importCount)\n            } else {\n                console.error(\n                    'No summary generated. Receieved data not recognized: ',\n                    data\n                )\n            }\n        }\n\n        eventEmitter.emit('summary.loaded')\n    } catch (e) {\n        console.log(`Task Summaries: Error fetching ${type}`)\n        console.log(e)\n    }\n}\n\nfunction logStats(stats, type) {\n    if (!stats) {\n        return\n    }\n\n    const { created, updated, deleted, ignored, total } = stats\n    eventEmitter.emit('log', {\n        id: new Date().getTime(),\n        d: null,\n        type: `INFO - ${CATEGORY_2_LABEL[type]}`,\n        text: `Created: ${created}, Updated: ${updated}, Deleted: ${deleted}, Ignored: ${ignored}, Total: ${total}`,\n    })\n}\n\nfunction logImportCount(importCount, type) {\n    if (!importCount) {\n        return\n    }\n\n    const { deleted, ignored, imported, updated } = importCount\n    eventEmitter.emit('log', {\n        id: new Date().getTime(),\n        d: new Date(),\n        type: `INFO - ${CATEGORY_2_LABEL[type]}`,\n        text: `Imported: ${imported}, Updated: ${updated}, Deleted: ${deleted}, Ignored: ${ignored}`,\n    })\n}\n\nfunction logConflicts(conflicts, type) {\n    if (!conflicts) {\n        return\n    }\n\n    for (let i = 0; i < conflicts.length; i += 1) {\n        const { object, value } = conflicts[i]\n        eventEmitter.emit('log', {\n            id: new Date().getTime(),\n            d: new Date(),\n            type: `CONFLICT - ${object}`,\n            text: value,\n        })\n    }\n}\n","import { getMimeType } from './mime'\nimport { eventEmitter } from '../services'\nimport { emitLogOnFirstResponse, fetchLog } from '../pages/import/helpers'\n\n// eslint-disable-next-line max-params\nexport function getUploadXHR(url, upload, type, onResponse, onError, format) {\n    const xhr = new XMLHttpRequest()\n    const contentType = getMimeType(format)\n\n    xhr.withCredentials = true\n    xhr.open('POST', url, true)\n    xhr.setRequestHeader('Content-Type', contentType)\n    xhr.setRequestHeader(\n        'Content-Disposition',\n        'attachment filename=\"' + upload.name + '\"'\n    )\n\n    xhr.onreadystatechange = onReadyStateChange(xhr, type, onResponse, onError)\n    xhr.upload.onprogress = onProgress\n    return xhr\n}\n\n// eslint-disable-next-line max-params\nexport function onReadyStateChange(xhr, type, onResponse, onError) {\n    return async function handleChange(e) {\n        const status = Math.floor(xhr.status / 100)\n        if (xhr.readyState === 4 && status === 2) {\n            eventEmitter.emit('summary.clear')\n\n            const jobId = emitLogOnFirstResponse(xhr, type)\n            if (jobId === -1) {\n                onResponse()\n                return\n            }\n\n            onResponse()\n\n            eventEmitter.emit('summary.loading')\n            await fetchLog(jobId, type)\n        } else if ([3, 4, 5].includes(status)) {\n            onError(e)\n        }\n    }\n}\n\nexport function onProgress(evt) {\n    if (evt.lengthComputable) {\n        const percentComplete = parseInt((evt.loaded / evt.total) * 100)\n        const stats = { ...evt, percentComplete }\n        eventEmitter.emit('upload.progress', stats)\n    }\n}\n","import React from 'react'\nimport {\n    getFieldState,\n    getFieldValue,\n    hasRequiredFieldsWithoutValue,\n} from '../../helpers'\nimport { Form, Progress, Error } from '../'\nimport s from './styles.module.css'\n\nexport class FormBase extends React.Component {\n    onChange = (name, value) => {\n        const valid = this.props.validateOnChange\n            ? this.validate()\n            : this.state._meta.valid\n        this.setState(\n            {\n                ...getFieldState(name, value, this.fields, this.state),\n                ...this.setMetaState({ valid }),\n            },\n            () => {\n                this.onFormUpdate && this.onFormUpdate(name, value)\n            }\n        )\n    }\n\n    changeContext = _context => this.setState({ _context })\n\n    getFormState() {\n        const values = {}\n        this.fields\n            .map(f => f.name)\n            .forEach(name => {\n                if (name) {\n                    values[name] = getFieldValue(this.state[name])\n                }\n            })\n        return values\n    }\n\n    setMetaState(metaState, cb = undefined) {\n        return this.setState(\n            state => ({\n                _meta: {\n                    ...state._meta,\n                    ...metaState,\n                },\n            }),\n            cb\n        )\n    }\n\n    setProcessing = () => this.setMetaState({ processing: true })\n    clearProcessing = () => this.setMetaState({ processing: false })\n\n    onClearError = () => this.setMetaState({ error: false })\n\n    assertOnError = evt => {\n        try {\n            const { message: error } = JSON.parse(evt.target.response)\n            this.setMetaState({ error, processing: false })\n        } catch (err) {}\n    }\n\n    validate = () => {\n        // Simple default validation for now:\n        // just check if there exists required fields without a value\n        return !hasRequiredFieldsWithoutValue(this.fields, this.state)\n    }\n    onBeforeSubmit = () => {\n        this.setMetaState({ submitted: true })\n        const valid = this.validate()\n        return valid && this.onSubmit()\n    }\n\n    render() {\n        if (this.state._meta.error) {\n            return (\n                <Error\n                    message={this.state._meta.error}\n                    onClear={this.onClearError}\n                />\n            )\n        }\n\n        if (this.state._meta.processing) {\n            return <Progress />\n        }\n\n        return (\n            <Form\n                className={s.form}\n                style={{\n                    width: this.formWidth,\n                }}\n                icon={this.icon}\n                fields={this.fields}\n                fieldValues={this.state}\n                title={this.formTitle}\n                description={this.formDescription || ''}\n                onChange={this.onChange}\n                changeContext={this.changeContext}\n                submitLabel={this.submitLabel}\n                onSubmit={this.onBeforeSubmit}\n            />\n        )\n    }\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { api, eventEmitter } from '../../services'\nimport { FormBase } from '../../components/FormBase'\nimport { CTX_DEFAULT, CTX_CSV_OPTION } from '../../components/Form'\nimport { MetadataImportIcon } from '../../components/Icon'\nimport {\n    getFormFields,\n    getFormFieldMoreOptions,\n    getFormValues,\n    getUploadXHR,\n    getParamsFromFormState,\n} from '../../helpers'\nimport { fetchLog } from './helpers'\n\nexport class MetaDataImport extends FormBase {\n    static path = '/import/metadata'\n\n    static order = 1\n    static title = i18n.t('Metadata Import')\n    static desc = i18n.t(\n        'Import metadata like data elements and organisation units using the standard DHIS 2 exchange format called DXF 2.'\n    )\n\n    static menuIcon = <MetadataImportIcon />\n    icon = <MetadataImportIcon />\n\n    formWidth = 800\n    formTitle = i18n.t('Metadata Import')\n    submitLabel = i18n.t('Import')\n\n    fields = [\n        ...getFormFields([\n            'upload',\n            'format',\n            'importMode',\n            'firstRowIsHeader',\n            'classKey',\n            'identifier',\n            'importReportMode',\n            'preheatMode',\n            'importStrategy',\n            'atomicMode',\n            'mergeMode',\n        ]),\n\n        getFormFieldMoreOptions(),\n\n        ...getFormFields([\n            'flushMode',\n            'skipSharing',\n            'skipValidation',\n            'async',\n            'inclusionStrategy',\n        ]),\n    ]\n\n    state = getFormValues([\n        '_context',\n        'upload',\n        'format:.json:json,xml,csv',\n        'dryRun',\n        'classKey',\n        'importMode',\n        'identifier',\n        'importReportMode',\n        'preheatMode',\n        'importStrategy',\n        'atomicMode',\n        'mergeMode',\n        'flushMode',\n        'skipSharing',\n        'skipValidation',\n        'async',\n        'inclusionStrategy',\n        'firstRowIsHeader',\n    ])\n\n    async componentDidMount() {\n        await fetchLog('', 'METADATA_IMPORT')\n        eventEmitter.emit('summary.clear')\n        await this.fetch()\n    }\n\n    async fetch() {\n        try {\n            const { data } = await api.get('metadata/csvImportClasses')\n            const values = data.map(v => ({\n                value: v,\n                label: v.split('_').join(' '),\n            }))\n\n            this.setState({\n                classKey: {\n                    values,\n                    selected: values[0]['value'],\n                },\n            })\n        } catch (e) {\n            console.log('fetch csvImportClasses failed')\n            console.log(e)\n        }\n    }\n\n    onFormUpdate = (name, value) => {\n        if (name === 'format') {\n            const { _context } = this.state\n\n            if (value === '.csv' && _context !== CTX_CSV_OPTION) {\n                this.changeContext(CTX_CSV_OPTION)\n            } else {\n                this.changeContext(CTX_DEFAULT)\n            }\n        }\n    }\n\n    onSubmit = async () => {\n        try {\n            let append = []\n            const formData = new FormData()\n            const {\n                upload,\n                format,\n                classKey,\n                firstRowIsHeader,\n            } = this.getFormState()\n\n            if (!upload) {\n                this.assertOnError({\n                    target: {\n                        response: JSON.stringify({\n                            message: 'Upload field is required',\n                        }),\n                    },\n                })\n            }\n\n            formData.set('upload', upload)\n\n            if (format === '.csv') {\n                append = [\n                    ...append,\n                    `classKey=${classKey}`,\n                    `firstRowIsHeader=${firstRowIsHeader}`,\n                ]\n            }\n\n            append.push('format=json')\n\n            const params = getParamsFromFormState(\n                this.getFormState(),\n                [\n                    'importMode',\n                    'dryRun',\n                    'identifier',\n                    'importReportMode',\n                    'preheatMode',\n                    'importStrategy',\n                    'atomicMode',\n                    'mergeMode',\n                    'flushMode',\n                    'skipSharing',\n                    'skipValidation',\n                    'async',\n                    'inclusionStrategy',\n                ],\n                append\n            )\n\n            this.setProcessing()\n\n            const { REACT_APP_DHIS2_BASE_URL } = process.env\n            const url = `${REACT_APP_DHIS2_BASE_URL}/api/metadata.json?${params}`\n            const xhr = getUploadXHR(\n                url,\n                upload,\n                'METADATA_IMPORT',\n                this.clearProcessing,\n                this.assertOnError,\n                format.substr(1)\n            )\n            xhr.send(upload)\n        } catch (e) {\n            console.log('MetaData Import error', e, '\\n')\n            this.clearProcessing()\n        } finally {\n        }\n    }\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { FormBase } from '../../components/FormBase'\nimport { CTX_DEFAULT, CTX_CSV_OPTION } from '../../components/Form'\nimport { DataIcon } from '../../components/Icon'\nimport {\n    getFormFields,\n    getFormFieldMoreOptions,\n    getFormValues,\n    getParamsFromFormState,\n    getUploadXHR,\n} from '../../helpers'\nimport { fetchLog } from './helpers'\n\nexport class DataImport extends FormBase {\n    static path = '/import/data'\n\n    static order = 2\n    static title = i18n.t('Data Import')\n    static desc = i18n.t(\n        'Import data values on the DXF 2 XML, JSON, CSV and PDF formatrant s. DXF 2 is the standard exchange format for DHIS 2.'\n    )\n\n    static menuIcon = <DataIcon />\n    icon = <DataIcon />\n\n    formWidth = 800\n    formTitle = i18n.t('Data Import')\n    submitLabel = i18n.t('Import')\n\n    fields = [\n        ...getFormFields([\n            'upload',\n            'format',\n            'dryRun',\n            'firstRowIsHeader',\n            'strategy',\n            'preheatCache',\n        ]),\n\n        getFormFieldMoreOptions(),\n\n        ...getFormFields([\n            'dataElementIdScheme',\n            'orgUnitIdScheme',\n            'idScheme',\n            'skipExistingCheck',\n        ]),\n    ]\n\n    state = getFormValues([\n        'upload',\n        'format:.json:json,xml,csv,pdf,adx',\n        'dryRun',\n        'strategy',\n        'preheatCache',\n        'dataElementIdScheme',\n        'orgUnitIdScheme',\n        'idScheme',\n        'skipExistingCheck',\n        'firstRowIsHeader',\n    ])\n\n    async componentDidMount() {\n        await fetchLog('', 'DATAVALUE_IMPORT')\n    }\n\n    onFormUpdate = (name, value) => {\n        if (name === 'format') {\n            const { _context } = this.state\n\n            if (value === '.csv' && _context !== CTX_CSV_OPTION) {\n                this.changeContext(CTX_CSV_OPTION)\n            } else {\n                this.changeContext(CTX_DEFAULT)\n            }\n        }\n    }\n\n    onSubmit = () => {\n        try {\n            const { upload, format, firstRowIsHeader } = this.getFormState()\n            const formattedFormat = format.substr(1)\n            const append = [`format=${formattedFormat}`, 'async=true']\n\n            if (format === '.csv') {\n                append.push(`firstRowIsHeader=${firstRowIsHeader}`)\n            }\n\n            const params = getParamsFromFormState(\n                this.getFormState(),\n                [\n                    'dataElementIdScheme',\n                    'dryRun',\n                    'idScheme',\n                    'orgUnitIdScheme',\n                    'preheatCache',\n                    'skipExistingCheck',\n                    'strategy',\n                ],\n                append\n            )\n\n            this.setProcessing()\n\n            const { REACT_APP_DHIS2_BASE_URL } = process.env\n            const url = `${REACT_APP_DHIS2_BASE_URL}/api/dataValueSets.json?${params}`\n            const xhr = getUploadXHR(\n                url,\n                upload,\n                'DATAVALUE_IMPORT',\n                this.clearProcessing,\n                this.assertOnError,\n                formattedFormat\n            )\n\n            xhr.send(upload)\n        } catch (e) {\n            console.log('Data Import error', e, '\\n')\n        }\n    }\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { FormBase } from '../../components/FormBase'\nimport { GMLIcon } from '../../components/Icon'\nimport { getFormFields, getFormValues, getUploadXHR } from '../../helpers'\nimport { fetchLog } from './helpers'\n\nexport class GMLImport extends FormBase {\n    static path = '/import/gml'\n\n    static order = 4\n    static title = i18n.t('GML Import')\n    static desc = i18n.t(\n        'Import geographic data for organisation units using GML format. GML is an XML grammar for expressing geographical features.'\n    )\n\n    static menuIcon = <GMLIcon />\n    icon = <GMLIcon />\n\n    formWidth = 800\n    formTitle = i18n.t('GML Import')\n    formDescription = i18n.t(\n        'Only import of GML data for existing organisation units is supported.'\n    )\n    submitLabel = i18n.t('Import')\n\n    fields = getFormFields(['upload', 'dryRun'])\n    state = getFormValues(['upload', 'dryRun'])\n\n    async componentDidMount() {\n        await fetchLog('', 'GML_IMPORT')\n    }\n\n    onSubmit = async () => {\n        try {\n            const { upload, dryRun } = this.getFormState()\n\n            const formData = new FormData()\n            formData.set('upload', upload)\n\n            this.setProcessing()\n\n            const params = `dryRun=${dryRun}&format=json`\n            const { REACT_APP_DHIS2_BASE_URL } = process.env\n            const url = `${REACT_APP_DHIS2_BASE_URL}/api/metadata/gml?${params}`\n            const xhr = getUploadXHR(\n                url,\n                upload,\n                'GML_IMPORT',\n                this.clearProcessing,\n                this.assertOnError,\n                'gml'\n            )\n            xhr.send(upload)\n        } catch (e) {\n            this.setProcessing(false)\n            console.log('GML Import error', e, '\\n')\n        }\n    }\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { FormBase } from '../../components/FormBase'\nimport { CTX_DEFAULT } from '../../components/Form'\nimport { EventIcon } from '../../components/Icon'\nimport {\n    getFormField,\n    getFormFields,\n    getFormValues,\n    getParamsFromFormState,\n    getUploadXHR,\n} from '../../helpers'\nimport { fetchLog } from './helpers'\n\nexport class EventImport extends FormBase {\n    static path = '/import/event'\n\n    static order = 3\n    static title = i18n.t('Event Import')\n    static desc = i18n.t(\n        'Import events for programs, stages and tracked entities in the DXF 2 format.'\n    )\n\n    static menuIcon = <EventIcon />\n    icon = <EventIcon />\n\n    formWidth = 800\n    formTitle = i18n.t('Event Import')\n    submitLabel = i18n.t('Import')\n\n    fields = [\n        ...getFormFields(['upload', 'format', 'dryRun', 'eventIdScheme']),\n        getFormField('orgUnitIdScheme', { context: CTX_DEFAULT }),\n    ]\n\n    state = getFormValues([\n        'upload',\n        'format:.json:json,xml,csv',\n        'dryRun',\n        'eventIdScheme',\n        'orgUnitIdScheme',\n    ])\n\n    async componentDidMount() {\n        await fetchLog('', 'EVENT_IMPORT')\n    }\n\n    onSubmit = async () => {\n        try {\n            const { upload, format } = this.getFormState()\n            const formattedFormat = format.slice(1)\n\n            const params = getParamsFromFormState(\n                this.getFormState(),\n                ['dryRun', 'eventIdScheme', 'orgUnitIdScheme'],\n                [\n                    'async=true',\n                    'skipFirst=true',\n                    `payloadFormat=${formattedFormat}`,\n                ]\n            )\n            this.setProcessing()\n\n            const { REACT_APP_DHIS2_BASE_URL } = process.env\n            const url = `${REACT_APP_DHIS2_BASE_URL}/api/events.json?${params}`\n            const xhr = getUploadXHR(\n                url,\n                upload,\n                'EVENT_IMPORT',\n                this.clearProcessing,\n                this.assertOnError,\n                formattedFormat\n            )\n            xhr.send(upload)\n        } catch (e) {\n            console.log('Event Import error', e, '\\n')\n        }\n    }\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { getFormFields, getFormValues, getDownloadUrl } from '../../helpers'\nimport { FormBase } from '../../components/FormBase'\nimport { MetadataExportIcon } from '../../components/Icon'\n\nexport class MetaDataExport extends FormBase {\n    static path = '/export/metadata'\n\n    static order = 5\n    static title = i18n.t('Metadata Export')\n    static desc = i18n.t(\n        'Export meta data like data elements and organisation units to the standard DHIS 2 exchange format.'\n    )\n\n    static menuIcon = <MetadataExportIcon />\n    icon = <MetadataExportIcon />\n\n    formWidth = 800\n    formTitle = i18n.t('Meta Data Export')\n    submitLabel = i18n.t('Export')\n\n    fields = getFormFields(['schemas', 'format', 'compression', 'sharing'])\n\n    state = getFormValues([\n        'schemas',\n        'format:.json:json,xml,csv',\n        'compression',\n        'sharing',\n    ])\n\n    onSubmit = async () => {\n        try {\n            const {\n                schemas,\n                format,\n                compression,\n                sharing,\n            } = this.getFormState()\n\n            const endpoint = `metadata`\n            const downloadUrl = getDownloadUrl({\n                format,\n                compression,\n                endpoint,\n                sharing,\n            })\n            const schemaParams = Object.keys(schemas)\n                .filter(s => schemas[s])\n                .map(name => `${name}=true`)\n                .join('&')\n\n            const url = `${downloadUrl}&${schemaParams}`\n            window.location = url\n        } catch (e) {\n            console.log('MetaData Export error', e, '\\n')\n        }\n    }\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { FormBase } from '../../components/FormBase'\nimport { api } from '../../services'\nimport { getFormFields, getFormValues, getDownloadUrl } from '../../helpers'\nimport { MetadataDependencyExportIcon } from '../../components/Icon'\n\nexport class MetaDataDependencyExport extends FormBase {\n    static path = '/export/metadata-dependency'\n\n    static order = 9\n    static title = i18n.t('Metadata Dependency Export')\n    static desc = i18n.t(\n        'Export metadata like data sets and programs including related metadata objects.'\n    )\n\n    static menuIcon = <MetadataDependencyExportIcon />\n    icon = <MetadataDependencyExportIcon />\n\n    formWidth = 800\n    formTitle = i18n.t('Metadata Export with Dependencies')\n    submitLabel = i18n.t('Export')\n\n    fields = getFormFields([\n        'objectType',\n        'objectList',\n        'format',\n        'compression',\n        'sharing',\n    ])\n\n    state = getFormValues([\n        'objectType',\n        'objectList',\n        'format:.json:json,xml',\n        'compression',\n        'sharing',\n    ])\n\n    async componentDidMount() {\n        await this.fetch()\n    }\n\n    async fetch() {\n        try {\n            const objectType = this.state.objectType.selected\n            const { data } = await api.get(\n                `${objectType}?fields=id,displayName&paging=false`\n            )\n            const values = data[objectType].map(({ id, displayName }) => ({\n                value: id,\n                label: displayName,\n            }))\n\n            this.setState({\n                objectList: {\n                    values,\n                    selected: values[0]['value'],\n                },\n            })\n        } catch (e) {\n            console.log('fetch Schemas failed')\n            console.log(e)\n        }\n    }\n\n    onFormUpdate = (name, value) => {\n        if (name === 'objectType') {\n            this.fetch()\n        }\n    }\n\n    onSubmit = async () => {\n        try {\n            const { format, compression, sharing } = this.getFormState()\n\n            const endpoint = `metadata`\n            const url = getDownloadUrl({\n                format,\n                compression,\n                endpoint,\n                sharing,\n            })\n            window.location = url\n        } catch (e) {\n            console.log('MetaDataDependency Export error', e, '\\n')\n        }\n    }\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport PropTypes from 'prop-types'\nimport JSZip from 'jszip'\nimport { getInstance } from 'd2/lib/d2'\nimport moment from 'moment'\nimport { FormBase } from '../../components/FormBase'\nimport {\n    downloadBlob,\n    createBlob,\n    getFormFields,\n    getFormFieldMoreOptions,\n    getFormValues,\n    getParamsFromFormState,\n} from '../../helpers'\nimport { DataIcon } from '../../components/Icon'\n\nexport class DataExport extends FormBase {\n    static path = '/export/data'\n\n    static order = 7\n    static title = i18n.t('Data Export')\n    static desc = i18n.t(\n        'Export data values. This is the regular export function which exports data to the DHIS 2 exchange format called DXF 2.'\n    )\n\n    static menuIcon = <DataIcon />\n    icon = <DataIcon />\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    formWidth = 800\n    formTitle = i18n.t('Data Export')\n    submitLabel = i18n.t('Export')\n\n    fields = [\n        ...getFormFields([\n            'orgUnit',\n            'children',\n            'selectedDataSets',\n            'startDate',\n            'endDate',\n            'format',\n            'compression',\n        ]),\n\n        getFormFieldMoreOptions(),\n\n        ...getFormFields([\n            'includeDeleted',\n            'dataElementIdScheme',\n            'orgUnitIdScheme',\n            'categoryOptionComboIdScheme',\n        ]),\n    ]\n\n    state = getFormValues([\n        'orgUnit',\n        'children',\n        'selectedDataSets',\n        'startDate',\n        'endDate',\n        'format:.json:json,xml,csv',\n        'compression',\n        'includeDeleted',\n        'dataElementIdScheme',\n        'orgUnitIdScheme',\n        'categoryOptionComboIdScheme',\n    ])\n\n    async componentDidMount() {\n        await this.fetch()\n    }\n\n    async fetch() {\n        try {\n            const d2 = await getInstance()\n            const dataSets = await d2.models.dataSet\n                .list({ paging: false, fields: 'id,displayName' })\n                .then(collection => collection.toArray())\n                .then(sets =>\n                    sets.map(dataSet => ({\n                        value: dataSet.id,\n                        label: dataSet.displayName,\n                    }))\n                )\n            this.setState({\n                selectedDataSets: {\n                    selected: [],\n                    value: dataSets,\n                },\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    onSubmit = async () => {\n        try {\n            const {\n                orgUnit,\n                startDate,\n                endDate,\n                format,\n                compression,\n                selectedDataSets,\n            } = this.getFormState()\n\n            if (orgUnit.length === 0 || selectedDataSets.length === 0) {\n                return\n            }\n\n            const append = []\n            append.push(`startDate=${moment(startDate).format('YYYY-MM-DD')}`)\n            append.push(`endDate=${moment(endDate).format('YYYY-MM-DD')}`)\n\n            orgUnit.forEach(v => {\n                append.push(`orgUnit=${v.substr(v.lastIndexOf('/') + 1)}`)\n            })\n\n            selectedDataSets.forEach(v => {\n                append.push(`dataSet=${v}`)\n            })\n\n            const params = getParamsFromFormState(\n                this.getFormState(),\n                [\n                    'dataElementIdScheme',\n                    'orgUnitIdScheme',\n                    'includeDeleted',\n                    'children',\n                    'categoryOptionComboIdScheme',\n                ],\n                append\n            )\n\n            this.setProcessing()\n\n            const xhr = new XMLHttpRequest()\n            const { REACT_APP_DHIS2_BASE_URL } = process.env\n\n            xhr.withCredentials = true\n            xhr.open(\n                'GET',\n                `${REACT_APP_DHIS2_BASE_URL}/api/dataValueSets${format}?${params}`,\n                true\n            )\n            xhr.onreadystatechange = async () => {\n                if (\n                    xhr.readyState === 4 &&\n                    Math.floor(xhr.status / 100) === 2\n                ) {\n                    this.clearProcessing()\n\n                    const filename = `data${format}`\n                    if (compression !== 'none') {\n                        const zip = new JSZip()\n                        zip.file(filename, xhr.responseText)\n                        zip.generateAsync({ type: 'blob' }).then(content => {\n                            const url = URL.createObjectURL(content)\n                            downloadBlob(url, `${filename}${compression}`)\n                        })\n                    } else {\n                        const url = createBlob(\n                            xhr.responseText,\n                            format.substr(1)\n                        )\n                        downloadBlob(url, filename)\n                    }\n                }\n            }\n            xhr.send()\n        } catch (e) {\n            console.log('Data Export error', e, '\\n')\n        }\n    }\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { getInstance } from 'd2/lib/d2'\nimport moment from 'moment/moment'\nimport { FormBase } from '../../components/FormBase'\nimport { api } from '../../services'\nimport { EventIcon } from '../../components/Icon'\nimport {\n    getFormFields,\n    getFormFieldMoreOptions,\n    getFormValues,\n    getParamsFromFormState,\n} from '../../helpers'\n\nexport class EventExport extends FormBase {\n    static path = '/export/event'\n\n    static order = 8\n    static title = i18n.t('Event Export')\n    static desc = i18n.t(\n        'Export event data for programs, stages and tracked entities in the DXF 2 format.'\n    )\n\n    static menuIcon = <EventIcon />\n    icon = <EventIcon />\n\n    formWidth = 800\n    formTitle = i18n.t('Event Export')\n    submitLabel = i18n.t('Export')\n\n    fields = [\n        ...getFormFields([\n            'orgUnit_SingleSelect',\n            'programs',\n            'programStages',\n            'idScheme',\n            'startDate',\n            'endDate',\n            'format',\n            'compression',\n        ]),\n\n        getFormFieldMoreOptions(),\n\n        ...getFormFields(['includeDeleted', 'inclusion']),\n    ]\n\n    state = getFormValues([\n        'orgUnit',\n        'programs',\n        'programStages',\n        'idScheme',\n        'startDate',\n        'endDate',\n        'format:.json:json,xml,csv',\n        'compression',\n        'includeDeleted',\n        'inclusion',\n    ])\n\n    async componentDidMount() {\n        await this.fetchPrograms()\n        await this.fetchOrgUnits()\n    }\n\n    async fetchPrograms() {\n        try {\n            const objectType = 'programs'\n            const params = 'fields=id,displayName&paging=false'\n            const { data } = await api.get(`${objectType}?${params}`)\n            const values = data[objectType].map(o => ({\n                value: o.id,\n                label: o.displayName,\n            }))\n\n            const selected = values[0]['value']\n            this.setState(\n                {\n                    programs: { values, selected },\n                },\n                () => this.fetchProgramStages(selected)\n            )\n        } catch (e) {\n            console.log('fetch Programs failed')\n            console.log(e)\n        }\n    }\n\n    async fetchOrgUnits() {\n        try {\n            const d2 = await getInstance()\n            const orgUnitTree = await d2.models.organisationUnits\n                .list({\n                    level: 1,\n                    paging: false,\n                    fields: 'id,path,displayName,children::isNotEmpty',\n                })\n                .then(root => root.toArray()[0])\n\n            this.setState({\n                orgUnit: {\n                    selected: [],\n                    value: orgUnitTree,\n                },\n            })\n        } catch (e) {\n            console.log('fetch Programs failed')\n            console.log(e)\n        }\n    }\n\n    async fetchProgramStages(id) {\n        try {\n            const {\n                data: { programStages },\n            } = await api.get(\n                `programs/${id}.json?fields=id,displayName,programStages[id,displayName]`\n            )\n            const values = programStages.map(({ id, displayName }) => ({\n                value: id,\n                label: displayName,\n            }))\n\n            values.unshift({\n                value: -1,\n                label: i18n.t('[ All program stages]'),\n            })\n            const selected = values[0]['value']\n            this.setState({\n                programStages: { values, selected },\n            })\n        } catch (e) {\n            console.log('fetch ProgramStages failed', id)\n            console.log(e)\n        }\n    }\n\n    onFormUpdate = (name, value) => {\n        if (name === 'programs') {\n            this.fetchProgramStages(value)\n        }\n    }\n\n    onSubmit = () => {\n        const {\n            orgUnit,\n            startDate,\n            endDate,\n            programStages,\n            inclusion,\n            format,\n            compression,\n        } = this.getFormState()\n\n        let attachment = `events${format}`\n        if (compression !== 'none') {\n            attachment += compression\n        }\n\n        const append = []\n\n        if (programStages !== -1) {\n            append.push(`programStage=${programStages}`)\n        }\n\n        if (orgUnit.length > 0) {\n            const path = orgUnit[0]\n            const orgUnitId = path.substr(path.lastIndexOf('/') + 1)\n            append.push(`orgUnit=${orgUnitId}`)\n        }\n\n        append.push('links=false')\n        append.push('skipPaging=true')\n        append.push(`attachment=${attachment}`)\n        append.push('startDate=' + moment(startDate).format('YYYY-MM-DD'))\n        append.push('endDate=' + moment(endDate).format('YYYY-MM-DD'))\n        append.push(`ouMode=${inclusion.toUpperCase()}`)\n        append.push(`format=${format.substr(1)}`)\n\n        let path = `events${format}`\n        if (compression !== 'none') {\n            path += `${compression}`\n        }\n\n        const params = getParamsFromFormState(\n            this.getFormState(),\n            ['programs', 'includeDeleted', 'idScheme'],\n            append\n        )\n\n        window.location = api.url(path) + '?' + params\n    }\n}\n","import {\n    MetaDataImport,\n    MetaDataExport,\n    DataImport,\n    DataExport,\n    GMLImport,\n    EventImport,\n    EventExport,\n    MetaDataDependencyExport,\n} from '../../pages'\n\nconst pages = [\n    MetaDataImport,\n    DataImport,\n    EventImport,\n    GMLImport,\n    MetaDataExport,\n    DataExport,\n    EventExport,\n    MetaDataDependencyExport,\n]\n\nconst list = pages.map(p => ({\n    path: p.path,\n    order: p.order,\n    menuIcon: p.menuIcon,\n    title: p.title,\n    description: p.desc,\n}))\n\nexport default list\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { withRouter } from 'react-router-dom'\nimport { LogoIcon } from '../../components/Icon'\nimport s from './styles.module.css'\nimport list from './list'\n\nconst Item = ({ path, title, description, menuIcon, onClick }) => (\n    <div className={s.item} onClick={() => onClick(path)}>\n        <div className={s.head}>\n            <div className={s.icon}>{menuIcon}</div>\n            <div className={s.title}>{title}</div>\n        </div>\n        <div className={s.description}>{description}</div>\n    </div>\n)\n\nclass DumbHome extends React.Component {\n    static path = '/'\n\n    onClick = path => this.props.history.push(path)\n\n    render() {\n        return (\n            <div className={s.container}>\n                <div className={s.logo}>\n                    <LogoIcon width={48} height={48} />\n                </div>\n                <h2 className={s.heading}>{i18n.t('Import / Export')}</h2>\n                <div className={s.purpose}>\n                    {i18n.t('Import or Export DHIS2 data.')}\n                </div>\n                <div className={s.list}>\n                    {list.map((item, index) => (\n                        <Item\n                            key={`page-item-${index}`}\n                            {...item}\n                            onClick={this.onClick}\n                        />\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport const Home = withRouter(DumbHome)\n","import {\n    MetaDataImport,\n    MetaDataExport,\n    DataImport,\n    DataExport,\n    GMLImport,\n    EventImport,\n    EventExport,\n    MetaDataDependencyExport,\n} from '../../pages'\n\nfunction menu(list) {\n    return list.map(i => ({\n        to: i.path,\n        text: i.title,\n        icon: i.menuIcon,\n    }))\n}\n\nexport const importLinks = menu([\n    MetaDataImport,\n    DataImport,\n    EventImport,\n    GMLImport,\n])\n\nexport const exportLinks = menu([\n    MetaDataExport,\n    DataExport,\n    EventExport,\n    MetaDataDependencyExport,\n])\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { NavLink } from 'react-router-dom'\nimport { ArrowUpIcon, ArrowDownIcon } from '../Icon'\nimport { importLinks, exportLinks } from './links'\nimport s from './styles.module.css'\n\nfunction Heading({ children }) {\n    return <div className={s.heading}>{children}</div>\n}\n\nfunction Contents({ type, list }) {\n    return (\n        <div className={s.list}>\n            {list.map(({ to, text, icon }) => (\n                <NavLink\n                    to={to}\n                    key={`${type}-${to}`}\n                    className={s.link}\n                    activeClassName={s.active}\n                >\n                    <div className={s.item}>\n                        {icon}\n                        <div className={s.text}>{text}</div>\n                    </div>\n                </NavLink>\n            ))}\n        </div>\n    )\n}\n\nexport function SidePanel() {\n    return (\n        <div className={s.container}>\n            <Heading>\n                <ArrowDownIcon />\n                <span>{i18n.t('Import')}</span>\n            </Heading>\n            <Contents type=\"import\" list={importLinks} />\n\n            <Heading>\n                <ArrowUpIcon />\n                <span>{i18n.t('Export')}</span>\n            </Heading>\n            <Contents type=\"export\" list={exportLinks} />\n        </div>\n    )\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport moment from 'moment/moment'\nimport { eventEmitter } from '../../services'\nimport s from './styles.module.css'\n\nconst iconProps = {\n    width: 32,\n    height: 32,\n    fill: '#fff',\n}\n\nfunction ArrowIcon({ children, onClick }) {\n    return (\n        <svg viewBox=\"0 0 24 24\" {...iconProps} onClick={onClick}>\n            <g id=\"Bounding_Boxes\">\n                <g id=\"ui_x5F_spec_x5F_header_copy_3\" />\n                <path fill=\"none\" d=\"M0,0h24v24H0V0z\" />\n            </g>\n            <g id=\"Outline\">\n                <g id=\"ui_x5F_spec_x5F_header\" />\n                {children}\n            </g>\n        </svg>\n    )\n}\n\nfunction ArrowUpIcon({ onClick }) {\n    return (\n        <ArrowIcon onClick={onClick}>\n            <path d=\"M7.41,15.41L12,10.83l4.59,4.58L18,14l-6-6l-6,6L7.41,15.41z\" />\n        </ArrowIcon>\n    )\n}\nfunction ArrowDownIcon({ onClick }) {\n    return (\n        <ArrowIcon onClick={onClick}>\n            <path d=\"M7.41,8.59L12,13.17l4.59-4.58L18,10l-6,6l-6-6L7.41,8.59z\" />\n        </ArrowIcon>\n    )\n}\n\nfunction Message({ date, type, text }) {\n    return (\n        <div className={s.message}>\n            <div className={s.date}>{date || '--:--'}</div>\n            <div className={s.type}>{type}</div>\n            <div className={s.contents}>\n                <div className={s.text}>{text}</div>\n            </div>\n        </div>\n    )\n}\n\nexport class Logger extends React.Component {\n    state = {\n        open: false,\n        height: 250,\n        list: [],\n    }\n\n    componentDidMount() {\n        this.appContent = document.getElementById('import-export-app-content')\n        eventEmitter.on('log', this.onMessage)\n        eventEmitter.on('log.open', this.onOpen)\n        eventEmitter.on('log.close', this.onClose)\n    }\n\n    componentWillUnmount() {\n        this.appContent = null\n        this.elmMessages = null\n        eventEmitter.off('log', this.onMessage)\n        eventEmitter.off('log.open', this.onOpen)\n        eventEmitter.off('log.close', this.onClose)\n    }\n\n    onMessage = msg => {\n        const { list } = this.state\n        if (list.filter(m => m.id === msg.id).length > 0) {\n            return\n        }\n\n        const updated = list.slice(0)\n        updated.push(msg)\n        this.setState({ list: updated }, this.scrollToBottom)\n    }\n\n    scrollToBottom() {\n        if (!this.elmMessages) {\n            return\n        }\n\n        this.elmMessages.scrollTop = this.elmMessages.scrollHeight\n    }\n\n    onOpen = () => {\n        this.clearSelection()\n        const { height } = this.state\n        this.setState({ open: true, height: height > 0 ? height : 250 }, () => {\n            const { height } = this.state\n            this.elmMessages.style.height = `${height}px`\n            this.appContent.style.height = `calc(100vh - ${height}px)`\n            this.scrollToBottom()\n        })\n    }\n\n    onClose = () => {\n        this.setState({ open: false })\n        this.appContent.style.height = '100vh'\n    }\n\n    clearSelection = () => {\n        if (document.selection) {\n            document.selection.empty()\n        } else {\n            window.getSelection().removeAllRanges()\n        }\n    }\n\n    onDragStart = () => this.clearSelection()\n    onDragEnd = () => this.clearSelection()\n    onClick = () => this.clearSelection()\n\n    onDrag = evt => {\n        const { screenY } = evt\n\n        if (screenY > 0) {\n            const height = window.innerHeight - screenY + 80\n            this.elmMessages.style.height = `${height}px`\n            this.appContent.style.height = `calc(100vh - ${height}px)`\n\n            if (!this.state.open) {\n                this.setState({\n                    height,\n                    open: true,\n                })\n                return\n            }\n\n            this.setState({ height })\n        }\n    }\n\n    onDoubleClick = () => {\n        if (!this.state.open) {\n            this.onOpen()\n        } else {\n            this.setState({ open: false })\n        }\n    }\n\n    headerTitle() {\n        return (\n            <div className={s.title}>\n                <span className={s.upper}>{i18n.t('Logger')}</span>\n                <span>\n                    {i18n.t(\n                        'view messages received on using import/export forms.'\n                    )}\n                </span>\n            </div>\n        )\n    }\n\n    headerActions() {\n        return (\n            <div className={s.actions}>\n                {this.state.open ? (\n                    <ArrowDownIcon onClick={this.onClose} />\n                ) : (\n                    <ArrowUpIcon onClick={this.onOpen} />\n                )}\n            </div>\n        )\n    }\n\n    header() {\n        return (\n            <div\n                className={s.nav}\n                onClick={this.onClick}\n                onDrag={this.onDrag}\n                onDragStart={this.onDragStart}\n                onDragEnd={this.onDragEnd}\n                onDoubleClick={this.onDoubleClick}\n            >\n                {this.headerTitle()}\n                {this.headerActions()}\n            </div>\n        )\n    }\n\n    /**\n     *\n     * @param {*} msg the log message\n     * @param {*} prevDateHH previous message moment-date formatted with hrs (used to truncate)\n     * @param {*} prevDate previous message moment-date\n     * @param {*} truncate whether to truncate the timestamp, so that the returned\n     * date is formatted without the parts of previous date (upto mm:ss)\n     */\n\n    // eslint-disable-next-line max-params\n    getDate(msg, prevDateHH, prevDate, truncate = false) {\n        if (!msg.d) {\n            return null\n        }\n        let date = moment(msg.d).format('YYYY-MM-DD HH:mm:ss')\n\n        if (truncate && moment(msg.d).format('YYYY-MM-DD HH') === prevDateHH) {\n            date = moment(msg.d).format('mm:ss')\n        } else if (\n            truncate &&\n            moment(msg.d).format('YYYY-MM-DD') === prevDate\n        ) {\n            date = moment(msg.d).format('HH:mm:ss')\n        }\n\n        return date\n    }\n\n    messages() {\n        let prevType, prevDate, prevDateHH\n        prevType = prevDate = prevDateHH = ''\n\n        return this.state.list.map(msg => {\n            const type = msg.type === prevType ? '' : msg.type\n            const date = this.getDate(msg, prevDateHH, prevDate)\n\n            prevType = msg.type\n            prevDate = moment(msg.d).format('YYYY-MM-DD')\n            prevDateHH = moment(msg.d).format('YYYY-MM-DD HH')\n            return (\n                <Message\n                    key={`msg-${msg.id}`}\n                    date={date}\n                    type={type}\n                    text={msg.text}\n                />\n            )\n        })\n    }\n\n    contents() {\n        return (\n            <div\n                className={s.messages}\n                ref={c => (this.elmMessages = c)}\n                style={{\n                    display: this.state.open ? 'block' : 'none',\n                }}\n            >\n                {this.state.open && this.messages()}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div id=\"import-export-logger\" className={s.container}>\n                {this.header()}\n                {this.contents()}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar'\nimport i18n from '@dhis2/d2-i18n'\nimport { SidePanel, Logger } from '../../components'\nimport s from './styles.module.css'\n\nexport default class Template extends React.Component {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <HeaderBar appName={i18n.t('Import/Export')} />\n                <div className={s.container}>\n                    <SidePanel />\n                    <div id=\"import-export-app-content\" className={s.content}>\n                        {this.props.children}\n                    </div>\n                    <Logger />\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import 'typeface-roboto'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Route, withRouter } from 'react-router-dom'\nimport moment from 'moment'\nimport { getInstance, config } from 'd2/lib/d2'\nimport i18n from '@dhis2/d2-i18n'\nimport { Loading } from './components'\nimport { setUser, clearUser } from './reducers'\nimport Template from './pages/Template'\nimport * as pages from './pages'\n\nconfig.i18n.strings.add('settings')\nconfig.i18n.strings.add('profile')\nconfig.i18n.strings.add('account')\nconfig.i18n.strings.add('help')\nconfig.i18n.strings.add('log_out')\nconfig.i18n.strings.add('about_dhis2')\nconfig.i18n.strings.add('manage_my_apps')\nconfig.i18n.strings.add('app_search_placeholder')\nconfig.i18n.strings.add('no_results_found')\nconfig.i18n.strings.add('interpretations')\nconfig.i18n.strings.add('messages')\n\nfunction isLangRTL(code) {\n    const langs = ['ar', 'fa', 'ur']\n    const prefixed = langs.map(c => `${c}-`)\n    return (\n        langs.includes(code) ||\n        prefixed.filter(c => code.startsWith(c)).length > 0\n    )\n}\n\nfunction changeLocale(locale) {\n    moment.locale(locale)\n    i18n.changeLanguage(locale)\n    document.documentElement.setAttribute(\n        'dir',\n        isLangRTL(locale) ? 'rtl' : 'ltr'\n    )\n}\n\nclass App extends React.Component {\n    static childContextTypes = {\n        d2: PropTypes.object,\n    }\n\n    state = {\n        d2: null,\n        loaded: false,\n    }\n\n    async componentDidMount() {\n        try {\n            const d2 = await getInstance()\n            const lang = d2.currentUser.userSettings.settings.keyUiLocale\n            // const lang = 'ur'\n            changeLocale(lang)\n            this.props.setUser(d2.currentUser)\n            this.setState({\n                d2,\n                loaded: true,\n            })\n        } catch (e) {\n            console.log('/api/me error')\n            console.log(e)\n            this.props.clearUser()\n            this.setState({\n                loaded: true,\n            })\n        }\n    }\n\n    getChildContext() {\n        return {\n            d2: this.state.d2 || null,\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <Loading />\n        }\n\n        const { user } = this.props\n        if (!user) {\n            return <div>{i18n.t('user is not logged in')}</div>\n        }\n\n        return (\n            <Template>\n                {Object.keys(pages).map(k => {\n                    const page = pages[k]\n                    return (\n                        <Route\n                            key={`page-${k}`}\n                            path={page.path}\n                            exact={true}\n                            component={page}\n                        />\n                    )\n                })}\n            </Template>\n        )\n    }\n}\n\nexport default withRouter(\n    connect(\n        ({ user }) => ({ user }),\n        { setUser, clearUser }\n    )(App)\n)\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nexport * from './reducers/user/actions'\n\nexport const store = createStore(\n    reducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport { MuiThemeProvider } from 'material-ui'\nimport lightBaseTheme from 'material-ui/styles/baseThemes/lightBaseTheme'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport { init } from 'd2/lib/d2'\nimport './locales'\nimport './index.css'\nimport App from './App'\nimport { store } from './store'\nimport * as serviceWorker from './serviceWorker'\n\n/**\n * Initialize d2\n */\n\nconst { REACT_APP_DHIS2_BASE_URL } = process.env\n\ninit({\n    baseUrl: `${REACT_APP_DHIS2_BASE_URL}/api/`,\n    headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n    },\n})\n\n/**\n * Initialize material ui theme\n */\n\nlightBaseTheme.palette.primary1Color = '#4c708c'\nlightBaseTheme.palette.primary2Color = '#4c708c'\nlightBaseTheme.palette.primary3Color = '#4c708c'\nlightBaseTheme.palette.pickerHeaderColor = '#4c708c'\n\nconst muiTheme = getMuiTheme(lightBaseTheme)\n\n/**\n * Mount app\n */\n\nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider muiTheme={muiTheme}>\n            <HashRouter>\n                <App />\n            </HashRouter>\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('root')\n)\n\n/**\n * If you want your app to work offline and load faster, you can change\n * unregister() to register() below. Note this comes with some pitfalls.\n * Learn more about service workers: https://bit.ly/CRA-PWA\n */\n\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2o95B\",\"formControl\":\"styles_formControl__2tT31\",\"formLabel\":\"styles_formLabel__29XJ3\",\"group\":\"styles_group__15UYy\",\"schema\":\"styles_schema__24EKT\",\"controls\":\"styles_controls__1e1tx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1Fkct\",\"head\":\"styles_head__3P0YL\",\"title\":\"styles_title__3PNGz\",\"contents\":\"styles_contents__O_uPZ\",\"buttons\":\"styles_buttons__3tEyI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"styles_formControl__1be_T\",\"formLabel\":\"styles_formLabel__2VWYH\",\"button\":\"styles_button__pLI0t\",\"hiddenFileInput\":\"styles_hiddenFileInput__18HbY\",\"helpText\":\"styles_helpText__1WvGI\"};"],"sourceRoot":""}