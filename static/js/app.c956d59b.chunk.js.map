{"version":3,"sources":["D2App/components/JobOverview/JobOverview.module.css","D2App/components/Schemas/Schemas.module.css","D2App/App.module.css","D2App/components/FormField/FormField.module.css","D2App/components/ImportButtonStrip/ImportButtonStrip.module.css","D2App/components/JobOverview/MenuLabel/MenuLabel.module.css","D2App/components/JobSummary/JobSummary.module.css","D2App/components/JobSummary/Summary/Summary.module.css","D2App/components/MoreOptions/MoreOptions.module.css","D2App/components/OrgUnitTree/OrgUnitTreeField.module.css","D2App/components/Page/Page.module.css","D2App/components/ProgramStages/ProgramStages.module.css","D2App/components/RadioGroup/RadioGroup.module.css","D2App/pages/JobOverview/JobOverview.module.css","D2App/components/Select/Select.module.css","D2App/components/Sidebar/Sidebar.module.css","D2App/components/Sidebar/MenuSectionHeader.module.css","D2App/components/ResourcePicker/ResourcePicker.module.css","D2App/components/BasicOptions/BasicOptions.module.css","D2App/components/ElementSchemes/SchemeContainer.module.css","D2App/components/StyledField/StyledField.module.css","D2App/locales/index.js","D2App/contexts/User.js","D2App/contexts/Task.js","D2App/components/Icon/Icon.js","D2App/utils/tasks.js","D2App/hooks/useTasks.js","D2App/hooks/useUser.js","D2App/hooks/useProgramStages.js","D2App/hooks/useClassKeys.js","D2App/utils/mime.js","D2App/utils/xhr.js","D2App/utils/helper.js","D2App/utils/options.js","D2App/components/ElementSchemes/DataElementIdScheme.js","D2App/components/DatePicker/DatePicker.js","D2App/components/DatePicker/DatePickerField.js","D2App/components/ElementSchemes/EventIdScheme.js","D2App/components/FileUpload/FileUpload.js","D2App/components/FormAlerts/FormAlerts.js","D2App/components/FormField/FormField.js","D2App/components/ElementSchemes/IdScheme.js","D2App/components/ImportButtonStrip/ImportButtonStrip.js","D2App/components/JobOverview/helper.js","D2App/components/JobOverview/MenuLabel/MenuLabel.js","D2App/components/JobOverview/ChipContainer.js","D2App/components/JobOverview/JobOverview.js","D2App/components/JobSummary/Events/Events.js","D2App/components/JobSummary/helper.js","D2App/components/JobSummary/SingleStatusTable/SingleStatusTable.js","D2App/components/JobSummary/SingleSummary/SingleSummary.js","D2App/components/JobSummary/TypeCount/TypeCount.js","D2App/components/JobSummary/Messages/Messages.js","D2App/components/JobSummary/TypeReportSummary/TypeReportSummary.js","D2App/components/JobSummary/Summary/Summary.js","D2App/components/JobSummary/Details/Details.js","D2App/components/JobSummary/JobSummary.js","D2App/components/JobSummary/MiniJobSummary/MiniJobSummary.js","D2App/components/MoreOptions/MoreOptions.js","D2App/components/ElementSchemes/OrgUnitIdScheme.js","D2App/components/OrgUnitTree/OrgUnitTreeField.js","D2App/components/Page/Page.js","D2App/components/ProgramStages/ProgramStages.js","D2App/components/RadioGroup/RadioGroup.js","D2App/components/RadioGroup/RadioGroupField.js","D2App/components/Router/ScrollToTop.js","D2App/components/Inputs/FileUpload.js","D2App/components/Inputs/ImportButtonStrip.js","D2App/components/Inputs/FormAlerts.js","D2App/components/Inputs/Format.js","D2App/components/Inputs/FirstRowIsHeader.js","D2App/components/Inputs/ClassKey.js","D2App/components/Inputs/Strategy.js","D2App/components/Inputs/PreheatCache.js","D2App/components/Inputs/SkipAudit.js","D2App/components/Inputs/SkipExistingCheck.js","D2App/components/Inputs/Identifier.js","D2App/components/Inputs/ImportReportMode.js","D2App/components/Inputs/PreheatMode.js","D2App/components/Inputs/ImportStrategy.js","D2App/components/Inputs/AtomicMode.js","D2App/components/Inputs/MergeMode.js","D2App/components/Inputs/FlushMode.js","D2App/components/Inputs/InclusionStrategy.js","D2App/components/Inputs/SkipSharing.js","D2App/components/Inputs/SkipValidation.js","D2App/components/Inputs/IsAsync.js","D2App/components/Inputs/OrgUnitTree.js","D2App/components/ResourcePicker/resourceTypes.js","D2App/components/Inputs/DataSetPicker.js","D2App/components/Inputs/ProgramPicker.js","D2App/components/Inputs/IncludeChildren.js","D2App/components/Inputs/IncludeDeleted.js","D2App/components/Inputs/Compression.js","D2App/components/Inputs/Inclusion.js","D2App/components/Inputs/StartDate.js","D2App/components/Inputs/EndDate.js","D2App/components/Inputs/ExportButton.js","D2App/components/Inputs/ProgramStages.js","D2App/components/Schemas/SchemasField.js","D2App/components/Inputs/Schemas.js","D2App/components/Inputs/ObjectType.js","D2App/components/Inputs/Objects.js","D2App/hooks/useObjects.js","D2App/components/Inputs/DataElementIdScheme.js","D2App/components/Inputs/EventIdScheme.js","D2App/components/Inputs/IdScheme.js","D2App/components/Inputs/OrgUnitIdScheme.js","D2App/components/WithAuthority/predicates.js","D2App/components/Inputs/OrgUnitMode.js","D2App/components/Inputs/TEITypeFilter.js","D2App/components/Inputs/ProgramStatus.js","D2App/components/Inputs/FollowUpStatus.js","D2App/components/Inputs/ProgramStartDate.js","D2App/components/Inputs/ProgramEndDate.js","D2App/components/Inputs/TETypePicker.js","D2App/components/Inputs/LastUpdatedFilter.js","D2App/components/Inputs/LastUpdatedStartDate.js","D2App/components/Inputs/LastUpdatedEndDate.js","D2App/components/Duration/DurationField.js","D2App/components/Inputs/LastUpdatedDuration.js","D2App/components/Inputs/AssignedUserMode.js","D2App/components/Inputs/UserPicker.js","D2App/components/Inputs/IncludeAllAttributes.js","D2App/components/Inputs/Dates.js","D2App/utils/final-form.js","D2App/pages/MetadataImport/form-helper.js","D2App/pages/MetadataImport/MetadataImport.js","D2App/pages/MetadataExport/MetadataExport.js","D2App/pages/MetadataExport/form-helper.js","D2App/pages/MetadataDependencyExport/MetadataDependencyExport.js","D2App/pages/MetadataDependencyExport/form-helper.js","D2App/pages/JobOverview/JobOverview.js","D2App/pages/GMLImport/GMLImport.js","D2App/pages/GMLImport/form-helper.js","D2App/pages/EventImport/EventImport.js","D2App/pages/EventImport/form-helper.js","D2App/pages/EventExport/form-helper.js","D2App/pages/EventExport/EventExport.js","D2App/pages/DataImport/DataImport.js","D2App/pages/DataImport/form-helper.js","D2App/pages/DataExport/form-helper.js","D2App/pages/DataExport/DataExport.js","D2App/pages/TEIExport/form-helper.js","D2App/pages/TEIExport/TEIExport.js","D2App/pages/TEIImport/form-helper.js","D2App/pages/TEIImport/TEIImport.js","D2App/components/Router/Router.js","D2App/components/Schemas/helper.js","D2App/components/Schemas/SchemaGroup.js","D2App/components/Schemas/Schemas.js","D2App/components/Select/Select.js","D2App/components/Select/SelectField.js","D2App/components/Sidebar/MenuSectionHeader.js","D2App/components/Sidebar/ImportMenuSectionHeader.js","D2App/components/Sidebar/ExportMenuSectionHeader.js","D2App/components/Sidebar/Sidebar.js","D2App/components/Switch/Switch.js","D2App/components/WithAuthority/WithAuthority.js","D2App/components/ResourcePicker/queries.js","D2App/components/ResourcePicker/ResourcePicker.js","D2App/components/ResourcePicker/ResourcePickerField.js","D2App/components/BasicOptions/BasicOptions.js","D2App/components/ElementSchemes/SchemeContainer.js","D2App/components/StyledField/StyledField.js","D2App/App.js"],"names":["module","exports","i18n","addResources","arTranslations","enTranslations","esTranslations","frTranslations","idTranslations","loTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","UserContext","React","createContext","undefined","TaskContext","getNewestTask","tasks","Object","keys","map","k","sort","a","b","created","createStyle","width","height","display","fill","color","userSelect","MetadataImportIcon","viewBox","style","data-test","d","MetadataExportIcon","MetadataDependencyExportIcon","DataIcon","EventIcon","GMLIcon","TasksIcon","TEIIcon","ImportIcon","ExportIcon","categoryTypes","key","importType","icon","label","t","allCategories","jobEventQuery","events","resource","id","type","taskId","jobSummaryQuery","summary","defaultTasks","data","event","gml","metadata","tei","defaultJobOverview","activeTypes","selectedJob","useTasks","engine","useDataEngine","setTasks","useState","jobOverview","setJobOverview","fetchSummary","async","task","newTask","error","query","variables","console","status","createFetchSummary","fetchEvents","completed","length","newEvents","filter","e","some","te","uid","level","text","message","date","Date","time","errorEvent","find","reverse","lastUpdated","setTimeout","createFetchEvents","addTask","entry","createAddTask","updateJobOverview","val","createUpdateJobOverview","userQuery","user","programStageQuery","fields","params","paging","ALL_LABEL","classKeyQuery","mapping","json","xml","csv","adx","pdf","getMimeType","format","onReadyStateChange","xhr","onResponse","onError","Math","floor","readyState","idAndMsg","extractIdAndMessage","JSON","parse","responseText","typeReports","response","Array","isArray","objectReports","errorReports","msg","onProgress","setProgress","evt","lengthComputable","percentComplete","parseInt","loaded","total","max","pathToId","path","pathSplit","split","jsDateToISO8601","getFullYear","toString","getMonth","padStart","getDate","jsDateToString","getHours","getMinutes","getSeconds","compressionToName","compression","blobType","createBlob","contents","URL","createObjectURL","Blob","downloadBlob","url","filename","link","document","createElement","href","setAttribute","body","appendChild","click","remove","fetchAttributes","apiBaseUrl","attribute","filters","fetch","credentials","then","resp","Promise","resolve","catch","Error","statusText","reject","fetcher","attributes","displayName","value","genericErrorMessage","errorGenerator","timestamp","getTime","critical","uploadFile","file","isAsync","addEntry","errF","upload","XMLHttpRequest","contentType","withCredentials","open","setRequestHeader","name","onreadystatechange","onprogress","getUploadXHR","ev","target","e2","send","locationAssign","window","location","getPrevJobDetails","job","jobDetails","getInitialBoolValue","prevValue","defaultValue","optionPropType","PropTypes","exact","string","isRequired","DataElementIdScheme","arrayOf","dataElementIdSchemeOptions","dataTest","baseUrl","useConfig","loading","setLoading","schemes","setSchemes","setError","useEffect","validationText","options","StyledField","component","SingleSelectFieldFF","DatePicker","onChange","inputWidth","Field","ReactFinalForm","OPTIONAL_DATE_VALIDATOR","DATE_VALIDATOR","DATE_BEFORE_VALIDATOR","date1","date2","DATE_AFTER_VALIDATOR","Wrapper","input","meta","inputName","rest","DatePickerField","validator","validate","EventIdScheme","eventIdSchemeOptions","FileUpload","initialValue","required","helpText","accept","FormField","FileInputFieldFF","FormAlerts","alerts","bars","setBars","newBars","warning","info","success","duration","children","className","styles","container","IdScheme","idSchemeOptions","err","dataElementAttributes","organisationUnitAttributes","sharedAttributes","reduce","shared","collection","attributeFoundIn","f","DRYRUN_HELPTEXT","ImportButtonStrip","dryRunDataTest","importDataTest","form","primary","onClick","change","dryRun","secondary","categoryTypesObj","acc","cur","MenuLabel","files","substring","ChipContainer","chips","JobOverview","setActiveTypes","setSelectedJob","useContext","allTasks","flat","createdAt","filteredTasks","includes","items","Menu","onChipClick","selected","active","JobSummary","showFileDetails","showJobDetails","to","pathname","Events","i","statsPropTypeObj","deleted","number","ignored","updated","imported","getClassName","c","s","SingleStatusTable","property","description","SingleSummary","importCount","conflicts","object","TypeCount","stats","Messages","messages","m","TypeReportSummary","overviewStats","extractStats","responseType","Summary","report","allStats","allMessages","forEach","klass","r","push","mainKlass","errorProperty","typeReportParse","typeReportSummary","overviewSummary","allSummaries","importSummaries","valueToString","File","v","join","Details","details","Header","header","title","taskDetails","Tags","tags","positive","neutral","negative","bold","MiniJobSummary","MoreOptions","noBottomMargin","initiallyVisible","hidden","setHidden","cx","chevronHidden","chevronVisible","defaultProps","OrgUnitIdScheme","orgUnitIdSchemeOptions","rootQuery","roots","SINGLE_ORG_VALIDATOR","selectedOrgUnits","SINGLE_EXACT_ORG_VALIDATOR","multiSelect","useDataQuery","wrapper","organisationUnits","ou","singleSelection","touched","pristine","OrgUnitTreeField","Page","desc","summaryTask","showFullSummaryTask","limitWidth","loadingEl","amount","limitedWidth","preBody","content","translucent","ProgramStages","selectedProgram","programStagesLoading","programStagesError","programStagesValidationText","programStages","program","setSelected","stages","setStages","onComplete","formattedList","useProgramStages","RadioGroup","checked","setValue","vertical","horizontal","o","help","RadioGroupField","ScrollToTop","history","useHistory","unlisten","listen","getElementsByClassName","scrollTo","propTypes","node","LABEL","VALIDATOR","formatOptions","formatNoCsvOptions","formatAdxPdfOptions","formatJsonpOptions","defaultFormatOption","IMPORT_LABEL","EXPORT_LABEL","typeToLabel","Format","availableFormats","SHORT_LABEL","HELPTEXT","FirstRowIsHeader","show","CheckboxFieldFF","ClassKey","classKeysLoading","classKeysError","classKeysValidationText","classKeys","setClassKeys","classData","useClassKeys","filterable","strategyOptions","nsSeparator","defaultStrategyOption","DELETE_WARNING_TITLE","DELETE_WARNING","Strategy","PreheatCache","SkipAudit","SkipExistingCheck","identifierOptions","defaultIdentifierOption","Identifier","importReportModeOptions","defaultImportReportModeOption","ImportReportMode","preheatModeOptions","defaultPreheatModeOption","PreheatMode","importStrategyOptions","defaultImportStrategyOption","ImportStrategy","atomicModeOptions","defaultAtomicModeOption","AtomicMode","mergeModeOptions","defaultMergeModeOption","MergeMode","flushModeOptions","defaultFlushModeOption","FlushMode","inclusionStrategyOptions","defaultInclusionStrategyOption","InclusionStrategy","SkipSharing","SkipValidation","IsAsync","OrgUnitTree","orgValidator","composeValidators","hasValue","resourceTypes","FILTERLABEL","SELECTEDLABEL","ERRORMESSAGE","RESOURCETYPE","SINGLE_DATASET_VALIDATOR","selectedDataSets","SINGLE_EXACT_DATASET_VALIDATOR","DataSetPicker","dataSetValidator","ResourcePickerField","resourceType","errorMessage","listName","filterLabel","selectedLabel","SINGLE_PROGRAM_VALIDATOR","selectedPrograms","SINGLE_EXACT_PROGRAM_VALIDATOR","ProgramPicker","programValidator","maxWidth","autoSelectFirst","IncludeChildren","IncludeDeleted","compressionOptions","defaultCompressionOption","Compression","inclusionOptions","defaultInclusionOption","Inclusion","StartDate","EndDate","ExportButton","marginBottom","programStage","props","setCheckedSchemas","SchemasField","checkedSchemas","EXCLUDE_SCHEMAS","Set","Schemas","excludeSchemas","checkedByDefault","objectTypeOptions","defaultObjectTypeOption","ObjectType","filled","initialFocus","Objects","objectType","objectsLoading","objectsError","objectsValidationText","objects","setObjects","useObjects","defaultDataElementIdSchemeOption","defaultEventIdSchemeOption","defaultIdSchemeOption","defaultOrgUnitIdSchemeOption","hasAuthorityToSkipAudit","authorities","orgUnitSelectionModeOptions","defaultOrgUnitSelectionModeOption","OrgUnitMode","teiTypeFilterOptions","defaultTEITypeFilterOption","TEITypeFilter","programStatusOptions","defaultProgramStatusOption","ProgramStatus","followUpStatusOptions","defaultFollowUpStatusOption","FollowUpStatus","ProgramStartDate","ProgramEndDate","SINGLE_TETYPE_VALIDATOR","selectedTypes","SINGLE_EXACT_TETYPE_VALIDATOR","TETypePicker","teTypeValidator","withActions","lastUpdatedFilterOptions","defaultLastUpdatedFilterOption","LastUpdatedFilter","LastUpdatedStartDate","LastUpdatedEndDate","durationRegex","formatHelpText","placeholder","DurationField","match","LastUpdatedDuration","assignedUserModeOptions","defaultAssignedUserModeOption","AssignedUserMode","SINGLE_USER_VALIDATOR","selectedUsers","SINGLE_EXACT_USER_VALIDATOR","UserPicker","userValidator","IncludeAllAttributes","Dates","marginLeft","FORM_ERROR","jobStartedMessage","values","classKey","Form","PAGE_NAME","PAGE_DESCRIPTION","PAGE_ICON","MetadataImport","metadataTasks","useLocation","prevJobDetails","initialValues","identifier","importReportMode","preheatMode","importStrategy","firstRowIsHeader","atomicMode","mergeMode","flushMode","inclusionStrategy","skipSharing","skipValidation","createInitialValues","progress","setShowFullSummaryTask","onSubmit","formErrors","onImport","subscription","submitError","render","handleSubmit","BasicOptions","MetadataExport","endpointExtension","schemaParams","downloadUrlParams","onExport","MetadataDependencyExport","endpoint","types","GMLImport","gmlTasks","EventImport","eventTasks","dataElementIdScheme","orgUnitIdScheme","eventIdScheme","idScheme","SchemeContainer","startDate","endDate","today","includeDeleted","inclusion","EventExport","DataImport","dataTasks","strategy","preheatCache","skipAudit","skipExistingCheck","WithAuthority","pred","includeChildren","valuesToParams","Accept","dataStr","downloadUrl","errors","DataExport","selectedTETypes","ouMode","includeAllAttributes","assignedUserMode","teiTypeFilter","programStatus","followUpStatus","programStartDate","programEndDate","lastUpdatedFilter","lastUpdatedStartDate","lastUpdatedEndDate","lastUpdatedDuration","minParams","assignedUser","trackedEntity","param","teis","teiStr","TEIExport","showProgramFilters","showTEFilters","showLUDates","showLUDuration","showUserPicker","TEIImport","teiTasks","Router","from","findLabelByLowerCaseComparison","groupKey","schemas","foundLabel","schemaName","toLowerCase","isGroupKeyMatchingLowerCaseSchemaName","findKeyByCamelCaseComparison","indexOf","isGroupKeyInSchemaName","str","substr","replace","toUpperCase","getSchemaGroups","groups","combinedGroups","groupName","group","other","combineSingleItemGroups","schema","groupSchemas","getGroupLabels","schemaGroups","entries","groupLabels","lowerCaseGroupKey","extractGroupLabelFromSchemas","pop","SchemaGroup","toggleSchema","formLabel","ind","schemaQuery","setSchemaGroups","schemaGroupLabels","setSchemaGroupLabels","schemaGroupOrder","setSchemaGroupOrder","formattedSchemas","collectionName","formatSchemas","excludedSchemas","has","filterOutExcludedSchemas","groupKeys","getGroupOrder","propagateCheckedSchemas","updatedSchemaGroups","onSelectGeneric","grAcc","showSchemas","formControl","schemaGroup","updatedGroup","MenuSectionHeader","sectionTitle","hideDivider","ImportMenuSectionHeader","ExportMenuSectionHeader","dataImportPage","code","eventImportPage","gmlImportPage","metadataImportPage","teiImportPage","dataExportPage","eventExportPage","metadataDependencyExportPage","metadataExportPage","teiExportPage","importPages","exportPages","jobOverviewPage","SidebarItem","sidebarItem","sidebarItemActive","Sidebar","dataSetQuery","dataSets","programQuery","programs","TETypeQuery","trackedEntityTypes","users","ResourcePicker","withFilter","list","setList","resourceError","resourceName","resourceToQuery","showList","filterPlaceholder","rightHeader","App","log","useUser","showApp","spacers","colors","Provider","sidebar"],"mappings":"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","file":"static/js/app.c956d59b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobOverview_container__1_oyo\",\"items\":\"JobOverview_items__2B1hs\",\"Menu\":\"JobOverview_Menu__2bTUp\",\"summary\":\"JobOverview_summary__13xs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Schemas_container__3H0XX\",\"group\":\"Schemas_group__QeGXq\",\"schema\":\"Schemas_schema__36IFP\",\"formLabel\":\"Schemas_formLabel__1geS0\",\"formControl\":\"Schemas_formControl__2ycln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2zgzu\",\"sidebar\":\"App_sidebar__10tAV\",\"content\":\"App_content__3I8HS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormField_container__3nG83\",\"label\":\"FormField_label__2Au43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ImportButtonStrip_container__12EQC\",\"dryRun\":\"ImportButtonStrip_dryRun__112kw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MenuLabel_container__ZTyjb\",\"status\":\"MenuLabel_status__1UTMj\",\"date\":\"MenuLabel_date__1r_sY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobSummary_container__2Zh6N\",\"title\":\"JobSummary_title__sZ7p4\",\"taskDetails\":\"JobSummary_taskDetails__3aEqI\",\"tags\":\"JobSummary_tags__3qnhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Summary_container__3WKjf\",\"rest\":\"Summary_rest__GeByI\",\"typeReportSummary\":\"Summary_typeReportSummary__13eT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoreOptions_container__2zKqV\",\"header\":\"MoreOptions_header__120Ww\",\"label\":\"MoreOptions_label__1zKNe\",\"children\":\"MoreOptions_children__1atPW\",\"chevronHidden\":\"MoreOptions_chevronHidden__3r-Ts\",\"chevronVisible\":\"MoreOptions_chevronVisible__2pP_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"OrgUnitTreeField_wrapper__lSSwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page_container__3NEqL\",\"limitedWidth\":\"Page_limitedWidth__Y4JEb\",\"content\":\"Page_content__39Ql1\",\"preBody\":\"Page_preBody__3d4Jp\",\"header\":\"Page_header__13-dA\",\"title\":\"Page_title__rl9Ut\",\"desc\":\"Page_desc__2uKSe\",\"loading\":\"Page_loading__LRKhV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProgramStages_container__2q8As\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontal\":\"RadioGroup_horizontal__2D7__\",\"vertical\":\"RadioGroup_vertical__1Rhum\",\"children\":\"RadioGroup_children__2PRxP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobOverview_container__F-fbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3_2MB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Sidebar_Menu__3Gy0D\",\"sidebarItem\":\"Sidebar_sidebarItem__3GXPY\",\"sidebarItemActive\":\"Sidebar_sidebarItemActive__3d6JP\",\"jobOverview\":\"Sidebar_jobOverview__2MJ0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"MenuSectionHeader_sectionTitle__1o5Ai\",\"label\":\"MenuSectionHeader_label__30LLY\",\"icon\":\"MenuSectionHeader_icon__1i2rK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedLabel\":\"ResourcePicker_selectedLabel__2kKYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BasicOptions_container__3a0Mm\",\"label\":\"BasicOptions_label__3abuV\",\"header\":\"BasicOptions_header__2gFRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SchemeContainer_container__EmEkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StyledField_container__2GRLx\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport loTranslations from './lo/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nconst UserContext = React.createContext(undefined);\nexport { UserContext };","import React from 'react';\nconst TaskContext = React.createContext(undefined);\n\nconst getNewestTask = tasks => Object.keys(tasks).map(k => tasks[k]).sort((a, b) => a.created < b.created ? 1 : -1)[0];\n\nexport { TaskContext, getNewestTask };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst createStyle = (width, height) => ({\n  width: width || 24,\n  height: height || 24,\n  display: 'inline-block',\n  fill: 'currentColor',\n  color: 'currentColor',\n  userSelect: 'none'\n});\n\nexport const MetadataImportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadataimport\">\n        <path d=\"M14.039 8.968l-3.961-3.968h1.968s.991-3.178-2.985-5c6.191.222 6.972 5 6.972 5h1.967l-3.961 3.968zm6.461 5.575l-.342.195v1.717l.342-.195v-1.717zm-.844.481l-.35.199v1.717l.35-.199v-1.717zm.906-10.024l-1.306 1.55 1.62.919-6.859 3.698-8.86-5.138 4.436-2.685c-.234-.5-.626-.989-1.313-1.338l-5.124 2.978-3.156 5.487 2 1.106v5.445l12.25 6.978 9.75-5.551v-11.508l-3.438-1.941zm-16.624 2.688l7.897 4.54-1.192 2.091-7.872-4.605 1.167-2.026zm9.062 13.298l-9-5.126v-3.112l7.377 4.319 1.623-2.845v6.764zm9-3.7l-7 3.985v-8.361l7-3.773v8.149zm-4.907-.802l-.349.199v1.713l.349-.195v-1.717zm.584-.333l-.343.195v1.717l.343-.195v-1.717zm1.395-.794l-.343.195v1.717l.343-.195v-1.717zm-.574.327l-.344.196v1.717l.344-.196v-1.717z\" />\n    </svg>;\nexport const MetadataExportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadataexport\">\n        <path d=\"M13.904 9c-3.514-3.984-.1-7.598-.1-7.598l-1.393-1.389 5.589-.013v5.607l-1.372-1.391c0 .001-3.581.706-2.724 4.784zm5.752 6.024l-.35.199v1.717l.35-.199v-1.717zm.844-.481l-.342.195v1.717l.342-.195v-1.717zm-3.407 1.941l-.349.199v1.713l.349-.195v-1.717zm1.979-1.127l-.343.195v1.717l.343-.195v-1.717zm.949-10.673v2.295l.855.489-6.859 3.698-8.86-5.138 6.374-3.654-1.5-1.406-6.864 3.97-3.167 5.533 2 1.106v5.445l12.25 6.978 9.75-5.551v-11.508l-3.979-2.257zm-16.083 3.004l7.897 4.54-1.193 2.091-7.871-4.605 1.167-2.026zm9.062 13.298l-9-5.126v-3.112l5.632 3.297 1.746 1.022 1.002-1.757.62-1.088v6.764zm9-3.7l-7 3.985v-8.361l7-3.773v8.149zm-4.323-1.135l-.343.195v1.717l.343-.195v-1.717zm.821-.467l-.344.196v1.717l.344-.196v-1.717z\" />\n    </svg>;\nexport const MetadataDependencyExportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadatadependencyexport\">\n        <path d=\"M16.949 16.132h2.332c-1.092 1.728-3.605 3.638-6.281 3.852v-8.984h3v-2h-3v-1.103c0-2.39 2-2.619 2-4.897 0-1.654-1.346-3-3-3s-3 1.346-3 3c0 2.297 2 2.487 2 4.897v1.103h-3v2h3v9c-2.639-.18-5.133-2.053-6.281-3.868h2.332l-5.051-3.132v5.912l1.269-1.8c2.702 4.503 6.379 4.305 8.731 6.888 2.352-2.583 6.029-2.385 8.731-6.889l1.269 1.8v-5.911l-5.051 3.132zm-5.949-13.132c0-.551.449-1 1-1s1 .449 1 1-.448 1-1 1-1-.449-1-1z\" />\n    </svg>;\nexport const DataIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-data\">\n        <path d=\"M6.083 4c1.38 1.612 2.578 3 4.917 3h11v13h-20v-16h4.083zm.917-2h-7v20h24v-17h-13c-1.629 0-2.305-1.058-4-3z\" />\n    </svg>;\nexport const EventIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-event\">\n        <path d=\"M20 20h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm6 0h-4v4h4v-4zm-6-6h-4v4h4v-4zm16-8v22h-24v-22h3v1c0 1.103.897 2 2 2s2-.897 2-2v-1h10v1c0 1.103.897 2 2 2s2-.897 2-2v-1h3zm-2 6h-20v14h20v-14zm-2-7c0-.552-.447-1-1-1s-1 .448-1 1v2c0 .552.447 1 1 1s1-.448 1-1v-2zm-14 2c0 .552-.447 1-1 1s-1-.448-1-1v-2c0-.552.447-1 1-1s1 .448 1 1v2z\" />\n    </svg>;\nexport const GMLIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-gml\">\n        <path d=\"M13.144 8.171c-.035-.066.342-.102.409-.102.074.009-.196.452-.409.102zm-2.152-3.072l.108-.031c.064.055-.072.095-.051.136.086.155.021.248.008.332-.014.085-.104.048-.149.093-.053.066.258.075.262.085.011.033-.375.089-.304.171.096.136.824-.195.708-.176.225-.113.029-.125-.097-.19-.043-.215-.079-.547-.213-.68l.088-.102c-.206-.299-.36.362-.36.362zm13.008 6.901c0 6.627-5.373 12-12 12-6.628 0-12-5.373-12-12s5.372-12 12-12c6.627 0 12 5.373 12 12zm-8.31-5.371c-.006-.146-.19-.284-.382-.031-.135.174-.111.439-.184.557-.104.175.567.339.567.174.025-.277.732-.063.87-.025.248.069.643-.226.211-.381-.355-.13-.542-.269-.574-.523 0 0 .188-.176.106-.166-.218.027-.614.786-.614.395zm6.296 5.371c0-1.035-.177-2.08-.357-2.632-.058-.174-.189-.312-.359-.378-.256-.1-1.337.597-1.5.254-.107-.229-.324.146-.572.008-.12-.066-.454-.515-.605-.46-.309.111.474.964.688 1.076.201-.152.852-.465.992-.038.268.804-.737 1.685-1.251 2.149-.768.694-.624-.449-1.147-.852-.275-.211-.272-.66-.55-.815-.124-.07-.693-.725-.688-.813l-.017.166c-.094.071-.294-.268-.315-.321 0 .295.48.765.639 1.001.271.405.416.995.748 1.326.178.178.858.914 1.035.898.193-.017.803-.458.911-.433.644.152-1.516 3.205-1.721 3.583-.169.317.138 1.101.113 1.476-.029.433-.37.573-.693.809-.346.253-.265.745-.556.925-.517.318-.889 1.353-1.623 1.348-.216-.001-1.14.36-1.261.007-.094-.256-.22-.45-.353-.703-.13-.248-.015-.505-.173-.724-.109-.152-.475-.497-.508-.677-.002-.155.117-.626.28-.708.229-.117.044-.458.016-.656-.048-.354-.267-.646-.53-.851-.389-.299-.188-.537-.097-.964 0-.204-.124-.472-.398-.392-.564.164-.393-.44-.804-.413-.296.021-.538.209-.813.292-.346.104-.7-.082-1.042-.125-1.407-.178-1.866-1.786-1.499-2.946.037-.19-.114-.542-.048-.689.158-.352.48-.747.762-1.014.158-.15.361-.112.547-.229.287-.181.291-.553.572-.781.4-.325.946-.318 1.468-.388.278-.037 1.336-.266 1.503-.06 0 .038.191.604-.019.572.433.023 1.05.749 1.461.579.211-.088.134-.736.567-.423.262.188 1.436.272 1.68.069.15-.124.234-.93.052-1.021.116.115-.611.124-.679.098-.12-.044-.232.114-.425.025.116.055-.646-.354-.218-.667-.179.131-.346-.037-.539.107-.133.108.062.18-.128.274-.302.153-.53-.525-.644-.602-.116-.076-1.014-.706-.77-.295l.789.785c-.039.025-.207-.286-.207-.059.053-.135.02.579-.104.347-.055-.089.09-.139.006-.268 0-.085-.228-.168-.272-.226-.125-.155-.457-.497-.637-.579-.05-.023-.764.087-.824.11-.07.098-.13.201-.179.311-.148.055-.287.126-.419.214l-.157.353c-.068.061-.765.291-.769.3.029-.075-.487-.171-.453-.321.038-.165.213-.68.168-.868-.048-.197 1.074.284 1.146-.235.029-.225.046-.487-.313-.525.068.008.695-.246.799-.36.146-.168.481-.442.724-.442.284 0 .223-.413.354-.615.131.053-.07.376.087.507-.01-.103.445.057.489.033.104-.054.684-.022.594-.294-.1-.277.051-.195.181-.253-.022.009.34-.619.402-.413-.043-.212-.421.074-.553.063-.305-.024-.176-.52-.061-.665.089-.115-.243-.256-.247-.036-.006.329-.312.627-.241 1.064.108.659-.735-.159-.809-.114-.28.17-.509-.214-.364-.444.148-.235.505-.224.652-.476.104-.178.225-.385.385-.52.535-.449.683-.09 1.216-.041.521.048.176.124.104.324-.069.19.286.258.409.099.07-.092.229-.323.298-.494.089-.222.901-.197.334-.536-.374-.223-2.004-.672-3.096-.672-.236 0-.401.263-.581.412-.356.295-1.268.874-1.775.698-.519-.179-1.63.66-1.808.666-.065.004.004-.634.358-.681-.153.023 1.247-.707 1.209-.859-.046-.18-2.799.822-2.676 1.023.059.092.299.092-.016.294-.18.109-.372.801-.541.801-.505.221-.537-.435-1.099.409l-.894.36c-1.328 1.411-2.247 3.198-2.58 5.183-.013.079.334.226.379.28.112.134.112.712.167.901.138.478.479.744.74 1.179.154.259.41.914.329 1.186.108-.178 1.07.815 1.246 1.022.414.487.733 1.077.061 1.559-.217.156.33 1.129.048 1.368l-.361.093c-.356.219-.195.756.021.982 1.818 1.901 4.38 3.087 7.22 3.087 5.517 0 9.989-4.472 9.989-9.989zm-11.507-6.357c.125-.055.293-.053.311-.22.015-.148.044-.046.08-.1.035-.053-.067-.138-.11-.146-.064-.014-.108.069-.149.104l-.072.019-.068.087.008.048-.087.106c-.085.084.002.139.087.102z\" />\n    </svg>;\nexport const LogoIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-logo\">\n        <path d=\"M9 3L5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const PlusIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-plus\">\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const MinusIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-minus\">\n        <path d=\"M19 13H5v-2h14v2z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const TasksIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-tasks\">\n        <path d=\"M19 2h-4.2C14.4.8 13.3 0 12 0c-1.3 0-2.4.8-2.8 2H5C4 2 3 3 3 4v16c0 1 1 2 2 2h14c1 0 2-1 2-2V4c0-1-1-2-2-2zm-7 0c.6 0 1 .5 1 1s-.5 1-1 1-1-.5-1-1 .5-1 1-1zm7 18H5V4h2v3h10V4h2v16z\"></path>\n    </svg>;\nexport const TEIIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)}>\n        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n        <path d=\"M13 1l.001 3.062A8.004 8.004 0 0 1 19.938 11H23v2l-3.062.001a8.004 8.004 0 0 1-6.937 6.937L13 23h-2v-3.062a8.004 8.004 0 0 1-6.938-6.937L1 13v-2h3.062A8.004 8.004 0 0 1 11 4.062V1h2zm-1 9a2 2 0 1 0 0 4 2 2 0 0 0 0-4z\" />\n    </svg>;\nexport const ImportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)}>\n        <path d=\"m18 13c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm-9 0c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm9 2h-3v3h3zm-9 0h-3v3h3zm-1.38710056-12.29029539.09420734.08318861 3.50000002 3.5c.3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-3.50000002 3.50000002c-.39052429.3905243-1.02368927.3905243-1.41421356 0-.36048396-.360484-.3882135-.927715-.08318861-1.32000624l.08318861-.09420734 1.79210678-1.79289322h-5.085c-.55228475 0-1-.44771525-1-1 0-.51283584.38604019-.93550716.88337887-.99327227l.11662113-.00672773h5.085l-1.79210678-1.79289322c-.36048396-.36048396-.3882135-.92771502-.08318861-1.32000622l.08318861-.09420734c.36048396-.36048396.92771502-.3882135 1.32000622-.08318861zm10.38710056 1.29029539c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm0 2h-3v3h3z\" />\n    </svg>;\nexport const ExportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)}>\n        <path d=\"m18.6128994 12.7097046.0942074.0831886 3.5 3.5c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074-3.5 3.5c-.3905243.3905243-1.0236893.3905243-1.4142136 0-.3604839-.360484-.3882135-.927715-.0831886-1.3200062l.0831886-.0942074 1.7921068-1.7928932h-5.085c-.5522847 0-1-.4477153-1-1 0-.5128358.3860402-.9355072.8833789-.9932723l.1166211-.0067277h5.085l-1.7921068-1.7928932c-.3604839-.360484-.3882135-.927715-.0831886-1.3200062l.0831886-.0942074c.360484-.3604839.927715-.3882135 1.3200062-.0831886zm-9.6128994.2902954c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm0 2h-3v3h3zm0-11c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm9 0c1.1045695 0 2 .8954305 2 2v3c0 1.1045695-.8954305 2-2 2h-3c-1.1045695 0-2-.8954305-2-2v-3c0-1.1045695.8954305-2 2-2zm-9 2h-3v3h3zm9 0h-3v3h3z\" />\n    </svg>;\nconst iconPropTypes = {\n  height: PropTypes.number,\n  width: PropTypes.number\n};\nDataIcon.propTypes = iconPropTypes;\nEventIcon.propTypes = iconPropTypes;\nGMLIcon.propTypes = iconPropTypes;\nLogoIcon.propTypes = iconPropTypes;\nMetadataDependencyExportIcon.propTypes = iconPropTypes;\nMetadataExportIcon.propTypes = iconPropTypes;\nMetadataImportIcon.propTypes = iconPropTypes;\nMinusIcon.propTypes = iconPropTypes;\nPlusIcon.propTypes = iconPropTypes;\nTasksIcon.propTypes = iconPropTypes;\nTEIIcon.propTypes = iconPropTypes;\nImportIcon.propTypes = iconPropTypes;\nExportIcon.propTypes = iconPropTypes;","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { DataIcon, EventIcon, GMLIcon, MetadataImportIcon, TEIIcon } from '../components/Icon/Icon';\nconst categoryTypes = [{\n  key: 'data',\n  importType: 'DATAVALUE_IMPORT',\n  icon: <DataIcon />,\n  label: i18n.t('Data')\n}, {\n  key: 'event',\n  importType: 'EVENT_IMPORT',\n  icon: <EventIcon />,\n  label: i18n.t('Event')\n}, {\n  key: 'gml',\n  importType: 'GML_IMPORT',\n  icon: <GMLIcon />,\n  label: i18n.t('GML')\n}, {\n  key: 'metadata',\n  importType: 'METADATA_IMPORT',\n  icon: <MetadataImportIcon />,\n  label: i18n.t('Metadata')\n}, {\n  key: 'tei',\n  importType: 'TEI_IMPORT',\n  icon: <TEIIcon />,\n  label: i18n.t('TEI')\n}];\nconst allCategories = categoryTypes.map(({\n  importType\n}) => importType);\nexport { categoryTypes, allCategories };","import { useState } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { allCategories } from '../utils/tasks';\nconst jobEventQuery = {\n  events: {\n    resource: 'system/tasks/',\n    id: ({\n      type,\n      taskId\n    }) => `${type}/${taskId}`\n  }\n};\nconst jobSummaryQuery = {\n  summary: {\n    resource: 'system/taskSummaries/',\n    id: ({\n      type,\n      taskId\n    }) => `${type}/${taskId}`\n  }\n};\nconst defaultTasks = {\n  data: {},\n  event: {},\n  gml: {},\n  metadata: {},\n  tei: {}\n};\nconst defaultJobOverview = {\n  activeTypes: allCategories,\n  selectedJob: undefined\n};\nconst defaultRefetchPeriod = 2000;\n\nconst createFetchEvents = (engine, setTasks, fetchSummary) => (type, id, task) => {\n  const fetchEvents = async () => {\n    if (task.completed) {\n      return;\n    }\n\n    const newTask = { ...task\n    };\n    const {\n      events,\n      error\n    } = await engine.query(jobEventQuery, {\n      variables: {\n        type: task.importType,\n        taskId: task.id\n      }\n    });\n\n    if (error) {\n      console.error('fetchEvents error: ', error);\n      return;\n    }\n\n    if (events && events.length) {\n      const newEvents = events.filter(e => !task.events.some(te => te.id == e.uid)).map(e => ({\n        id: e.uid,\n        level: e.level,\n        text: e.message,\n        date: new Date(e.time)\n      }));\n      const errorEvent = newEvents.find(e => e.level == 'ERROR');\n\n      if (errorEvent) {\n        newTask.error = errorEvent.text;\n      }\n\n      newTask.events = [...newTask.events, ...newEvents.reverse()];\n      newTask.completed = events[0].completed;\n    }\n\n    newTask.lastUpdated = new Date();\n\n    if (!newTask.completed) {\n      setTimeout(() => fetchEvents(type, id, newTask), defaultRefetchPeriod);\n    } else {\n      fetchSummary(type, id, newTask);\n    }\n\n    setTasks(tasks => ({ ...tasks,\n      [type]: { ...tasks[type],\n        [id]: newTask\n      }\n    }));\n  };\n\n  fetchEvents();\n};\n\nconst createFetchSummary = (engine, setTasks) => async (type, id, task) => {\n  const newTask = { ...task\n  };\n  const {\n    summary,\n    error\n  } = await engine.query(jobSummaryQuery, {\n    variables: {\n      type: task.importType,\n      taskId: task.id\n    }\n  });\n\n  if (error) {\n    console.error('fetchSummary error: ', error);\n    return;\n  }\n\n  if (summary && summary.status == 'ERROR' && !newTask.error) {\n    newTask.error = true;\n  }\n\n  newTask.summary = summary;\n  setTasks(tasks => ({ ...tasks,\n    [type]: { ...tasks[type],\n      [id]: newTask\n    }\n  }));\n};\n\nconst createAddTask = (setTasks, fetchEvents) => (type, id, entry) => {\n  setTasks(tasks => ({ ...tasks,\n    [type]: { ...tasks[type],\n      [id]: entry\n    }\n  }));\n  fetchEvents(type, id, entry);\n};\n\nconst createUpdateJobOverview = setJobOverview => val => {\n  setJobOverview(jobOverview => ({ ...jobOverview,\n    ...val\n  }));\n};\n\nconst useTasks = () => {\n  const engine = useDataEngine();\n  const [tasks, setTasks] = useState(defaultTasks);\n  const [jobOverview, setJobOverview] = useState(defaultJobOverview);\n  const fetchSummary = createFetchSummary(engine, setTasks);\n  const fetchEvents = createFetchEvents(engine, setTasks, fetchSummary);\n  const addTask = createAddTask(setTasks, fetchEvents);\n  const updateJobOverview = createUpdateJobOverview(setJobOverview);\n  return {\n    tasks,\n    addTask,\n    jobOverview,\n    updateJobOverview\n  };\n};\n\nexport { useTasks };","import { useDataQuery } from '@dhis2/app-runtime';\nconst userQuery = {\n  user: {\n    resource: 'me'\n  }\n};\n\nconst useUser = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(userQuery);\n\n  if (error) {\n    console.log('useUser error: ', error);\n  }\n\n  return {\n    loading,\n    error,\n    user: data && data.user\n  };\n};\n\nexport { useUser };","import { useState, useEffect } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataEngine } from '@dhis2/app-runtime';\nconst programStageQuery = {\n  data: {\n    resource: 'programs',\n    fields: 'id,displayName',\n    id: ({\n      id\n    }) => `${id}`,\n    params: {\n      fields: 'programStages[id,displayName]',\n      paging: 'false'\n    }\n  }\n};\nconst ALL_VALUE = 'ALL';\nconst ALL_LABEL = i18n.t('All program stages');\n\nconst useProgramStages = (program, setSelected) => {\n  const engine = useDataEngine();\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [stages, setStages] = useState([]);\n  useEffect(() => {\n    if (program) {\n      setLoading(true);\n      setSelected(undefined);\n    } else {\n      setLoading(false);\n    }\n\n    if (program) {\n      engine.query(programStageQuery, {\n        variables: {\n          id: program\n        },\n        onComplete: data => {\n          const list = data.data.programStages;\n          const formattedList = list.map(e => ({\n            value: e.id,\n            label: e.displayName\n          }));\n          setStages([{\n            value: ALL_VALUE,\n            label: ALL_LABEL\n          }, ...formattedList]);\n          setSelected(ALL_VALUE);\n          setLoading(false);\n        },\n        onError: error => {\n          setError(error);\n          console.error('useProgramStages error: ', error);\n        }\n      });\n    }\n  }, [program]);\n  const validationText = error && `${i18n.t('Something went wrong when loading the program stages')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    programStages: stages\n  };\n};\n\nexport { useProgramStages, ALL_VALUE };","import { useState } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataQuery } from '@dhis2/app-runtime';\nconst classKeyQuery = {\n  keys: {\n    resource: 'metadata/csvImportClasses'\n  }\n};\n\nconst useClassKeys = (setValue, prevValue) => {\n  const [classKeys, setClassKeys] = useState([]);\n  const {\n    loading,\n    error\n  } = useDataQuery(classKeyQuery, {\n    onComplete: classData => {\n      setClassKeys(classData.keys.map(k => ({\n        value: k,\n        label: k\n      })));\n\n      if (prevValue) {\n        setValue(prevValue);\n      } else {\n        setValue(classData.keys[0]);\n      }\n    },\n    onError: error => {\n      console.error('useClassKeys error: ', error);\n    }\n  });\n  const validationText = error && `${i18n.t('Something went wrong when loading the class keys')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    classKeys\n  };\n};\n\nexport { useClassKeys };","const mapping = {\n  json: 'application/json',\n  xml: 'application/xml',\n  csv: 'application/csv',\n  gml: 'application/xml',\n  adx: 'application/adx+xml',\n  pdf: 'application/pdf'\n};\nexport const getMimeType = format => mapping[format] || null;","import { getMimeType } from './mime';\n\nconst getUploadXHR = ({\n  url,\n  upload,\n  type,\n  onResponse,\n  onError,\n  setProgress,\n  format\n}) => {\n  const xhr = new XMLHttpRequest();\n  const contentType = getMimeType(format);\n  xhr.withCredentials = true;\n  xhr.open('POST', url, true);\n  xhr.setRequestHeader('Content-Type', contentType);\n  xhr.setRequestHeader('Content-Disposition', 'attachment filename=\"' + upload.name + '\"');\n  xhr.onreadystatechange = onReadyStateChange({\n    xhr,\n    type,\n    onResponse,\n    onError\n  });\n  xhr.upload.onprogress = onProgress(setProgress);\n  return xhr;\n};\n\nconst onReadyStateChange = ({\n  xhr,\n  type,\n  onResponse,\n  onError\n}) => {\n  return e => {\n    const status = Math.floor(xhr.status / 100);\n\n    if (xhr.readyState === 4 && status === 2) {\n      const idAndMsg = extractIdAndMessage(xhr);\n      onResponse({ ...idAndMsg,\n        type: type\n      });\n    } else if (xhr.readyState === 4) {\n      onError(e);\n    }\n  };\n};\n\nconst extractIdAndMessage = xhr => {\n  const data = JSON.parse(xhr.responseText);\n  const {\n    message,\n    status,\n    typeReports,\n    response\n  } = data;\n\n  if (status && status === 'ERROR') {\n    if (Array.isArray(typeReports) && Array.isArray(typeReports[0].objectReports) && Array.isArray(typeReports[0].objectReports[0].errorReports)) {\n      return {\n        error: true,\n        msg: {\n          id: 'init',\n          text: typeReports[0].objectReports[0].errorReports[0].message,\n          date: new Date()\n        },\n        typeReports: data\n      };\n    }\n  }\n\n  if (typeof response !== 'undefined') {\n    if (response.id) {\n      // the response will contain an `id` if the import was asynchronous\n      return {\n        id: response.id,\n        msg: {\n          id: 'init',\n          text: message,\n          date: new Date(response.created)\n        }\n      };\n    } else {\n      // the response will contain a report inside the response if the\n      // import was synchronous\n      return {\n        msg: {\n          id: 'completed',\n          text: 'Import:Done',\n          date: new Date()\n        },\n        typeReports: response\n      };\n    }\n  } // sync metadata import\n\n\n  if (typeReports) {\n    if (Array.isArray(typeReports) && typeReports[0] && Array.isArray(typeReports[0].objectReports) && typeReports[0].objectReports[0] && Array.isArray(typeReports[0].objectReports[0].errorReports)) {\n      return {\n        error: true,\n        msg: {\n          id: 'init',\n          text: typeReports[0].objectReports[0].errorReports[0].message,\n          date: new Date()\n        },\n        typeReports: data\n      };\n    }\n\n    return {\n      msg: {\n        id: 'completed',\n        text: 'Import:Done',\n        date: new Date()\n      },\n      typeReports: data\n    };\n  }\n\n  return {\n    error: true\n  };\n};\n\nconst onProgress = setProgress => evt => {\n  if (evt.lengthComputable) {\n    const percentComplete = parseInt(evt.loaded / evt.total * 100);\n    setProgress(Math.max(1, percentComplete));\n  }\n};\n\nexport { getUploadXHR };","import i18n from '@dhis2/d2-i18n';\nimport { getMimeType } from './mime';\nimport { getUploadXHR } from './xhr';\n\nconst trimString = (length, string) => string.length > length ? string.substring(0, length - 3) + '...' : string;\n\nconst pathToId = path => {\n  const pathSplit = path.split('/');\n  const orgId = pathSplit[pathSplit.length - 1];\n  return orgId;\n};\n\nconst jsDateToISO8601 = date => `${date.getFullYear().toString()}-${(date.getMonth() + 1).toString().padStart(2, 0)}-${date.getDate().toString().padStart(2, 0)}`;\n\nconst jsDateToString = date => `${jsDateToISO8601(date)} ${date.getHours().toString().padStart(2, 0)}:${date.getMinutes().toString().padStart(2, 0)}:${date.getSeconds().toString().padStart(2, 0)}\n`; // some parameters take the long version of the compression type\n\n\nconst compressionToName = compression => {\n  if (compression === 'gz') {\n    return 'gzip';\n  }\n\n  return compression;\n};\n\nconst blobType = (format, compression) => {\n  if (compression === 'gzip') {\n    return `application/${format}+gzip`;\n  } else if (compression === 'zip') {\n    return `application/${format}+zip`;\n  }\n\n  return getMimeType(format);\n};\n\nconst createBlob = (contents, format, compression = 'none') => {\n  return URL.createObjectURL(new Blob([contents], {\n    type: blobType(format, compression)\n  }));\n};\n\nconst downloadBlob = (url, filename) => {\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', filename);\n  document.body.appendChild(link);\n  link.click();\n  link.remove();\n};\n\nconst fetchAttributes = async (apiBaseUrl, attribute) => {\n  const fetcher = url => fetch(url, {\n    credentials: 'include'\n  }).then(resp => {\n    if (resp.status >= 200 && resp.status < 300) {\n      return Promise.resolve(resp.json());\n    } else {\n      throw resp;\n    }\n  }).catch(resp => {\n    const error = new Error(resp.statusText || resp.status);\n    console.error(`fetchAttributes ${attribute} fetch error: `, error);\n    return Promise.reject(error);\n  });\n\n  const fields = 'id,displayName';\n  const filters = `unique:eq:true&filter=${attribute}:eq:true`;\n  const url = `${apiBaseUrl}attributes.json?paging=false&fields=${fields}&filter=${filters}`;\n  const json = await fetcher(url).catch(error => Promise.reject(error));\n  return json.attributes.map(({\n    id,\n    displayName\n  }) => ({\n    value: `ATTRIBUTE:${id}`,\n    label: displayName\n  }));\n};\n\nconst genericErrorMessage = i18n.t('An unknown error occurred. Please try again later');\n\nconst errorGenerator = setProgress => message => {\n  const timestamp = new Date().getTime();\n  setProgress(0);\n  return {\n    id: `xhr-${timestamp}`,\n    critical: true,\n    message: message ? message : genericErrorMessage\n  };\n};\n\nconst uploadFile = ({\n  url,\n  file,\n  format,\n  type,\n  isAsync,\n  setProgress,\n  addEntry\n}) => {\n  setProgress(1);\n  const errF = errorGenerator(setProgress);\n  return new Promise((resolve, reject) => {\n    try {\n      const xhr = getUploadXHR({\n        url,\n        upload: file,\n        type,\n        onResponse: ({\n          error,\n          id,\n          msg,\n          typeReports\n        }) => {\n          let entry;\n\n          if (!isAsync) {\n            // we are done\n            entry = {\n              id: new Date().getTime(),\n              level: 'INFO',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: true,\n              events: [msg],\n              summary: typeReports,\n              error: error,\n              importType: type\n            };\n          } else if (error && msg) {\n            // error but we have a message\n            entry = {\n              id: new Date().getTime(),\n              level: 'ERROR',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: true,\n              events: [msg],\n              summary: typeReports,\n              error: true,\n              importType: type\n            };\n          } else if (error) {\n            // error with no message\n            entry = {\n              id: new Date().getTime(),\n              level: 'ERROR',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: true,\n              summary: undefined,\n              error: true,\n              importType: type\n            };\n          } else {\n            // success\n            entry = {\n              id: id,\n              level: 'INFO',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: false,\n              events: [msg],\n              summary: undefined,\n              error: false,\n              importType: type\n            };\n          }\n\n          addEntry(entry.id, entry);\n\n          if (error) {\n            reject(errF(msg && msg.text));\n          }\n\n          setProgress(0);\n          resolve({});\n        },\n        onError: ev => {\n          let message;\n\n          try {\n            const response = JSON.parse(ev.target.response);\n            message = response.message;\n          } catch (e2) {\n            message = genericErrorMessage;\n          }\n\n          console.error('sendFile error', message);\n          reject(errF(message));\n        },\n        setProgress,\n        format\n      });\n      xhr.send(file);\n    } catch (e) {\n      // xhr.send can throw an exception\n      reject(errorGenerator(e));\n    }\n  });\n}; // call stub function if available\n\n\nconst locationAssign = url => {\n  if (window.locationAssign) {\n    window.locationAssign(url);\n  } else {\n    window.location = url;\n  }\n};\n\nconst getPrevJobDetails = (query, tasks) => {\n  if (!query || !query.id) return {};\n  const job = tasks[query.id];\n  if (!job) return {};\n  return job.jobDetails;\n};\n\nconst getInitialBoolValue = (prevValue, defaultValue) => {\n  if (prevValue === null || prevValue === undefined) {\n    return defaultValue;\n  }\n\n  return prevValue;\n};\n\nexport { createBlob, downloadBlob, fetchAttributes, getPrevJobDetails, getInitialBoolValue, locationAssign, jsDateToISO8601, jsDateToString, pathToId, trimString, uploadFile, compressionToName };","import PropTypes from 'prop-types';\nconst optionPropType = PropTypes.exact({\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n});\nconst optionsPropType = PropTypes.arrayOf(optionPropType);\nexport { optionPropType, optionsPropType };","import React, { useEffect, useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { StyledField } from '../index';\nimport { fetchAttributes } from '../../utils/helper';\nimport { optionsPropType } from '../../utils/options';\n\nconst DataElementIdScheme = ({\n  name,\n  label,\n  dataElementIdSchemeOptions,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    fetchAttributes(`${baseUrl}/api/`, 'dataElementAttribute').then(attributes => setSchemes(attributes)).catch(error => setError(error));\n    setLoading(false);\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional data element ID schemes')} : ${error.message}`;\n  const options = [...dataElementIdSchemeOptions, ...schemes];\n  return <StyledField component={SingleSelectFieldFF} name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} />;\n};\n\nDataElementIdScheme.propTypes = {\n  dataElementIdSchemeOptions: optionsPropType.isRequired,\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { DataElementIdScheme };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputField } from '@dhis2/ui';\nimport { jsDateToISO8601 } from '../../utils/helper';\n\nconst DatePicker = ({\n  name,\n  error,\n  label,\n  date,\n  onChange,\n  dataTest\n}) => {\n  const onChangeHelper = ({\n    value\n  }) => {\n    if (!value) {\n      onChange(value);\n    } else {\n      onChange(new Date(value));\n    }\n  };\n\n  const value = date && jsDateToISO8601(date);\n  return <InputField type=\"date\" name={name} value={value} label={label} onChange={onChangeHelper} inputWidth=\"200px\" error={!!error} validationText={error} dataTest={dataTest} />;\n};\n\nDatePicker.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]).isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\nexport { DatePicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { DatePicker } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst OPTIONAL_DATE_VALIDATOR = date => date ? DATE_VALIDATOR(date) : undefined;\n\nconst DATE_VALIDATOR = date => new Date(date) == 'Invalid Date' ? i18n.t('Invalid date') : undefined;\n\nconst DATE_BEFORE_VALIDATOR = (date1, date2) => date1 > date2 ? i18n.t('Start date must be before end date') : undefined;\n\nconst DATE_AFTER_VALIDATOR = (date2, date1) => date2 < date1 ? i18n.t('End date must be after start date') : undefined;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta: {\n    error\n  },\n  inputName,\n  ...rest\n}) => <DatePicker name={inputName} error={error} date={value} onChange={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst DatePickerField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} inputName={name} {...rest} />;\n};\n\nDatePickerField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { DatePickerField, DATE_VALIDATOR, DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR, OPTIONAL_DATE_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport { StyledField } from '../index';\nimport { optionsPropType } from '../../utils/options';\n\nconst EventIdScheme = ({\n  name,\n  label,\n  eventIdSchemeOptions,\n  dataTest\n}) => {\n  return <StyledField component={SingleSelectFieldFF} name={name} label={label} options={eventIdSchemeOptions} dataTest={dataTest} />;\n};\n\nEventIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  eventIdSchemeOptions: optionsPropType.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { EventIdScheme };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { ReactFinalForm, FileInputFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst SINGLE_FILE_VALIDATOR = files => !files || files.length == 0 ? i18n.t('Please select a file') : undefined;\n\nconst FileUpload = ({\n  initialValue,\n  required,\n  name,\n  label,\n  helpText,\n  accept = '*',\n  validator,\n  dataTest\n}) => {\n  return <FormField label={label} required={required} dataTest={dataTest}>\n            <Field component={FileInputFieldFF} name={name} accept={accept} required={required} initialValue={initialValue} validate={validator} dataTest={`${dataTest}-fileinput`} helpText={helpText} />\n        </FormField>;\n};\n\nFileUpload.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  accept: PropTypes.string,\n  helpText: PropTypes.string,\n  initialValue: PropTypes.instanceOf(File),\n  required: PropTypes.bool,\n  validator: PropTypes.func\n};\nexport { FileUpload, SINGLE_FILE_VALIDATOR };","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AlertStack, AlertBar } from '@dhis2/ui';\n\nconst FormAlerts = ({\n  alerts,\n  dataTest\n}) => {\n  const [bars, setBars] = useState([]);\n  useEffect(() => {\n    if (alerts) {\n      const newBars = alerts.map(a => <AlertBar key={`alert-${a.id}`} warning={a.warning} info={a.info} critical={a.critical} success={a.success} duration={5000}>\n                    {a.message}\n                </AlertBar>);\n      setBars(newBars);\n    }\n  }, [alerts]);\n  if (bars.length == 0) return null;\n  return <AlertStack data-test={dataTest}>{bars}</AlertStack>;\n};\n\nFormAlerts.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  alerts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    critical: PropTypes.bool,\n    info: PropTypes.bool,\n    warning: PropTypes.bool\n  }))\n};\nexport { FormAlerts };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FormField.module.css';\n\nconst FormField = ({\n  dataTest,\n  label,\n  required = false,\n  children\n}) => {\n  return <div className={styles.container} data-test={dataTest}>\n            <span className={styles.label}>\n                {label}\n                {required && <span> *</span>}\n            </span>\n            {children}\n        </div>;\n};\n\nFormField.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  required: PropTypes.bool\n};\nexport { FormField };","import React, { useState, useEffect } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { StyledField } from '../index';\nimport { optionsPropType } from '../../utils/options';\nimport { fetchAttributes } from '../../utils/helper';\n\nconst attributeFoundIn = (attribute, collection) => !!collection.find(({\n  value\n}) => value === attribute.value);\n\nconst IdScheme = ({\n  name,\n  label,\n  idSchemeOptions,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    const f = async () => {\n      let err;\n      const dataElementAttributes = await fetchAttributes(`${baseUrl}/api/`, 'dataElementAttribute').catch(error => err = error);\n      const organisationUnitAttributes = await fetchAttributes(`${baseUrl}/api/`, 'organisationUnitAttribute').catch(error => err = error);\n      setError(err);\n\n      if (!err) {\n        const sharedAttributes = dataElementAttributes.reduce((shared, attribute) => {\n          const foundInOrgUnits = attributeFoundIn(attribute, organisationUnitAttributes);\n          return foundInOrgUnits ? [...shared, attribute] : shared;\n        }, []);\n        setSchemes(sharedAttributes);\n      }\n\n      setLoading(false);\n    };\n\n    f();\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional ID schemes')} : ${error.message}`;\n  const options = [...idSchemeOptions, ...schemes];\n  return <StyledField component={SingleSelectFieldFF} name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} />;\n};\n\nIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  idSchemeOptions: optionsPropType.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { IdScheme };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, Help } from '@dhis2/ui';\nimport styles from './ImportButtonStrip.module.css';\nconst DRYRUN_HELPTEXT = i18n.t('A dry run tests the import settings without importing any data');\n\nconst ImportButtonStrip = ({\n  dryRunDataTest,\n  importDataTest,\n  form,\n  dataTest\n}) => {\n  return <div className={styles.container} data-test={dataTest}>\n            <ButtonStrip dataTest={`${dataTest}-button-strip`}>\n                <Button primary type=\"submit\" onClick={() => form.change('dryRun', true)} dataTest={dryRunDataTest} className={styles.dryRun}>\n                    {i18n.t('Start dry run')}\n                </Button>\n                <Button secondary type=\"submit\" onClick={() => form.change('dryRun', false)} dataTest={importDataTest}>\n                    {i18n.t('Start import')}\n                </Button>\n            </ButtonStrip>\n            <Help dataTest={`${dataTest}-help`}>{DRYRUN_HELPTEXT}</Help>\n        </div>;\n};\n\nImportButtonStrip.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  dryRunDataTest: PropTypes.string.isRequired,\n  form: PropTypes.object.isRequired,\n  importDataTest: PropTypes.string.isRequired\n};\nexport { ImportButtonStrip };","import { categoryTypes } from '../../utils/tasks';\nconst categoryTypesObj = categoryTypes.reduce((acc, cur) => {\n  acc[cur.importType] = cur;\n  return acc;\n}, {});\n\nconst jobToPath = job => ({\n  pathname: `/import/${categoryTypesObj[job.importType].key}`,\n  query: {\n    id: job.id\n  }\n});\n\nexport { categoryTypesObj, jobToPath };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './MenuLabel.module.css';\nimport { jsDateToString, trimString } from '../../../utils/helper';\n\nconst MenuLabel = ({\n  task\n}) => {\n  return <div className={styles.container} data-test={`job-overview-menu-label-${task.id}`}>\n            <div className={styles.status}>\n                <span>{trimString(15, task.jobDetails.files[0].name)}</span>\n                <br />\n                <span>\n                    {task.completed ? i18n.t('Completed') : i18n.t('In progress')}{' '}\n                </span>\n            </div>\n            <div className={styles.date}>{jsDateToString(task.created)}</div>\n        </div>;\n};\n\nMenuLabel.propTypes = {\n  task: PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    created: PropTypes.instanceOf(Date).isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    jobDetails: PropTypes.object.isRequired\n  }).isRequired\n};\nexport { MenuLabel };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './JobOverview.module.css';\n\nconst ChipContainer = ({\n  children\n}) => <div className={styles.chips} data-test=\"job-overview-chips\">\n        {children}\n    </div>;\n\nChipContainer.propTypes = {\n  children: PropTypes.node\n};\nexport { ChipContainer };","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Chip, Menu, MenuItem } from '@dhis2/ui';\nimport styles from './JobOverview.module.css';\nimport { TaskContext } from '../../contexts/';\nimport { categoryTypes } from '../../utils/tasks';\nimport { JobSummary } from '../index';\nimport { categoryTypesObj, jobToPath } from './helper';\nimport { MenuLabel } from './MenuLabel/MenuLabel';\nimport { ChipContainer } from './ChipContainer';\n\nconst JobOverview = ({\n  activeTypes,\n  setActiveTypes,\n  selectedJob,\n  setSelectedJob\n}) => {\n  const {\n    tasks\n  } = useContext(TaskContext);\n\n  const onChipClick = key => {\n    if (activeTypes.includes(key)) {\n      setActiveTypes([...activeTypes].filter(k => k != key));\n    } else {\n      setActiveTypes([...activeTypes, key]);\n    }\n  }; // all tasks sorted by type, createdAt (descending)\n\n\n  const allTasks = categoryTypes.map(({\n    key: type\n  }) => Object.keys(tasks[type]).map(id => tasks[type][id])).flat().sort((a, b) => {\n    if (a.importType > b.importType) return -1;\n    if (a.createdAt > b.createdAt) return -1;\n  });\n  const filteredTasks = allTasks.filter(t => activeTypes.includes(t.importType)); // set selected job to first job if\n  // first time user visits the job overview page\n\n  useEffect(() => {\n    if (!selectedJob && allTasks.length > 0) {\n      setSelectedJob(allTasks[0]);\n    }\n  }, []);\n\n  if (!selectedJob) {\n    return <p>{i18n.t('No jobs started yet.')}</p>;\n  }\n\n  return <div className={styles.container} data-test=\"job-overview-container\">\n            <div className={styles.items} data-test=\"job-overview-tasks\">\n                <Menu className={styles.Menu}>\n                    <ChipContainer>\n                        {categoryTypes.map(({\n            key,\n            importType,\n            label\n          }) => <Chip onClick={() => onChipClick(importType)} selected={activeTypes.includes(importType)} key={key} dataTest={`job-overview-chips-${key}`}>\n                                {label}\n                            </Chip>)}\n                    </ChipContainer>\n                    {filteredTasks.map(t => <MenuItem key={`job-overview-tasks-${t.id}`} active={selectedJob.id == t.id} label={<MenuLabel task={t} />} onClick={() => setSelectedJob(t)} icon={categoryTypesObj[t.importType].icon} />)}\n                </Menu>\n            </div>\n            <div className={styles.summary} data-test=\"job-overview-summary\">\n                <JobSummary task={selectedJob} dataTest=\"job-summary-container\" showFileDetails={false} showJobDetails={true} />\n                <Link to={jobToPath(selectedJob)}>\n                    <Button primary>{i18n.t('Recreate job')}</Button>\n                </Link>\n            </div>\n        </div>;\n};\n\nJobOverview.propTypes = {\n  activeTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setActiveTypes: PropTypes.func.isRequired,\n  setSelectedJob: PropTypes.func.isRequired,\n  selectedJob: PropTypes.object\n};\nexport { JobOverview, categoryTypes };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\nimport { jsDateToString } from '../../../utils/helper';\nimport { FormField } from '../../index';\n\nconst Events = ({\n  events\n}) => {\n  return <FormField label={`${i18n.t('Events')}`} dataTest=\"job-summary-events\" name=\"events\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Time')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Message')}</TableCellHead>\n                        <TableCellHead>{i18n.t('ID')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {(events || null) && events.map((e, i) => <TableRow key={`job-summary-events-${e.id}-${i}`}>\n                                <TableCell>{jsDateToString(e.date)}</TableCell>\n                                <TableCell>{e.text}</TableCell>\n                                <TableCell>{e.id}</TableCell>\n                            </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nconst eventPropType = PropTypes.shape({\n  date: PropTypes.instanceOf(Date).isRequired,\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n});\nEvents.propTypes = {\n  events: PropTypes.arrayOf(eventPropType)\n};\nexport { Events };","import PropTypes from 'prop-types';\nconst statsPropTypeObj = {\n  deleted: PropTypes.number.isRequired,\n  ignored: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  updated: PropTypes.number.isRequired,\n  imported: PropTypes.number,\n  created: PropTypes.number\n};\nconst statsPropType = PropTypes.exact(statsPropTypeObj);\n\nconst getClassName = c => {\n  const s = c.split('.');\n  return s[s.length - 1];\n};\n\nconst typeReportParse = report => {\n  let allStats = [];\n  const allMessages = [];\n  Object.keys(report).forEach(i => {\n    const {\n      klass,\n      objectReports,\n      stats\n    } = report[i];\n    allStats = [...allStats, { ...stats,\n      type: getClassName(klass)\n    }];\n    objectReports && objectReports.forEach(r => {\n      const {\n        uid,\n        errorReports\n      } = r;\n      errorReports && errorReports.forEach(e => {\n        allMessages.push({\n          uid,\n          type: getClassName(e.mainKlass),\n          property: e.errorProperty,\n          message: e.message\n        });\n      });\n    });\n  });\n  return {\n    stats: allStats,\n    messages: allMessages\n  };\n};\n\nconst messagesPropType = PropTypes.arrayOf(PropTypes.exact({\n  uid: PropTypes.string,\n  type: PropTypes.string,\n  property: PropTypes.string,\n  message: PropTypes.string\n}));\nexport { typeReportParse, statsPropType, statsPropTypeObj, messagesPropType };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\n\nconst SingleStatusTable = ({\n  status,\n  description\n}) => <Table>\n        <TableHead>\n            <TableRowHead>\n                <TableCellHead>{i18n.t('Status')}</TableCellHead>\n                <TableCellHead>{i18n.t('Description')}</TableCellHead>\n            </TableRowHead>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>{status}</TableCell>\n                <TableCell>{description}</TableCell>\n            </TableRow>\n        </TableBody>\n    </Table>;\n\nSingleStatusTable.propTypes = {\n  description: PropTypes.string,\n  status: PropTypes.string\n};\nexport { SingleStatusTable };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\nimport { statsPropType } from '../helper';\nimport { SingleStatusTable } from '../SingleStatusTable/SingleStatusTable';\nimport { FormField } from '../../index';\n\nconst SingleSummary = ({\n  importCount,\n  status,\n  description,\n  conflicts,\n  id\n}) => <div>\n        <FormField label={`${i18n.t('Summary')} #${id}`} dataTest=\"job-summary-single-summary\" name=\"summary\">\n            <>\n                {status && <SingleStatusTable description={description} status={status} />}\n                <Table>\n                    <TableHead>\n                        <TableRowHead>\n                            <TableCellHead>{i18n.t('Created')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Deleted')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Ignored')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Updated')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Total')}</TableCellHead>\n                        </TableRowHead>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>{importCount.imported}</TableCell>\n                            <TableCell>{importCount.deleted}</TableCell>\n                            <TableCell>{importCount.ignored}</TableCell>\n                            <TableCell>{importCount.updated}</TableCell>\n                            <TableCell>{importCount.total}</TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </>\n        </FormField>\n        {conflicts && <FormField label={`${i18n.t('Conflicts')}`} dataTest=\"job-summary-conflicts\" name=\"conflicts\">\n                <Table>\n                    <TableHead>\n                        <TableRowHead>\n                            <TableCellHead>{i18n.t('Object')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Value')}</TableCellHead>\n                        </TableRowHead>\n                    </TableHead>\n                    <TableBody>\n                        {conflicts.map((c, i) => <TableRow key={`job-summary-conflicts-${c.object}-${i}`}>\n                                <TableCell>{c.object}</TableCell>\n                                <TableCell>{c.value}</TableCell>\n                            </TableRow>)}\n                    </TableBody>\n                </Table>\n            </FormField>}\n    </div>;\n\nSingleSummary.propTypes = {\n  id: PropTypes.string.isRequired,\n  importCount: statsPropType.isRequired,\n  conflicts: PropTypes.arrayOf(PropTypes.exact({\n    object: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })),\n  description: PropTypes.string,\n  status: PropTypes.string\n};\nexport { SingleSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\nimport { statsPropTypeObj } from '../helper';\nimport { FormField } from '../../index';\n\nconst TypeCount = ({\n  stats\n}) => {\n  if (stats.length == 0) return null;\n  return <FormField label={`${i18n.t('Type count')}`} dataTest=\"job-summary-type-count\" name=\"typeCount\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Type')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Created')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Deleted')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Ignored')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Updated')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Total')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {stats.map((s, i) => <TableRow key={`job-summary-type-count-${i}`}>\n                            <TableCell>{s.type}</TableCell>\n                            <TableCell>{s.created}</TableCell>\n                            <TableCell>{s.deleted}</TableCell>\n                            <TableCell>{s.ignored}</TableCell>\n                            <TableCell>{s.updated}</TableCell>\n                            <TableCell>{s.total}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nconst typeCountStatsPropTypeObj = { ...statsPropTypeObj,\n  type: PropTypes.string.isRequired\n};\nTypeCount.propTypes = {\n  stats: PropTypes.arrayOf(PropTypes.shape(typeCountStatsPropTypeObj)).isRequired\n};\nexport { TypeCount, typeCountStatsPropTypeObj };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\nimport { FormField } from '../../index';\nimport { messagesPropType } from '../helper';\n\nconst Messages = ({\n  messages\n}) => {\n  if (messages.length == 0) return null;\n  return <FormField label={`${i18n.t('Messages')}`} dataTest=\"job-summary-messages\" name=\"messages\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('UID')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Type')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Property')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Message')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {messages.map((m, i) => <TableRow key={`job-summary-messages-${i}`}>\n                            <TableCell>{m.uid}</TableCell>\n                            <TableCell>{m.type}</TableCell>\n                            <TableCell>{m.property}</TableCell>\n                            <TableCell>{m.message}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nMessages.propTypes = {\n  messages: messagesPropType.isRequired\n};\nexport { Messages, messagesPropType };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { statsPropType, messagesPropType } from '../helper';\nimport { SingleSummary } from '../SingleSummary/SingleSummary';\nimport { TypeCount, typeCountStatsPropTypeObj } from '../TypeCount/TypeCount';\nimport { Messages } from '../Messages/Messages';\n\nconst TypeReportSummary = ({\n  overviewStats,\n  stats,\n  messages\n}) => {\n  return <div>\n            <SingleSummary importCount={overviewStats} id={i18n.t('Overview')} />\n            <TypeCount stats={stats} />\n            <Messages messages={messages} />\n        </div>;\n};\n\nTypeReportSummary.propTypes = {\n  messages: messagesPropType.isRequired,\n  overviewStats: statsPropType.isRequired,\n  stats: PropTypes.arrayOf(PropTypes.exact(typeCountStatsPropTypeObj)).isRequired\n};\nexport { TypeReportSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './Summary.module.css';\nimport { typeReportParse } from '../helper';\nimport { SingleSummary } from '../SingleSummary/SingleSummary';\nimport { TypeReportSummary } from '../TypeReportSummary/TypeReportSummary';\n\nconst extractStats = summary => {\n  if (summary.responseType == 'ImportSummaries') {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    } = summary;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  } else if (summary.importCount) {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated\n    } = summary.importCount;\n    const total = imported + deleted + ignored + updated;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  } else if (summary.stats) {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    } = summary.stats;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  }\n};\n\nconst Summary = ({\n  summary\n}) => {\n  // gml import type object return\n  if (summary.typeReports) {\n    const overviewStats = { ...summary.stats,\n      imported: summary.stats.created\n    };\n    const {\n      stats,\n      messages\n    } = typeReportParse(summary.typeReports);\n    return <div data-test=\"job-summary-summary\" className={styles.typeReportSummary}>\n                <TypeReportSummary overviewStats={overviewStats} stats={stats} messages={messages} />\n            </div>;\n  }\n\n  const importCount = extractStats(summary);\n  const overviewSummary = <SingleSummary importCount={importCount} status={summary.status} description={summary.description} conflicts={summary.conflicts && (summary.conflicts.length || null) && summary.conflicts} id={i18n.t('Overview')} />;\n  const allSummaries = summary.responseType == 'ImportSummaries' && summary.importSummaries ? summary.importSummaries.map((s, i) => {\n    const importCount = extractStats(s);\n    return <SingleSummary key={`single-summary-${i}`} importCount={importCount} status={s.status} description={s.description} conflicts={s.conflicts} id={`${i + 1}`} />;\n  }) : null;\n  return <div data-test=\"job-summary-summary\" className={styles.container}>\n            {overviewSummary}\n            <div className={styles.rest} data-test=\"job-summary-summary-rest\">\n                {allSummaries}\n            </div>\n        </div>;\n};\n\nSummary.propTypes = {\n  summary: PropTypes.object.isRequired\n};\nexport { Summary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui';\nimport { FormField } from '../../index';\n\nconst valueToString = value => {\n  if (value instanceof File) {\n    return value.name;\n  } else if (Array.isArray(value)) {\n    return value.map(v => valueToString(v)).join(',');\n  } else if (value instanceof Object) {\n    return value.label;\n  }\n\n  return `${value}`;\n};\n\nconst Details = ({\n  details\n}) => {\n  return <FormField label={`${i18n.t('Job details')}`} dataTest=\"job-summary-job-details\" name=\"details\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Key')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Value')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {Object.keys(details).map(key => <TableRow key={`job-summary-job-details-${key}`}>\n                            <TableCell>{key}</TableCell>\n                            <TableCell>{valueToString(details[key])}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nDetails.propTypes = {\n  details: PropTypes.object.isRequired\n};\nexport { Details };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, Tag } from '@dhis2/ui';\nimport styles from './JobSummary.module.css';\nimport { jsDateToString } from '../../utils/helper';\nimport { Events } from './Events/Events';\nimport { Summary } from './Summary/Summary';\nimport { Details } from './Details/Details';\n\nconst Header = ({\n  jobDetails,\n  task,\n  showFileDetails\n}) => <div className={styles.header}>\n        <h3 className={styles.title}>{`${i18n.t('Job summary')}`}</h3>\n        {showFileDetails && <span className={styles.taskDetails}>\n                <span data-test=\"job-summary-filename\">\n                    {jobDetails.files[0].name}\n                </span>{' '}\n                -{' '}\n                <span data-test=\"job-summary-date\">\n                    {jsDateToString(task.created)}{' '}\n                </span>\n            </span>}\n    </div>;\n\nHeader.propTypes = {\n  jobDetails: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired,\n  showFileDetails: PropTypes.bool\n};\n\nconst Tags = ({\n  jobDetails,\n  task\n}) => <div className={styles.tags} data-test=\"job-summary-tags\">\n        {task.completed ? <Tag positive>{i18n.t('Completed')}</Tag> : <Tag neutral>{i18n.t('In progress')}</Tag>}\n        {task.error && <Tag negative bold>\n                {i18n.t('Error')}\n            </Tag>}\n        {task.summary && task.summary.conflicts && (task.summary.conflicts.length || null) && <Tag negative>{i18n.t('Conflicts')}</Tag>}\n        {jobDetails.dryRun && <Tag neutral bold>\n                {i18n.t('Dry run')}\n            </Tag>}\n    </div>;\n\nTags.propTypes = {\n  jobDetails: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired\n};\n\nconst JobSummary = ({\n  task,\n  showFileDetails = true,\n  showJobDetails = false,\n  dataTest\n}) => {\n  if (!task) return null;\n  const {\n    jobDetails\n  } = task;\n  return <div className={styles.container} data-test={dataTest}>\n            <Header jobDetails={jobDetails} task={task} showFileDetails={showFileDetails} />\n            <Tags jobDetails={jobDetails} task={task} />\n            <Divider />\n            {task.completed && task.summary && <Summary summary={task.summary} />}\n            <div className={styles.events}>\n                <Events events={task.events} />\n            </div>\n            {showJobDetails && <div className={styles.jobDetails}>\n                    <Details details={task.jobDetails} />\n                </div>}\n        </div>;\n};\n\nJobSummary.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  showFileDetails: PropTypes.bool,\n  showJobDetails: PropTypes.bool,\n  task: PropTypes.object\n};\nexport { JobSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { JobSummary } from '../JobSummary';\nimport { MoreOptions } from '../../index';\n\nconst MiniJobSummary = ({\n  task,\n  dataTest\n}) => {\n  if (!task) return null;\n  return <div data-test={dataTest}>\n            <MoreOptions label={i18n.t('View summary of recently started import job')} dataTest={`${dataTest}-MoreOptions`} noBottomMargin>\n                <JobSummary task={task} dataTest={`${dataTest}-JobSummary`} />\n            </MoreOptions>\n        </div>;\n};\n\nMiniJobSummary.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  task: PropTypes.object\n};\nexport { MiniJobSummary };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider } from '@dhis2/ui';\nimport { ChevronRight } from '@dhis2/ui-icons';\nimport styles from './MoreOptions.module.css';\n\nconst MoreOptions = ({\n  children,\n  initiallyVisible,\n  noBottomMargin,\n  label = i18n.t('Advanced options'),\n  dataTest = 'interaction-more-options'\n}) => {\n  const [hidden, setHidden] = useState(!initiallyVisible);\n\n  const onToggle = () => {\n    setHidden(!hidden);\n  };\n\n  return <section className={cx({\n    [styles.container]: !noBottomMargin\n  })} data-test={dataTest}>\n            <header className={styles.header} onClick={onToggle} data-test={`${dataTest}-header`}>\n                <ChevronRight className={cx({\n        [styles.chevronHidden]: hidden,\n        [styles.chevronVisible]: !hidden\n      })} />\n                <h2 className={styles.label}>{label}</h2>\n            </header>\n            <Divider />\n            <div className={styles.children} data-test={`${dataTest}-children`}>\n                {!hidden && children}\n            </div>\n        </section>;\n};\n\nMoreOptions.defaultProps = {\n  initiallyVisible: false,\n  noBottomMargin: false\n};\nMoreOptions.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  dataTest: PropTypes.string,\n  initiallyVisible: PropTypes.bool,\n  label: PropTypes.string,\n  noBottomMargin: PropTypes.bool\n};\nexport { MoreOptions };","import React, { useEffect, useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { StyledField } from '../index';\nimport { fetchAttributes } from '../../utils/helper';\nimport { optionsPropType } from '../../utils/options';\n\nconst OrgUnitIdScheme = ({\n  name,\n  label,\n  orgUnitIdSchemeOptions,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    fetchAttributes(`${baseUrl}/api/`, 'organisationUnitAttribute').then(attributes => setSchemes(attributes)).catch(error => setError(error));\n    setLoading(false);\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional organisation unit ID schemes')} : ${error.message}`;\n  const options = [...orgUnitIdSchemeOptions, ...schemes];\n  return <StyledField component={SingleSelectFieldFF} name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} />;\n};\n\nOrgUnitIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  orgUnitIdSchemeOptions: optionsPropType.isRequired\n};\nexport { OrgUnitIdScheme };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { CircularLoader, Help } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, OrganisationUnitTree } from '@dhis2/ui';\nimport styles from './OrgUnitTreeField.module.css';\nconst {\n  Field\n} = ReactFinalForm;\nconst rootQuery = {\n  roots: {\n    resource: 'organisationUnits',\n    params: {\n      filter: 'level:eq:1',\n      fields: 'id',\n      paging: 'false'\n    }\n  }\n};\n\nconst SINGLE_ORG_VALIDATOR = selectedOrgUnits => selectedOrgUnits.length == 0 ? i18n.t('At least one organisation unit must be selected') : undefined;\n\nconst SINGLE_EXACT_ORG_VALIDATOR = selectedOrgUnits => selectedOrgUnits.length != 1 ? i18n.t('One organisation unit must be selected') : undefined;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  multiSelect,\n  ...rest\n}) => {\n  const {\n    loading,\n    data,\n    error\n  } = useDataQuery(rootQuery);\n  return <>\n            {loading && <CircularLoader />}\n            {error && <Help error>\n                    {i18n.t('Something went wrong when loading the organisation units!')}\n                </Help>}\n            {data && <div className={styles.wrapper}>\n                    <OrganisationUnitTree onChange={({\n        selected\n      }) => {\n        onChange(selected);\n      }} selected={value} roots={data.roots.organisationUnits.map(ou => ou.id)} {...rest} singleSelection={!multiSelect} />\n                </div>}\n\n            {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n        </>;\n};\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired,\n  multiSelect: PropTypes.bool\n};\n\nconst OrgUnitTreeField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nOrgUnitTreeField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { OrgUnitTreeField, SINGLE_ORG_VALIDATOR, SINGLE_EXACT_ORG_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Card, CenteredContent, CircularLoader, ComponentCover, LinearLoader } from '@dhis2/ui';\nimport styles from './Page.module.css';\nimport { JobSummary, MiniJobSummary } from '../index';\n\nconst Page = ({\n  title,\n  desc,\n  summaryTask,\n  showFullSummaryTask = false,\n  limitWidth = true,\n  children,\n  loading = false,\n  dataTest\n}) => {\n  const loadingEl = typeof loading == 'number' ? <LinearLoader amount={loading} /> : <CircularLoader />;\n  return <div className={cx(styles.container, {\n    [styles.limitedWidth]: limitWidth\n  })} data-test={dataTest}>\n            <header className={styles.header}>\n                <h1 className={styles.title}>{title}</h1>\n                <p className={styles.desc}>{desc}</p>\n            </header>\n            {summaryTask && <Card className={styles.preBody}>\n                    {showFullSummaryTask ? <JobSummary task={summaryTask} dataTest=\"job-summary-container\" /> : <MiniJobSummary task={summaryTask} dataTest=\"mini-job-summary-container\" />}\n                </Card>}\n            <div className={styles.content}>\n                {!!loading && <div className={styles.loading}>\n                        <ComponentCover translucent>\n                            <CenteredContent>{loadingEl}</CenteredContent>\n                        </ComponentCover>\n                    </div>}\n                {children}\n            </div>\n        </div>;\n};\n\nPage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  dataTest: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  limitWidth: PropTypes.bool,\n  loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  showFullSummaryTask: PropTypes.bool,\n  summaryTask: PropTypes.object\n};\nexport { Page };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport styles from './ProgramStages.module.css';\nimport { useProgramStages } from '../../hooks/index';\nimport { StyledField } from '../index';\n\nconst SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR = programStage => !programStage ? i18n.t('One program stage must be selected') : undefined;\n\nconst ProgramStages = ({\n  name,\n  label,\n  selectedProgram,\n  form,\n  validator,\n  dataTest\n}) => {\n  const setProgramStage = val => form.change(name, val);\n\n  const {\n    loading: programStagesLoading,\n    error: programStagesError,\n    validationText: programStagesValidationText,\n    programStages\n  } = useProgramStages(selectedProgram, setProgramStage);\n  return <div className={styles.container}>\n            <StyledField component={SingleSelectFieldFF} name={name} loading={programStagesLoading} label={label} validate={validator} dataTest={dataTest} options={programStages} validationText={programStagesValidationText} error={!!programStagesError} />\n        </div>;\n};\n\nProgramStages.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  form: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  selectedProgram: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { ProgramStages, SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Help, Radio } from '@dhis2/ui';\nimport { optionsPropType } from '../../utils/options';\nimport { FormField } from '../index';\nimport styles from './RadioGroup.module.css';\n\nconst RadioGroup = ({\n  name,\n  label,\n  options,\n  checked,\n  setValue,\n  vertical,\n  helpText,\n  children,\n  dataTest\n}) => {\n  return <FormField label={label} dataTest={dataTest} name={name}>\n            <div className={cx({\n      [styles.vertical]: vertical,\n      [styles.horizontal]: !vertical\n    })}>\n                {options.map(o => <div key={o.value}>\n                        <Radio name={name} value={o.value} label={o.label} checked={o.value == checked} onChange={() => setValue(o.value)} dataTest={`${dataTest}-${o.value}`} />\n                        {o.help && <Help>{o.help}</Help>}\n                    </div>)}\n            </div>\n            {helpText && <Help>{helpText}</Help>}\n            {children && <div className={styles.children}>{children}</div>}\n        </FormField>;\n};\n\nRadioGroup.propTypes = {\n  checked: PropTypes.string.isRequired,\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  options: optionsPropType.isRequired,\n  setValue: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  helpText: PropTypes.string,\n  vertical: PropTypes.bool\n};\nexport { RadioGroup };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { RadioGroup } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta: {\n    error\n  },\n  inputName,\n  ...rest\n}) => <RadioGroup name={inputName} error={error} checked={value} setValue={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst RadioGroupField = ({\n  name,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} inputName={name} {...rest} />;\n};\n\nRadioGroupField.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport { RadioGroupField };","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nexport const ScrollToTop = ({\n  children\n}) => {\n  const history = useHistory();\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      document.getElementsByClassName('app-shell-app')[0]?.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, []);\n  return <>{children}</>;\n};\nScrollToTop.propTypes = {\n  children: PropTypes.node\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { FileUpload as FileUploadGeneric } from '../index';\nimport { SINGLE_FILE_VALIDATOR } from '../FileUpload/FileUpload';\nconst NAME = 'files';\nconst LABEL = i18n.t('Select a file to import values from');\nconst DATATEST = 'input-file-upload';\nconst VALIDATOR = SINGLE_FILE_VALIDATOR;\n\nconst FileUpload = ({\n  helpText\n}) => <FileUploadGeneric name={NAME} label={LABEL} validator={VALIDATOR} dataTest={DATATEST} helpText={helpText} />;\n\nFileUpload.propTypes = {\n  helpText: PropTypes.string\n};\nexport { FileUpload };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ImportButtonStrip as ImportButtonStripGeneric } from '../index';\nconst DRYRUNDATATEST = 'input-dry-run';\nconst IMPORTDATATEST = 'input-import-submit';\nconst DATATEST = 'input-import-button-strip';\n\nconst ImportButtonStrip = ({\n  form\n}) => <ImportButtonStripGeneric form={form} dryRunDataTest={DRYRUNDATATEST} importDataTest={IMPORTDATATEST} dataTest={DATATEST} />;\n\nImportButtonStrip.propTypes = {\n  form: PropTypes.object.isRequired\n};\nexport { ImportButtonStrip };","import React from 'react';\nimport { FormAlerts as FormAlertsGeneric } from '../index';\nconst DATATEST = 'input-form-alerts';\n\nconst FormAlerts = ({\n  alerts\n}) => <FormAlertsGeneric alerts={alerts} dataTest={DATATEST} />;\n\nFormAlerts.propTypes = {\n  alerts: FormAlertsGeneric.propTypes.alerts\n};\nexport { FormAlerts };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nimport { optionsPropType } from '../../utils/options';\nconst formatOptions = [{\n  value: 'json',\n  label: i18n.t('JSON')\n}, {\n  value: 'csv',\n  label: i18n.t('CSV')\n}, {\n  value: 'xml',\n  label: i18n.t('XML')\n}];\nconst formatNoCsvOptions = formatOptions.filter(f => f.value != 'csv');\nconst formatAdxOptions = [...formatOptions, {\n  value: 'adx',\n  label: i18n.t('ADX')\n}];\nconst formatAdxPdfOptions = [...formatAdxOptions, {\n  value: 'pdf',\n  label: i18n.t('PDF')\n}];\nconst formatJsonpOptions = [...formatOptions, {\n  value: 'jsonp',\n  label: i18n.t('JSONP')\n}];\nconst defaultFormatOption = formatOptions[0].value;\nconst NAME = 'format';\nconst DATATEST = 'input-format';\nconst IMPORT_LABEL = i18n.t('What format is the data to import?');\nconst EXPORT_LABEL = i18n.t('What format should the data be exported as?');\n\nconst typeToLabel = type => type === 'import' ? IMPORT_LABEL : EXPORT_LABEL;\n\nconst Format = ({\n  availableFormats,\n  type\n}) => <RadioGroupField name={NAME} label={typeToLabel(type)} options={availableFormats} dataTest={DATATEST} />;\n\nFormat.propTypes = {\n  availableFormats: optionsPropType.isRequired,\n  type: PropTypes.oneOf(['import', 'export'])\n};\nexport { Format, formatOptions, formatNoCsvOptions, formatAdxOptions, formatAdxPdfOptions, formatJsonpOptions, defaultFormatOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultFirstRowIsHeaderOption = false;\nconst NAME = 'firstRowIsHeader';\nconst DATATEST = 'input-first-row-is-header';\nconst SHORT_LABEL = i18n.t('Is the first row a header row?');\nconst LABEL = i18n.t('First row is header');\nconst HELPTEXT = i18n.t('A header row will be ignored during import');\n\nconst FirstRowIsHeader = ({\n  show\n}) => show && <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n            <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n        </FormField>;\n\nFirstRowIsHeader.propTypes = {\n  show: PropTypes.bool.isRequired\n};\nexport { FirstRowIsHeader, defaultFirstRowIsHeaderOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport { StyledField } from '../index';\nimport { useClassKeys } from '../../hooks/index';\nconst NAME = 'classKey';\nconst LABEL = i18n.t('Class key');\nconst DATATEST = 'input-class-key';\n\nconst ClassKey = ({\n  form,\n  prevValue,\n  show = true\n}) => {\n  const setClassKey = val => form.change(NAME, val);\n\n  const {\n    loading: classKeysLoading,\n    error: classKeysError,\n    validationText: classKeysValidationText,\n    classKeys\n  } = useClassKeys(setClassKey, prevValue);\n  return show && <StyledField component={SingleSelectFieldFF} name={NAME} label={LABEL} options={classKeys} loading={classKeysLoading} dataTest={DATATEST} validationText={classKeysValidationText} error={!!classKeysError} filterable />;\n};\n\nClassKey.propTypes = {\n  form: PropTypes.object.isRequired,\n  prevValue: PropTypes.string,\n  show: PropTypes.bool\n};\nexport { ClassKey };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox } from '@dhis2/ui';\nimport { RadioGroupField } from '../index';\nconst strategyOptions = [{\n  value: 'NEW_AND_UPDATES',\n  label: i18n.t('MERGE: Import new values and update existing', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'NEW',\n  label: i18n.t('APPEND: Import new values only', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'UPDATES',\n  label: i18n.t('UPDATE: Only update existing values, ignore new values', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'DELETE',\n  label: i18n.t('DELETE: Remove values included in uploaded file', {\n    nsSeparator: '>'\n  })\n}];\nconst defaultStrategyOption = strategyOptions[0].value;\nconst DELETE_WARNING_TITLE = i18n.t('Data will be deleted');\nconst DELETE_WARNING = i18n.t('Values in the uploaded file will be deleted from the database. Make sure this is the correct action; it cannot be undone.');\nconst NAME = 'strategy';\nconst DATATEST = 'input-strategy';\nconst LABEL = i18n.t('Strategy');\n\nconst Strategy = ({\n  value\n}) => <RadioGroupField name={NAME} label={LABEL} options={strategyOptions} dataTest={DATATEST} vertical>\n        {value === 'DELETE' && <NoticeBox title={DELETE_WARNING_TITLE} warning>\n                {DELETE_WARNING}\n            </NoticeBox>}\n    </RadioGroupField>;\n\nStrategy.propTypes = {\n  value: PropTypes.string.isRequired\n};\nexport { Strategy, defaultStrategyOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultPreheatCacheOption = false;\nconst NAME = 'preheatCache';\nconst DATATEST = 'input-preheat-cache';\nconst SHORT_LABEL = i18n.t('Preheat cache');\nconst LABEL = i18n.t('Preheat cache to make large imports faster');\nconst HELPTEXT = i18n.t('Large imports will be processed faster but will consume more resources');\n\nconst PreheatCache = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { PreheatCache, defaultPreheatCacheOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultSkipAuditOption = false;\nconst NAME = 'skipAudit';\nconst DATATEST = 'input-has-authority-to-skip-audit';\nconst SHORT_LABEL = i18n.t('Skip audit');\nconst LABEL = i18n.t('Skip audit, meaning audit values will not be generated');\nconst HELPTEXT = i18n.t('Improves performance at the cost of ability to audit changes');\n\nconst SkipAudit = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { SkipAudit, defaultSkipAuditOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultSkipExistingCheckOption = false;\nconst NAME = 'skipExistingCheck';\nconst DATATEST = 'input-skip-exisiting-check';\nconst SHORT_LABEL = i18n.t('Skip exisiting check');\nconst LABEL = i18n.t('Skip checks for existing data values');\nconst HELPTEXT = i18n.t('Improves performance and should only be used for empty databases or when the data values to import do not exist already');\n\nconst SkipExistingCheck = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { SkipExistingCheck, defaultSkipExistingCheckOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst identifierOptions = [{\n  value: 'UID',\n  label: i18n.t('UID')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}, {\n  value: 'AUTO',\n  label: i18n.t('Auto')\n}];\nconst defaultIdentifierOption = identifierOptions[0].value;\nconst NAME = 'identifier';\nconst DATATEST = 'input-identifier';\nconst LABEL = i18n.t('Identifier');\nconst HELPTEXT = i18n.t('Identifier scheme to use for reference matching');\n\nconst Identifier = () => <RadioGroupField name={NAME} label={LABEL} options={identifierOptions} helpText={HELPTEXT} dataTest={DATATEST} />;\n\nexport { Identifier, defaultIdentifierOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst importReportModeOptions = [{\n  value: 'ERRORS',\n  label: i18n.t('ERRORS: Only include reports for objects that have errors', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'FULL',\n  label: i18n.t('FULL: Reports for all objects imported', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'DEBUG',\n  label: i18n.t('DEBUG: Reports for all objects imported along with their names (if available)', {\n    nsSeparator: '>'\n  })\n}];\nconst defaultImportReportModeOption = importReportModeOptions[0].value;\nconst NAME = 'importReportMode';\nconst DATATEST = 'input-import-report-mode';\nconst LABEL = i18n.t('Import report mode');\nconst HELPTEXT = i18n.t('Controls what should be reported after the import is done');\n\nconst ImportReportMode = () => <RadioGroupField name={NAME} label={LABEL} options={importReportModeOptions} helpText={HELPTEXT} dataTest={DATATEST} vertical />;\n\nexport { ImportReportMode, defaultImportReportModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst preheatModeOptions = [{\n  value: 'REFERENCE',\n  label: i18n.t('Intelligent scan (reference)')\n}, {\n  value: 'ALL',\n  label: i18n.t('All')\n}, {\n  value: 'NONE',\n  label: i18n.t('None')\n}];\nconst defaultPreheatModeOption = preheatModeOptions[0].value;\nconst NAME = 'preheatMode';\nconst DATATEST = 'input-preheat-mode';\nconst LABEL = i18n.t('Preheat mode');\nconst HELPTEXT = i18n.t('Controls the level of preheating that should be done');\n\nconst PreheatMode = () => <RadioGroupField name={NAME} label={LABEL} options={preheatModeOptions} helpText={HELPTEXT} dataTest={DATATEST} />;\n\nexport { PreheatMode, defaultPreheatModeOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox } from '@dhis2/ui';\nimport { RadioGroupField } from '../index';\nconst importStrategyOptions = [{\n  value: 'CREATE_AND_UPDATE',\n  label: i18n.t('MERGE: Import new values and update existing', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'CREATE',\n  label: i18n.t('APPEND: Import new values only', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'UPDATES',\n  label: i18n.t('UPDATE: Only update existing values, ignore new values', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'DELETE',\n  label: i18n.t('DELETE: Remove values included in uploaded file', {\n    nsSeparator: '>'\n  })\n}];\nconst defaultImportStrategyOption = importStrategyOptions[0].value;\nconst DELETE_WARNING_TITLE = i18n.t('Data will be deleted');\nconst DELETE_WARNING = i18n.t('Values in the uploaded file will be deleted from the database. Make sure this is the correct action; it cannot be undone.');\nconst NAME = 'importStrategy';\nconst DATATEST = 'input-import-strategy';\nconst LABEL = i18n.t('Import strategy');\n\nconst ImportStrategy = ({\n  value\n}) => <RadioGroupField name={NAME} label={LABEL} options={importStrategyOptions} dataTest={DATATEST} vertical>\n        {value === 'DELETE' && <NoticeBox title={DELETE_WARNING_TITLE} warning>\n                {DELETE_WARNING}\n            </NoticeBox>}\n    </RadioGroupField>;\n\nImportStrategy.propTypes = {\n  value: PropTypes.string.isRequired\n};\nexport { ImportStrategy, defaultImportStrategyOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst atomicModeOptions = [{\n  value: 'ALL',\n  label: i18n.t('Do not import')\n}, {\n  value: 'NONE',\n  label: i18n.t('Import')\n}];\nconst defaultAtomicModeOption = atomicModeOptions[0].value;\nconst NAME = 'atomicMode';\nconst DATATEST = 'input-atomic-mode';\nconst LABEL = i18n.t('Atomic mode');\nconst HELPTEXT = i18n.t('Whether to import objects even if some references do not exist');\n\nconst AtomicMode = () => <RadioGroupField name={NAME} label={LABEL} options={atomicModeOptions} helpText={HELPTEXT} dataTest={DATATEST} />;\n\nexport { AtomicMode, defaultAtomicModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst mergeModeOptions = [{\n  value: 'MERGE',\n  label: i18n.t('MERGE: Only overwrite the old property if the new property value is not-null', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'REPLACE',\n  label: i18n.t('REPLACE: Overwrite regardless of whether the new property value is null', {\n    nsSeparator: '>'\n  })\n}];\nconst defaultMergeModeOption = mergeModeOptions[0].value;\nconst NAME = 'mergeMode';\nconst DATATEST = 'input-merge-mode';\nconst LABEL = i18n.t('Merge mode');\nconst HELPTEXT = i18n.t('Strategy to take when merging two objects');\n\nconst MergeMode = () => <RadioGroupField name={NAME} label={LABEL} options={mergeModeOptions} helpText={HELPTEXT} dataTest={DATATEST} vertical />;\n\nexport { MergeMode, defaultMergeModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst flushModeOptions = [{\n  value: 'AUTO',\n  label: i18n.t('Auto (recommended)')\n}, {\n  value: 'OBJECT',\n  label: i18n.t('Object (debugging purposes)')\n}];\nconst defaultFlushModeOption = flushModeOptions[0].value;\nconst NAME = 'flushMode';\nconst DATATEST = 'input-flush-mode';\nconst LABEL = i18n.t('Flush mode');\nconst HELPTEXT = i18n.t('Controls when to flush the internal cache');\n\nconst FlushMode = () => <RadioGroupField name={NAME} label={LABEL} options={flushModeOptions} helpText={HELPTEXT} dataTest={DATATEST} />;\n\nexport { FlushMode, defaultFlushModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst inclusionStrategyOptions = [{\n  value: 'NON_NULL',\n  label: i18n.t('NON NULL: Includes properties which are not null', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'ALWAYS',\n  label: i18n.t('ALWAYS: Include all properties', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'NON_EMPTY',\n  label: i18n.t('NON EMPTY: Include non-empty properties', {\n    nsSeparator: '>'\n  })\n}];\nconst defaultInclusionStrategyOption = inclusionStrategyOptions[0].value;\nconst NAME = 'inclusionStrategy';\nconst DATATEST = 'input-inclusion-strategy';\nconst LABEL = i18n.t('Inclusion strategy');\nconst HELPTEXT = i18n.t('Controls which properties to include');\n\nconst InclusionStrategy = () => <RadioGroupField name={NAME} label={LABEL} options={inclusionStrategyOptions} helpText={HELPTEXT} dataTest={DATATEST} vertical />;\n\nexport { InclusionStrategy, defaultInclusionStrategyOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultSkipSharingOption = false;\nconst NAME = 'skipSharing';\nconst DATATEST = 'input-skip-sharing';\nconst SHORT_LABEL = i18n.t('Skip sharing');\nconst LABEL = i18n.t('Skip sharing and access settings');\nconst HELPTEXT = i18n.t('Skip sharing properties, do not merge sharing when doing updates, and do not add user group access when creating new objects');\n\nconst SkipSharing = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { SkipSharing, defaultSkipSharingOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultSkipValidationOption = false;\nconst NAME = 'skipValidation';\nconst DATATEST = 'input-skip-validation';\nconst SHORT_LABEL = i18n.t('Skip validation');\nconst LABEL = i18n.t('Skip validation for import (not recommended)');\n\nconst SkipValidation = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { SkipValidation, defaultSkipValidationOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst defaultIsAsyncOption = true;\nconst NAME = 'isAsync';\nconst DATATEST = 'input-is-async';\nconst SHORT_LABEL = i18n.t('Async');\nconst LABEL = i18n.t('Asynchronous import');\nconst HELPTEXT = i18n.t('Controls whether the import is done asynchronously');\n\nconst IsAsync = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} helpText={HELPTEXT} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { IsAsync, defaultIsAsyncOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { OrgUnitTreeField, FormField } from '../index';\nimport { SINGLE_ORG_VALIDATOR, SINGLE_EXACT_ORG_VALIDATOR } from '../OrgUnitTree/OrgUnitTreeField';\nconst NAME = 'selectedOrgUnits';\nconst LABEL = i18n.t('Organisation unit(s) to export data from');\nconst DATATEST = 'input-org-unit-tree';\n\nconst OrgUnitTree = ({\n  multiSelect\n}) => {\n  const orgValidator = multiSelect ? SINGLE_ORG_VALIDATOR : SINGLE_EXACT_ORG_VALIDATOR;\n  const validator = composeValidators(hasValue, orgValidator);\n  return <FormField label={LABEL} dataTest={DATATEST}>\n            <OrgUnitTreeField name={NAME} validator={validator} multiSelect={multiSelect} label={LABEL} dataTest={DATATEST} />\n        </FormField>;\n};\n\nOrgUnitTree.defaultProps = {\n  multiSelect: true\n};\nOrgUnitTree.propTypes = {\n  multiSelect: PropTypes.bool\n};\nexport { OrgUnitTree };","const resourceTypes = {\n  DATASET: 1,\n  PROGRAM: 2,\n  TETYPE: 3,\n  USER: 4\n};\nexport { resourceTypes };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedDataSets';\nconst LABEL = i18n.t('Which data sets should be included in export?');\nconst DATATEST = 'input-data-set-picker';\nconst LISTNAME = 'dataSetPicker';\nconst FILTERLABEL = i18n.t('Filter data sets');\nconst SELECTEDLABEL = i18n.t('Selected data sets');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the data sets!');\nconst RESOURCETYPE = resourceTypes.DATASET;\n\nconst SINGLE_DATASET_VALIDATOR = selectedDataSets => selectedDataSets.length == 0 ? i18n.t('At least one data set must be selected') : undefined;\n\nconst SINGLE_EXACT_DATASET_VALIDATOR = selectedDataSets => selectedDataSets.length != 1 ? i18n.t('One data set must be selected') : undefined;\n\nconst DataSetPicker = ({\n  multiSelect = true\n}) => {\n  const dataSetValidator = multiSelect ? SINGLE_DATASET_VALIDATOR : SINGLE_EXACT_DATASET_VALIDATOR;\n  const validator = composeValidators(hasValue, dataSetValidator);\n  return <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={LABEL} filterLabel={FILTERLABEL} selectedLabel={SELECTEDLABEL} dataTest={DATATEST} validator={validator} multiSelect={multiSelect} />;\n};\n\nDataSetPicker.propTypes = {\n  multiSelect: PropTypes.bool\n};\nexport { DataSetPicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedPrograms';\nconst LABEL = i18n.t('Program to export events from');\nconst DATATEST = 'input-program-picker';\nconst LISTNAME = 'selectedPrograms';\nconst FILTERLABEL = i18n.t('Filter programs');\nconst SELECTEDLABEL = i18n.t('Selected programs');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the programs!');\nconst RESOURCETYPE = resourceTypes.PROGRAM;\n\nconst SINGLE_PROGRAM_VALIDATOR = selectedPrograms => selectedPrograms.length == 0 ? i18n.t('At least one program must be selected') : undefined;\n\nconst SINGLE_EXACT_PROGRAM_VALIDATOR = selectedPrograms => !selectedPrograms ? i18n.t('One program must be selected') : undefined;\n\nconst ProgramPicker = ({\n  multiSelect,\n  label,\n  show,\n  ...rest\n}) => {\n  const programValidator = multiSelect ? SINGLE_PROGRAM_VALIDATOR : SINGLE_EXACT_PROGRAM_VALIDATOR;\n  const validator = composeValidators(hasValue, programValidator);\n  return show && <div style={{\n    maxWidth: '480px'\n  }}>\n                <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={label} filterLabel={FILTERLABEL} selectedLabel={SELECTEDLABEL} dataTest={DATATEST} multiSelect={multiSelect} validator={validator} autoSelectFirst {...rest} />\n            </div>;\n};\n\nProgramPicker.defaultProps = {\n  label: LABEL,\n  multiSelect: false,\n  show: true\n};\nProgramPicker.propTypes = {\n  label: PropTypes.string,\n  multiSelect: PropTypes.bool,\n  show: PropTypes.bool\n};\nexport { ProgramPicker };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst NAME = 'includeChildren';\nconst DATATEST = 'input-include-children';\nconst SHORT_LABEL = i18n.t('Include first level units');\nconst LABEL = i18n.t('Include the first level of organisation units inside selections');\n\nconst IncludeChildren = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { IncludeChildren };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst NAME = 'includeDeleted';\nconst DATATEST = 'input-include-deleted';\nconst SHORT_LABEL = i18n.t('Include deleted');\nconst LABEL = i18n.t('Include deleted data in export');\n\nconst IncludeDeleted = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { IncludeDeleted };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst compressionOptions = [{\n  value: 'zip',\n  label: i18n.t('Zip')\n}, {\n  value: 'gz',\n  label: i18n.t('GZip')\n}, {\n  value: '',\n  label: i18n.t('Uncompressed')\n}];\nconst defaultCompressionOption = compressionOptions[0].value;\nconst NAME = 'compression';\nconst DATATEST = 'input-compression';\nconst LABEL = i18n.t('Compression mode');\n\nconst Compression = () => <RadioGroupField name={NAME} label={LABEL} options={compressionOptions} dataTest={DATATEST} />;\n\nexport { Compression, defaultCompressionOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst inclusionOptions = [{\n  value: 'SELECTED',\n  label: i18n.t('SELECTED: Only include selected organisation unit', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'CHILDREN',\n  label: i18n.t('CHILDREN: Include the first level of units inside selections', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'DESCENDANTS',\n  label: i18n.t('DESCENDANTS: Include all units inside selections', {\n    nsSeparator: '>'\n  })\n}];\nconst defaultInclusionOption = inclusionOptions[0].value;\nconst NAME = 'inclusion';\nconst DATATEST = 'input-inclusion';\nconst LABEL = i18n.t('How should organisation units inside the selections be included?');\n\nconst Inclusion = () => <RadioGroupField name={NAME} label={LABEL} options={inclusionOptions} dataTest={DATATEST} vertical />;\n\nexport { Inclusion, defaultInclusionOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'startDate';\nconst DATATEST = 'input-start-date';\nconst LABEL = i18n.t('Start date');\nconst VALIDATOR = composeValidators(hasValue, DATE_VALIDATOR);\n\nconst StartDate = () => <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nexport { StartDate };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'endDate';\nconst DATATEST = 'input-end-date';\nconst LABEL = i18n.t('End date');\nconst VALIDATOR = composeValidators(hasValue, DATE_VALIDATOR);\n\nconst EndDate = () => <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nexport { EndDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@dhis2/ui';\nconst DATATEST = 'input-export-submit';\n\nconst ExportButton = ({\n  label\n}) => <div style={{\n  marginBottom: 'var(--spacers-dp24)'\n}}>\n        <Button primary type=\"submit\" dataTest={DATATEST}>\n            {label}\n        </Button>\n    </div>;\n\nExportButton.propTypes = {\n  label: PropTypes.string.isRequired\n};\nexport { ExportButton };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { ProgramStages as ProgramStagesGeneric } from '../';\nimport { SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR } from '../ProgramStages/ProgramStages';\nconst VALIDATOR = composeValidators(hasValue, SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR);\nconst NAME = 'programStage';\nconst LABEL = i18n.t('Which program stage should be included?');\nconst DATATEST = 'input-program-stage-select';\n\nconst ProgramStages = props => <ProgramStagesGeneric name={NAME} label={LABEL} validator={VALIDATOR} dataTest={DATATEST} {...props} />;\n\nexport { ProgramStages };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { Schemas } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst SINGLE_SCHEMA_VALIDATOR = checkedSchemas => checkedSchemas.length == 0 ? i18n.t('At least one schema must be selected') : undefined;\n\nconst Wrapper = ({\n  input: {\n    onChange\n  },\n  meta,\n  ...rest\n}) => <Schemas meta={meta} setCheckedSchemas={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst SchemasField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nSchemasField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { SchemasField, SINGLE_SCHEMA_VALIDATOR };","import React from 'react';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { SchemasField } from '../index';\nimport { SINGLE_SCHEMA_VALIDATOR } from '../Schemas/SchemasField';\nconst NAME = 'checkedSchemas';\nconst VALIDATOR = composeValidators(hasValue, SINGLE_SCHEMA_VALIDATOR);\nconst DATATEST = 'input-schemas';\nconst EXCLUDE_SCHEMAS = new Set(['analyticsTableHooks', 'charts', 'constants', 'dataElementDimensions', 'dataEntryForms', 'dataSetNotificationTemplates', 'dataStores', 'documents', 'eventCharts', 'eventReports', 'icons', 'jobConfigurations', 'messageConversations', 'metadataVersions', 'minMaxDataElements', 'oAuth2Clients', 'programDataElements', 'programNotificationTemplates', 'pushAnalysis', 'reportTables', 'reportingRates', 'reports', 'sections', 'smsCommands', 'sqlViews', 'trackedEntityInstanceFilters', 'validationNotificationTemplates']);\n\nconst Schemas = () => <SchemasField name={NAME} excludeSchemas={EXCLUDE_SCHEMAS} validator={VALIDATOR} checkedByDefault dataTest={DATATEST} />;\n\nexport { Schemas };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport { StyledField } from '../index';\nconst objectTypeOptions = [{\n  value: 'dataSets',\n  label: i18n.t('Data sets')\n}, {\n  value: 'programs',\n  label: i18n.t('Programs')\n}, {\n  value: 'categoryCombos',\n  label: i18n.t('Category combination')\n}, {\n  value: 'dashboards',\n  label: i18n.t('Dashboard')\n}, {\n  value: 'dataElementGroups',\n  label: i18n.t('Data element groups')\n}, {\n  value: 'optionSets',\n  label: i18n.t('Option sets')\n}];\nconst defaultObjectTypeOption = objectTypeOptions[0].value;\nconst NAME = 'objectType';\nconst LABEL = i18n.t('Object type');\nconst DATATEST = 'input-object-type';\n\nconst ObjectType = () => <div style={{\n  maxWidth: '480px'\n}}>\n        <StyledField component={SingleSelectFieldFF} name={NAME} label={LABEL} options={objectTypeOptions} dataTest={DATATEST} filled initialFocus />\n    </div>;\n\nexport { ObjectType, defaultObjectTypeOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport { StyledField } from '../index';\nimport { useObjects } from '../../hooks/index';\n\nconst SINGLE_EXACT_OBJECT_VALIDATOR = object => !object ? i18n.t('One object must be selected') : undefined;\n\nconst NAME = 'object';\nconst LABEL = i18n.t('Object');\nconst VALIDATOR = composeValidators(hasValue, SINGLE_EXACT_OBJECT_VALIDATOR);\nconst DATATEST = 'input-object-select';\n\nconst Objects = ({\n  objectType,\n  form\n}) => {\n  const setObjectListSelected = val => form.change(NAME, val);\n\n  const {\n    loading: objectsLoading,\n    error: objectsError,\n    validationText: objectsValidationText,\n    objects\n  } = useObjects(objectType, setObjectListSelected);\n  return <div style={{\n    maxWidth: '480px'\n  }}>\n            <StyledField component={SingleSelectFieldFF} loading={objectsLoading} name={NAME} label={LABEL} options={objects} validate={VALIDATOR} dataTest={DATATEST} validationText={objectsValidationText} error={!!objectsError} filterable />\n        </div>;\n};\n\nObjects.propTypes = {\n  form: PropTypes.object.isRequired,\n  objectType: PropTypes.string.isRequired\n};\nexport { Objects };","import { useState, useEffect } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataEngine } from '@dhis2/app-runtime';\n\nconst listQuery = resource => ({\n  data: {\n    resource: resource,\n    fields: 'id,displayName',\n    params: {\n      paging: 'false'\n    }\n  }\n});\n\nconst useObjects = (type, setSelected) => {\n  const engine = useDataEngine();\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [objects, setObjects] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    setSelected(undefined);\n    engine.query(listQuery(type), {\n      onComplete: data => {\n        const list = data.data[type];\n        const formattedList = list.map(e => ({\n          value: e.id,\n          label: e.displayName\n        }));\n        setObjects(formattedList);\n        setSelected(formattedList[0].value);\n        setLoading(false);\n      },\n      onError: error => {\n        setError(error);\n        console.error('useObjects error: ', error);\n      }\n    });\n  }, [type]);\n  const validationText = error && `${i18n.t('Something went wrong when loading the objects')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    objects\n  };\n};\n\nexport { useObjects };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { DataElementIdScheme as DataElementIdSchemeGeneric } from '../index';\nconst dataElementIdSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('UID')\n}, {\n  value: 'CODE',\n  label: i18n.t('CODE')\n}, {\n  value: 'NAME',\n  label: i18n.t('NAME')\n}];\nconst defaultDataElementIdSchemeOption = dataElementIdSchemeOptions[0].value;\nconst NAME = 'dataElementIdScheme';\nconst DATATEST = 'input-data-element-id-scheme';\nconst LABEL = i18n.t('Data element ID scheme');\n\nconst DataElementIdScheme = () => <DataElementIdSchemeGeneric name={NAME} label={LABEL} dataElementIdSchemeOptions={dataElementIdSchemeOptions} dataTest={DATATEST} />;\n\nexport { DataElementIdScheme, defaultDataElementIdSchemeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { EventIdScheme as EventIdSchemeGeneric } from '../index';\nconst eventIdSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}];\nconst defaultEventIdSchemeOption = eventIdSchemeOptions[0].value;\nconst NAME = 'eventIdScheme';\nconst DATATEST = 'input-event-id-scheme';\nconst LABEL = i18n.t('Event ID scheme');\n\nconst EventIdScheme = () => <EventIdSchemeGeneric name={NAME} label={LABEL} eventIdSchemeOptions={eventIdSchemeOptions} dataTest={DATATEST} />;\n\nexport { EventIdScheme, defaultEventIdSchemeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { IdScheme as IdSchemeGeneric } from '../index';\nconst idSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}];\nconst defaultIdSchemeOption = idSchemeOptions[0].value;\nconst NAME = 'idScheme';\nconst DATATEST = 'input-id-scheme';\nconst LABEL = i18n.t('ID scheme');\n\nconst IdScheme = () => <IdSchemeGeneric name={NAME} label={LABEL} idSchemeOptions={idSchemeOptions} dataTest={DATATEST} />;\n\nexport { IdScheme, defaultIdSchemeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { OrgUnitIdScheme as OrgUnitIdSchemeGeneric } from '../index';\nconst orgUnitIdSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}, {\n  value: 'NAME',\n  label: i18n.t('Name')\n}];\nconst defaultOrgUnitIdSchemeOption = orgUnitIdSchemeOptions[0].value;\nconst NAME = 'orgUnitIdScheme';\nconst DATATEST = 'input-org-unit-id-scheme';\nconst LABEL = i18n.t('Organisation unit ID scheme');\n\nconst OrgUnitIdScheme = () => <OrgUnitIdSchemeGeneric name={NAME} label={LABEL} orgUnitIdSchemeOptions={orgUnitIdSchemeOptions} dataTest={DATATEST} />;\n\nexport { OrgUnitIdScheme, defaultOrgUnitIdSchemeOption };","const hasAuthorityToSkipAudit = authorities => authorities.includes('ALL') || authorities.includes('F_SKIP_DATA_IMPORT_AUDIT');\n\nconst hasAuthorityToSelectAllOrgUnits = authorities => authorities.includes('ALL');\n\nexport { hasAuthorityToSkipAudit, hasAuthorityToSelectAllOrgUnits };","import React, { useContext } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { UserContext } from '../../contexts/index';\nimport { hasAuthorityToSelectAllOrgUnits } from '../WithAuthority/predicates';\nimport { RadioGroupField } from '../index';\nconst orgUnitSelectionModeOptions = [{\n  value: 'SELECTED',\n  label: i18n.t('SELECTED: Only include selected organisation unit', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'CHILDREN',\n  label: i18n.t('CHILDREN: Include the first level of units inside selections', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'DESCENDANTS',\n  label: i18n.t('DESCENDANTS: Include all units inside selections', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'ACCESSIBLE',\n  label: i18n.t('ACCESSIBLE: Data view organisation units associated with the current user', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'CAPTURE',\n  label: i18n.t('CAPTURE: Data capture organisation units associated with the current user', {\n    nsSeparator: '>'\n  })\n}, {\n  value: 'ALL',\n  label: i18n.t('ALL: All organisation units in the system', {\n    nsSeparator: '>'\n  })\n}];\nconst defaultOrgUnitSelectionModeOption = orgUnitSelectionModeOptions[0].value;\nconst NAME = 'ouMode';\nconst DATATEST = 'input-ouMode';\nconst LABEL = i18n.t('How should organisation units inside the selections be included?');\n\nconst OrgUnitMode = () => {\n  const user = useContext(UserContext);\n  const canSelectAllOrgUnits = user ? hasAuthorityToSelectAllOrgUnits(user.authorities) : false;\n  const options = canSelectAllOrgUnits ? orgUnitSelectionModeOptions : orgUnitSelectionModeOptions.filter(({\n    value\n  }) => value != 'ALL');\n  return <RadioGroupField name={NAME} label={LABEL} options={options} dataTest={DATATEST} vertical />;\n};\n\nexport { OrgUnitMode, defaultOrgUnitSelectionModeOption };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst teiTypeFilterOptions = [{\n  value: 'NONE',\n  label: i18n.t('None')\n}, {\n  value: 'PROGRAM',\n  label: i18n.t('Program')\n}, {\n  value: 'TE',\n  label: i18n.t('Tracked entity type')\n}];\nconst defaultTEITypeFilterOption = teiTypeFilterOptions[0].value;\nconst NAME = 'teiTypeFilter';\nconst DATATEST = 'input-tei-type-filter';\nconst LABEL = i18n.t('Filter by');\n\nconst TEITypeFilter = () => <RadioGroupField name={NAME} label={LABEL} options={teiTypeFilterOptions} dataTest={DATATEST} />;\n\nexport { TEITypeFilter, defaultTEITypeFilterOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst programStatusOptions = [{\n  value: '',\n  label: i18n.t('All statuses')\n}, {\n  value: 'ACTIVE',\n  label: i18n.t('Active')\n}, {\n  value: 'COMPLETED',\n  label: i18n.t('Completed')\n}, {\n  value: 'CANCELLED',\n  label: i18n.t('Cancelled')\n}];\nconst defaultProgramStatusOption = programStatusOptions[0].value;\nconst NAME = 'programStatus';\nconst DATATEST = 'input-program-status';\nconst LABEL = i18n.t('Include only entities with status');\n\nconst ProgramStatus = ({\n  show\n}) => show && <RadioGroupField name={NAME} label={LABEL} options={programStatusOptions} dataTest={DATATEST} />;\n\nProgramStatus.propTypes = {\n  show: PropTypes.bool\n};\nexport { ProgramStatus, defaultProgramStatusOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst followUpStatusOptions = [{\n  value: 'ALL',\n  label: i18n.t('All')\n}, {\n  value: 'TRUE',\n  label: i18n.t('Marked for follow-up')\n}, {\n  value: 'FALSE',\n  label: i18n.t('Not marked for follow-up')\n}];\nconst defaultFollowUpStatusOption = followUpStatusOptions[0].value;\nconst NAME = 'followUpStatus';\nconst DATATEST = 'input-follow-up-status';\nconst LABEL = i18n.t('Include only entities with follow-up status');\n\nconst FollowUpStatus = ({\n  show\n}) => show && <RadioGroupField name={NAME} label={LABEL} options={followUpStatusOptions} dataTest={DATATEST} />;\n\nFollowUpStatus.propTypes = {\n  show: PropTypes.bool\n};\nexport { FollowUpStatus, defaultFollowUpStatusOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'programStartDate';\nconst DATATEST = 'input-program-start-date';\nconst LABEL = i18n.t('Start date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst ProgramStartDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nProgramStartDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { ProgramStartDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'programEndDate';\nconst DATATEST = 'input-program-end-date';\nconst LABEL = i18n.t('End date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst ProgramEndDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nProgramEndDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { ProgramEndDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedTETypes';\nconst DATATEST = 'input-te-type-picker';\nconst LABEL = i18n.t('Tracked entity types');\nconst LISTNAME = 'selectedTETypes';\nconst FILTERLABEL = i18n.t('Filter tracked entity types by name');\nconst SELECTEDLABEL = i18n.t('Selected tracked entity types');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the tracked entity types!');\nconst RESOURCETYPE = resourceTypes.TETYPE;\n\nconst SINGLE_TETYPE_VALIDATOR = selectedTypes => selectedTypes.length == 0 ? i18n.t('At least one tracked entity type must be selected') : undefined;\n\nconst SINGLE_EXACT_TETYPE_VALIDATOR = selectedTypes => !selectedTypes ? i18n.t('One tracked entity type must be selected') : undefined;\n\nconst TETypePicker = ({\n  multiSelect,\n  show,\n  ...rest\n}) => {\n  const teTypeValidator = multiSelect ? SINGLE_TETYPE_VALIDATOR : SINGLE_EXACT_TETYPE_VALIDATOR;\n  const validator = composeValidators(hasValue, teTypeValidator);\n  return show && <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={LABEL} filterLabel={FILTERLABEL} selectedLabel={SELECTEDLABEL} dataTest={DATATEST} multiSelect={multiSelect} validator={validator} withActions={false} autoSelectFirst={true} {...rest} />;\n};\n\nTETypePicker.defaultProps = {\n  multiSelect: false\n};\nTETypePicker.propTypes = {\n  multiSelect: PropTypes.bool,\n  show: PropTypes.bool\n};\nexport { TETypePicker };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst lastUpdatedFilterOptions = [{\n  value: 'NONE',\n  label: i18n.t('Do not filter by last updated date')\n}, {\n  value: 'DATE',\n  label: i18n.t('Start/end dates')\n}, {\n  value: 'DURATION',\n  label: i18n.t('Time since last updated')\n}];\nconst defaultLastUpdatedFilterOption = lastUpdatedFilterOptions[0].value;\nconst NAME = 'lastUpdatedFilter';\nconst DATATEST = 'input-last-updated-filter';\nconst LABEL = i18n.t('Filter by last updated date');\n\nconst LastUpdatedFilter = () => <RadioGroupField name={NAME} label={LABEL} options={lastUpdatedFilterOptions} dataTest={DATATEST} />;\n\nexport { LastUpdatedFilter, defaultLastUpdatedFilterOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'lastUpdatedStartDate';\nconst DATATEST = 'input-last-updated-start-date';\nconst LABEL = i18n.t('Last updated start date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst LastUpdatedStartDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nLastUpdatedStartDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { LastUpdatedStartDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { composeValidators } from '@dhis2/ui';\nimport { DatePickerField } from '../index';\nimport { OPTIONAL_DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'lastUpdatedEndDate';\nconst DATATEST = 'input-last-updated-end-date';\nconst LABEL = i18n.t('Last updated end date');\nconst VALIDATOR = composeValidators(OPTIONAL_DATE_VALIDATOR);\n\nconst LastUpdatedEndDate = ({\n  show\n}) => show && <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nLastUpdatedEndDate.propTypes = {\n  show: PropTypes.bool\n};\nexport { LastUpdatedEndDate };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm; // (\\d+d)?: one or more numbers followed by d; d for days\n// rest of the capturing groups are similar to the one described above\n\nconst durationRegex = /^(\\d+d)?(\\d+h)?(\\d+m)?(\\d+s)?$/;\n\nconst DURATION_VALIDATOR = duration => !duration || duration.match(durationRegex) ? undefined : i18n.t('Invalid duration');\n\nconst formatHelpText = `${i18n.t('Format')}: 00d00h00m00s`;\nconst exampleDuration = '100d5h30m';\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta: {\n    error\n  },\n  inputName,\n  label,\n  dataTest\n}) => <FormField label={label} dataTest={dataTest}>\n        <InputField name={inputName} value={value} onChange={({\n    value\n  }) => onChange(value)} inputWidth=\"200px\" error={!!error} validationText={error} helpText={formatHelpText} placeholder={exampleDuration} />\n    </FormField>;\n\nWrapper.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  input: PropTypes.shape({\n    value: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string\n  }).isRequired\n};\n\nconst DurationField = ({\n  name,\n  validator,\n  ...rest\n}) => <Field component={Wrapper} name={name} inputName={name} validate={validator} {...rest} />;\n\nDurationField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func.isRequired\n};\nexport { DurationField, DURATION_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { DurationField } from '../index';\nimport { DURATION_VALIDATOR } from '../Duration/DurationField';\nconst NAME = 'lastUpdatedDuration';\nconst DATATEST = 'input-last-updated-duration';\nconst LABEL = i18n.t('Last updated duration');\nconst VALIDATOR = composeValidators(hasValue, DURATION_VALIDATOR);\n\nconst LastUpdatedDuration = ({\n  show\n}) => show && <DurationField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nLastUpdatedDuration.propTypes = {\n  show: PropTypes.bool\n};\nexport { LastUpdatedDuration };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../index';\nconst assignedUserModeOptions = [{\n  value: 'ANY',\n  label: i18n.t('Any user')\n}, {\n  value: 'CURRENT',\n  label: i18n.t('Current user')\n}, {\n  value: 'NONE',\n  label: i18n.t('None')\n}, {\n  value: 'PROVIDED',\n  label: i18n.t('Selected users')\n}];\nconst defaultAssignedUserModeOption = assignedUserModeOptions[0].value;\nconst NAME = 'assignedUserMode';\nconst DATATEST = 'input-assigned-user-mode';\nconst LABEL = i18n.t('Assigned user mode');\n\nconst AssignedUserMode = () => <RadioGroupField name={NAME} label={LABEL} options={assignedUserModeOptions} dataTest={DATATEST} />;\n\nexport { AssignedUserMode, defaultAssignedUserModeOption };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui';\nimport { ResourcePickerField } from '../index';\nimport { resourceTypes } from '../ResourcePicker/resourceTypes';\nconst NAME = 'selectedUsers';\nconst DATATEST = 'input-user-picker';\nconst LABEL = i18n.t('Which users should be used?');\nconst LISTNAME = 'userPicker';\nconst FILTERLABEL = i18n.t('Filter users');\nconst SELECTEDLABEL = i18n.t('Selected users');\nconst ERRORMESSAGE = i18n.t('Something went wrong when loading the users!');\nconst RESOURCETYPE = resourceTypes.USER;\n\nconst SINGLE_USER_VALIDATOR = selectedUsers => selectedUsers.length == 0 ? i18n.t('At least one user must be selected') : undefined;\n\nconst SINGLE_EXACT_USER_VALIDATOR = selectedUsers => selectedUsers.length != 1 ? i18n.t('One user must be selected') : undefined;\n\nconst UserPicker = ({\n  multiSelect,\n  show,\n  ...rest\n}) => {\n  const userValidator = multiSelect ? SINGLE_USER_VALIDATOR : SINGLE_EXACT_USER_VALIDATOR;\n  const validator = composeValidators(hasValue, userValidator);\n  return show && <ResourcePickerField name={NAME} resourceType={RESOURCETYPE} errorMessage={ERRORMESSAGE} listName={LISTNAME} label={LABEL} filterLabel={FILTERLABEL} selectedLabel={SELECTEDLABEL} dataTest={DATATEST} multiSelect={multiSelect} validator={validator} withActions={true} {...rest} />;\n};\n\nUserPicker.defaultProps = {\n  multiSelect: true\n};\nUserPicker.propTypes = {\n  multiSelect: PropTypes.bool,\n  show: PropTypes.bool\n};\nexport { UserPicker };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\nconst NAME = 'includeAllAttributes';\nconst DATATEST = 'input-include-all-attributes';\nconst SHORT_LABEL = i18n.t('Include all attributes');\nconst LABEL = i18n.t('Include all attributes');\n\nconst IncludeAllAttributes = () => <FormField label={SHORT_LABEL} dataTest={DATATEST}>\n        <Field type=\"checkbox\" component={CheckboxFieldFF} name={NAME} label={LABEL} dataTest={`${DATATEST}-sf`} />\n    </FormField>;\n\nexport { IncludeAllAttributes };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormField } from '../index';\nconst DATATEST = 'input-dates';\n\nconst Dates = ({\n  label,\n  show,\n  children\n}) => {\n  return show && <FormField label={label} dataTest={DATATEST}>\n                <div style={{\n      display: 'flex'\n    }}>\n                    {children[0]}\n                    <span style={{\n        marginLeft: 'var(--spacers-dp8)'\n      }}>\n                        {children[1]}\n                    </span>\n                </div>\n            </FormField>;\n};\n\nDates.defaultProps = {\n  label: '',\n  show: true\n};\nDates.propTypes = {\n  children: PropTypes.node.isRequired,\n  label: PropTypes.string,\n  show: PropTypes.bool\n};\nexport { Dates };","import i18n from '@dhis2/d2-i18n';\nexport const FORM_ERROR = 'FINAL_FORM/form-error';\nexport const ARRAY_ERROR = 'FINAL_FORM/array-error';\nexport const jobStartedMessage = {\n  [FORM_ERROR]: [{\n    id: `job-started`,\n    info: true,\n    message: i18n.t('Job started.')\n  }]\n};","import i18n from '@dhis2/d2-i18n';\nimport { FORM_ERROR, jobStartedMessage } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    format,\n    identifier,\n    importReportMode,\n    preheatMode,\n    importStrategy,\n    atomicMode,\n    mergeMode,\n    flushMode,\n    skipSharing,\n    skipValidation,\n    inclusionStrategy,\n    isAsync,\n    firstRowIsHeader,\n    classKey\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'metadata.json';\n  const params = [`importMode=${dryRun ? 'VALIDATE' : 'COMMIT'}`, `identifier=${identifier}`, `importReportMode=${importReportMode}`, `preheatMode=${preheatMode}`, `importStrategy=${importStrategy}`, `atomicMode=${atomicMode}`, `mergeMode=${mergeMode}`, `flushMode=${flushMode}`, `skipSharing=${skipSharing}`, `skipValidation=${skipValidation}`, `inclusionStrategy=${inclusionStrategy}`, `async=${isAsync}`, `format=${format}`, format == 'csv' ? `firstRowIsHeader=${firstRowIsHeader}&classKey=${classKey}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format,\n      type: 'METADATA_IMPORT',\n      isAsync: isAsync,\n      setProgress,\n      addEntry: (id, entry) => addTask('metadata', id, { ...entry,\n        jobDetails: values\n      })\n    });\n    return jobStartedMessage;\n  } catch (e) {\n    const formErrors = validate(values);\n    const allErrors = {\n      [FORM_ERROR]: [e],\n      ...formErrors\n    };\n    return allErrors;\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nconst validate = values => {\n  const classKeyValidator = (format, classKey) => format == 'csv' && !classKey ? i18n.t('A class key must be selected') : undefined;\n\n  return {\n    classKey: classKeyValidator(values.format, values.classKey)\n  };\n};\n\nexport { onImport, validate };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails, getInitialBoolValue } from '../../utils/helper';\nimport { FileUpload, Format, formatOptions, defaultFormatOption, FirstRowIsHeader, defaultFirstRowIsHeaderOption, ClassKey, Identifier, defaultIdentifierOption, ImportReportMode, defaultImportReportModeOption, PreheatMode, defaultPreheatModeOption, ImportStrategy, defaultImportStrategyOption, AtomicMode, defaultAtomicModeOption, MergeMode, defaultMergeModeOption, FlushMode, defaultFlushModeOption, SkipSharing, defaultSkipSharingOption, SkipValidation, defaultSkipValidationOption, IsAsync, defaultIsAsyncOption, InclusionStrategy, defaultInclusionStrategyOption, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MetadataImportIcon, MoreOptions, BasicOptions } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Metadata import');\nconst PAGE_DESCRIPTION = i18n.t('Import metadata like data elements and organisation units using the DXF 2 format.');\nconst PAGE_ICON = <MetadataImportIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  identifier: prevJobDetails.identifier || defaultIdentifierOption,\n  importReportMode: prevJobDetails.importReportMode || defaultImportReportModeOption,\n  preheatMode: prevJobDetails.preheatMode || defaultPreheatModeOption,\n  importStrategy: prevJobDetails.importStrategy || defaultImportStrategyOption,\n  firstRowIsHeader: getInitialBoolValue(prevJobDetails.firstRowIsHeader, defaultFirstRowIsHeaderOption),\n  atomicMode: prevJobDetails.atomicMode || defaultAtomicModeOption,\n  mergeMode: prevJobDetails.mergeMode || defaultMergeModeOption,\n  flushMode: prevJobDetails.flushMode || defaultFlushModeOption,\n  inclusionStrategy: prevJobDetails.inclusionStrategy || defaultInclusionStrategyOption,\n  skipSharing: getInitialBoolValue(prevJobDetails.skipSharing, defaultSkipSharingOption),\n  skipValidation: getInitialBoolValue(prevJobDetails.skipValidation, defaultSkipValidationOption),\n  isAsync: getInitialBoolValue(prevJobDetails.isAsync, defaultIsAsyncOption)\n});\n\nconst MetadataImport = () => {\n  const {\n    tasks: {\n      metadata: metadataTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, metadataTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-metadata\" summaryTask={getNewestTask(metadataTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <FileUpload helpText={i18n.t('Supported file types: JSON, CSV, and XML.', {\n          nsSeparator: '>'\n        })} />\n                            <Format availableFormats={formatOptions} type=\"import\" />\n                            <FirstRowIsHeader show={values.format == 'csv'} />\n                            <ClassKey show={values.format == 'csv'} form={form} prevValue={prevJobDetails.classKey} />\n                            <Identifier />\n                            <ImportReportMode />\n                            <PreheatMode />\n                            <ImportStrategy value={values.importStrategy} />\n                            <AtomicMode />\n                            <MergeMode />\n                        </BasicOptions>\n                        <MoreOptions>\n                            <FlushMode />\n                            <SkipSharing />\n                            <SkipValidation />\n                            <IsAsync />\n                            <InclusionStrategy />\n                        </MoreOptions>\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataImport };","import React from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { Format, formatOptions, defaultFormatOption, Schemas, Compression, defaultCompressionOption, SkipSharing, ExportButton } from '../../components/Inputs/index';\nimport { Page, MetadataExportIcon } from '../../components/index';\nimport { onExport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Metadata export');\nconst PAGE_DESCRIPTION = i18n.t('Export metadata, such as data elements and organisation units, in XML, JSON or CSV format.');\nconst PAGE_ICON = <MetadataExportIcon />;\nconst initialValues = {\n  checkedSchemas: [],\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  skipSharing: false\n};\n\nconst MetadataExport = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-metadata\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} render={({\n      handleSubmit,\n      form\n    }) => <form onSubmit={handleSubmit}>\n                        <Schemas />\n                        <Format availableFormats={formatOptions} />\n                        <Compression />\n                        <SkipSharing />\n                        <ExportButton label={i18n.t('Export metadata')} />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataExport };","import { locationAssign } from '../../utils/helper';\n\nconst onExport = baseUrl => values => {\n  const {\n    checkedSchemas,\n    format,\n    compression,\n    skipSharing\n  } = values; // generate download url\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `metadata`;\n  const endpointExtension = compression ? `${format}.${compression}` : format;\n  const schemaParams = checkedSchemas.map(name => `${name}=true`).join('&');\n  const downloadUrlParams = `skipSharing=${skipSharing}&download=true&${schemaParams}`;\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url);\n};\n\nexport { onExport };","import React from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { Format, formatNoCsvOptions, defaultFormatOption, Compression, defaultCompressionOption, ObjectType, defaultObjectTypeOption, Objects, SkipSharing, ExportButton } from '../../components/Inputs/index';\nimport { Page, MetadataDependencyExportIcon } from '../../components/index';\nimport { onExport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Metadata dependency export');\nconst PAGE_DESCRIPTION = i18n.t('Export metadata dependencies, such as data sets and programs, including related metadata objects, in XML or JSON format.');\nconst PAGE_ICON = <MetadataDependencyExportIcon />;\nconst initialValues = {\n  objectType: defaultObjectTypeOption,\n  object: undefined,\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  skipSharing: false\n};\n\nconst MetadataDependencyExport = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-metadata-dependency\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} render={({\n      handleSubmit,\n      form,\n      values\n    }) => <form onSubmit={handleSubmit}>\n                        <ObjectType />\n                        <Objects objectType={values.objectType} form={form} />\n                        <Format availableFormats={formatNoCsvOptions} />\n                        <Compression />\n                        <SkipSharing />\n                        <ExportButton label={i18n.t('Export metadata dependencies')} />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataDependencyExport };","import { locationAssign } from '../../utils/helper';\n\nconst onExport = baseUrl => values => {\n  const {\n    objectType,\n    object,\n    format,\n    compression,\n    skipSharing\n  } = values;\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `${objectType}/${object}/metadata`;\n  const endpointExtension = compression ? `${format}.${compression}` : format;\n  const downloadUrlParams = `skipSharing=${skipSharing}&download=true`;\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url);\n};\n\nexport { onExport };","import React, { useContext } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './JobOverview.module.css';\nimport { TaskContext } from '../../contexts/index';\nimport { JobOverview as JobOverviewComponent, Page, TasksIcon } from '../../components/index';\n\nconst JobOverview = () => {\n  const {\n    jobOverview,\n    updateJobOverview\n  } = useContext(TaskContext);\n\n  const setActiveTypes = types => {\n    updateJobOverview({\n      activeTypes: types\n    });\n  };\n\n  const setSelectedJob = job => {\n    updateJobOverview({\n      selectedJob: job\n    });\n  };\n\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} limitWidth={false} dataTest=\"job-overview-page\">\n            <div className={styles.container}>\n                <JobOverviewComponent activeTypes={jobOverview.activeTypes} setActiveTypes={setActiveTypes} selectedJob={jobOverview.selectedJob} setSelectedJob={setSelectedJob} />\n            </div>\n        </Page>;\n}; // PAGE INFO\n\n\nconst PAGE_NAME = i18n.t('Job overview');\nconst PAGE_DESCRIPTION = i18n.t('An overview of all import jobs started this session.');\nconst PAGE_ICON = <TasksIcon />;\nexport { JobOverview };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { FileUpload, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { Page, GMLIcon } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('GML import');\nconst PAGE_DESCRIPTION = i18n.t('Import geographic data for organisation units using the GML format. GML is an XML grammar for expressing geographical features.');\nconst PAGE_ICON = <GMLIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files\n});\n\nconst GMLImport = () => {\n  const {\n    tasks: {\n      gml: gmlTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, gmlTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-gml\" summaryTask={getNewestTask(gmlTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <FileUpload />\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { GMLImport };","import { FORM_ERROR, jobStartedMessage } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\nconst isAsync = true;\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'metadata/gml.json';\n  const params = [`dryRun=${dryRun}`, 'format=json'].join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: 'gml',\n      type: 'GML_IMPORT',\n      isAsync: isAsync,\n      setProgress,\n      addEntry: (id, entry) => addTask('gml', id, { ...entry,\n        jobDetails: values\n      })\n    });\n    return jobStartedMessage;\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { FileUpload, Format, formatOptions, defaultFormatOption, DataElementIdScheme, defaultDataElementIdSchemeOption, EventIdScheme, defaultEventIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MoreOptions, BasicOptions, SchemeContainer, EventIcon } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Event import');\nconst PAGE_DESCRIPTION = i18n.t('Import events for programs, stages and tracked entities using the DXF 2 format.');\nconst PAGE_ICON = <EventIcon />;\nconst {\n  Form\n} = ReactFinalForm;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  dataElementIdScheme: prevJobDetails.dataElementIdScheme || defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: prevJobDetails.orgUnitIdScheme || defaultOrgUnitIdSchemeOption,\n  eventIdScheme: prevJobDetails.eventIdScheme || defaultEventIdSchemeOption,\n  idScheme: prevJobDetails.idScheme || defaultIdSchemeOption\n});\n\nconst EventImport = () => {\n  const {\n    tasks: {\n      event: eventTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, eventTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-event\" summaryTask={getNewestTask(eventTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <FileUpload helpText={i18n.t('Supported file types: JSON, CSV, and XML.', {\n          nsSeparator: '>'\n        })} />\n                            <Format availableFormats={formatOptions} type=\"import\" />\n                        </BasicOptions>\n                        <MoreOptions>\n                            <SchemeContainer>\n                                <EventIdScheme />\n                                <DataElementIdScheme />\n                                <OrgUnitIdScheme />\n                                <IdScheme />\n                            </SchemeContainer>\n                        </MoreOptions>\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { EventImport };","import { FORM_ERROR, jobStartedMessage } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\nconst isAsync = true;\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    format,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    eventIdScheme,\n    idScheme\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'events.json';\n  const params = ['skipFirst=true', `async=${isAsync}`, `dryRun=${dryRun}`, `dataElementIdScheme=${dataElementIdScheme}`, `orgUnitIdScheme=${orgUnitIdScheme}`, `eventIdScheme=${eventIdScheme}`, `idScheme=${idScheme}`, `payloadFormat=${format}`].join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format,\n      type: 'EVENT_IMPORT',\n      isAsync: isAsync,\n      setProgress,\n      addEntry: (id, entry) => addTask('event', id, { ...entry,\n        jobDetails: values\n      })\n    });\n    return jobStartedMessage;\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import { jsDateToISO8601, locationAssign, pathToId } from '../../utils/helper';\nimport { ALL_VALUE } from '../../hooks/useProgramStages';\nimport { DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR } from '../../components/DatePicker/DatePickerField';\n\nconst onExport = baseUrl => values => {\n  const {\n    selectedOrgUnits,\n    selectedPrograms,\n    programStage,\n    format,\n    compression,\n    startDate,\n    endDate,\n    includeDeleted,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    idScheme,\n    inclusion\n  } = values; // generate URL and redirect\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `events`;\n  const endpointExtension = compression ? `${format}.${compression}` : format;\n  const filename = `${endpoint}.${endpointExtension}`;\n  const downloadUrlParams = ['links=false', 'skipPaging=true', `orgUnit=${pathToId(selectedOrgUnits[0])}`, `program=${selectedPrograms}`, `includeDeleted=${includeDeleted}`, `dataElementIdScheme=${dataElementIdScheme}`, `orgUnitIdScheme=${orgUnitIdScheme}`, `idScheme=${idScheme}`, `attachment=${filename}`, `startDate=${jsDateToISO8601(startDate)}`, `endDate=${jsDateToISO8601(endDate)}`, `ouMode=${inclusion}`, `format=${format}`, programStage != ALL_VALUE ? `programStage=${programStage}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url);\n};\n\nconst validate = values => ({\n  startDate: DATE_BEFORE_VALIDATOR(values.startDate, values.endDate),\n  endDate: DATE_AFTER_VALIDATOR(values.endDate, values.startDate)\n});\n\nexport { onExport, validate };","import React from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { OrgUnitTree, ProgramPicker, Format, formatOptions, defaultFormatOption, Compression, defaultCompressionOption, Dates, StartDate, EndDate, IncludeDeleted, Inclusion, defaultInclusionOption, ExportButton, ProgramStages, DataElementIdScheme, defaultDataElementIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, IdScheme, defaultIdSchemeOption } from '../../components/Inputs/index';\nimport { Page, MoreOptions, BasicOptions, SchemeContainer, EventIcon } from '../../components/index';\nimport { onExport, validate } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Event export');\nconst PAGE_DESCRIPTION = i18n.t('Export event data for programs, stages and tracked entities in DXF 2 format.');\nconst PAGE_ICON = <EventIcon />;\nconst today = new Date();\nconst initialValues = {\n  selectedOrgUnits: [],\n  selectedPrograms: '',\n  programStage: undefined,\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  startDate: new Date(today.getFullYear(), today.getMonth() - 3, today.getDate()),\n  endDate: today,\n  includeDeleted: false,\n  dataElementIdScheme: defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: defaultOrgUnitIdSchemeOption,\n  idScheme: defaultIdSchemeOption,\n  inclusion: defaultInclusionOption\n};\n\nconst EventExport = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-data\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} validate={validate} subscription={{\n      values: true\n    }} render={({\n      handleSubmit,\n      form,\n      values\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <OrgUnitTree multiSelect={false} />\n                            <Inclusion />\n                            <ProgramPicker autoSelectFirst />\n                            <ProgramStages selectedProgram={values.selectedPrograms} form={form} />\n                            <Dates label={i18n.t('Date range to export data for')}>\n                                <StartDate />\n                                <EndDate />\n                            </Dates>\n                            <Format availableFormats={formatOptions} />\n                            <Compression />\n                        </BasicOptions>\n                        <MoreOptions>\n                            <IncludeDeleted />\n                            <SchemeContainer>\n                                <DataElementIdScheme />\n                                <OrgUnitIdScheme />\n                                <IdScheme />\n                            </SchemeContainer>\n                        </MoreOptions>\n                        <ExportButton label={i18n.t('Export events')} />\n                    </form>} />\n        </Page>;\n};\n\nexport { EventExport };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails, getInitialBoolValue } from '../../utils/helper';\nimport { FileUpload, Format, formatAdxPdfOptions, defaultFormatOption, FirstRowIsHeader, defaultFirstRowIsHeaderOption, Strategy, defaultStrategyOption, PreheatCache, defaultPreheatCacheOption, SkipAudit, defaultSkipAuditOption, SkipExistingCheck, defaultSkipExistingCheckOption, DataElementIdScheme, defaultDataElementIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ImportButtonStrip, FormAlerts } from '../../components/Inputs/index';\nimport { hasAuthorityToSkipAudit } from '../../components/WithAuthority/predicates';\nimport { Page, WithAuthority, BasicOptions, MoreOptions, SchemeContainer, DataIcon } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Data import');\nconst PAGE_DESCRIPTION = i18n.t('Import data values from ADX XML, DXF 2 XML, JSON, CSV or PDF files.');\nconst PAGE_ICON = <DataIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  strategy: prevJobDetails.strategy || defaultStrategyOption,\n  firstRowIsHeader: getInitialBoolValue(prevJobDetails.firstRowIsHeader, defaultFirstRowIsHeaderOption),\n  preheatCache: getInitialBoolValue(prevJobDetails.preheatCache, defaultPreheatCacheOption),\n  skipAudit: getInitialBoolValue(prevJobDetails.skipAudit, defaultSkipAuditOption),\n  dataElementIdScheme: prevJobDetails.dataElementIdScheme || defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: prevJobDetails.orgUnitIdScheme || defaultOrgUnitIdSchemeOption,\n  idScheme: prevJobDetails.idScheme || defaultIdSchemeOption,\n  skipExistingCheck: getInitialBoolValue(prevJobDetails.skipExistingCheck, defaultSkipExistingCheckOption)\n});\n\nconst DataImport = () => {\n  const {\n    tasks: {\n      data: dataTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, dataTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-data\" summaryTask={getNewestTask(dataTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <FileUpload helpText={i18n.t('Supported file types: JSON, CSV, XML, ADX and PDF.', {\n          nsSeparator: '>'\n        })} />\n                            <Format availableFormats={formatAdxPdfOptions} type=\"import\" />\n                            <FirstRowIsHeader show={values.format == 'csv'} />\n                            <Strategy value={values.strategy} />\n                            <PreheatCache />\n                            <WithAuthority pred={hasAuthorityToSkipAudit}>\n                                <SkipAudit />\n                            </WithAuthority>\n                        </BasicOptions>\n                        <MoreOptions>\n                            <SchemeContainer>\n                                <DataElementIdScheme />\n                                <OrgUnitIdScheme />\n                                <IdScheme />\n                            </SchemeContainer>\n                            <SkipExistingCheck />\n                        </MoreOptions>\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { DataImport };","import { FORM_ERROR, jobStartedMessage } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\nconst isAsync = true;\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    strategy,\n    preheatCache,\n    skipAudit,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    idScheme,\n    skipExistingCheck,\n    format,\n    firstRowIsHeader\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'dataValueSets.json';\n  const params = [`async=${isAsync}`, `dryRun=${dryRun}`, `strategy=${strategy}`, `preheatCache=${preheatCache}`, `skipAudit=${skipAudit}`, `dataElementIdScheme=${dataElementIdScheme}`, `orgUnitIdScheme=${orgUnitIdScheme}`, `idScheme=${idScheme}`, `skipExistingCheck=${skipExistingCheck}`, `format=${format}`, format == 'csv' ? `firstRowIsHeader=${firstRowIsHeader}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format,\n      type: 'DATAVALUE_IMPORT',\n      isAsync: isAsync,\n      setProgress,\n      addEntry: (id, entry) => addTask('data', id, { ...entry,\n        jobDetails: values\n      })\n    });\n    return jobStartedMessage;\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import { locationAssign, compressionToName } from '../../utils/helper';\nimport { getMimeType } from '../../utils/mime';\nimport i18n from '@dhis2/d2-i18n';\nimport { FORM_ERROR } from '../../utils/final-form';\nimport { createBlob, downloadBlob, jsDateToISO8601, pathToId } from '../../utils/helper';\nimport { DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR } from '../../components/DatePicker/DatePickerField';\n\nconst valuesToParams = ({\n  selectedOrgUnits,\n  includeChildren,\n  selectedDataSets,\n  format,\n  compression,\n  startDate,\n  endDate,\n  includeDeleted,\n  dataElementIdScheme,\n  orgUnitIdScheme,\n  idScheme\n}) => [`dataElementIdScheme=${dataElementIdScheme}`, `orgUnitIdScheme=${orgUnitIdScheme}`, `idScheme=${idScheme}`, `includeDeleted=${includeDeleted}`, `children=${includeChildren}`, `startDate=${jsDateToISO8601(startDate)}`, `endDate=${jsDateToISO8601(endDate)}`, `orgUnit=${selectedOrgUnits.map(o => pathToId(o))}`, `dataSet=${selectedDataSets}`, `format=${format}`, `compression=${compressionToName(compression)}`].join('&');\n\nconst onExport = baseUrl => async values => {\n  const {\n    format,\n    compression\n  } = values;\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `dataValueSets`;\n  const downloadUrlParams = valuesToParams(values);\n  const url = `${apiBaseUrl}${endpoint}?${downloadUrlParams}`; // if compression is set we can redirect to the appropriate URL\n  // and set the compression parameter\n\n  if (compression) {\n    locationAssign(url);\n    return;\n  } // fetch data and create blob\n\n\n  try {\n    const data = await fetch(url, {\n      Accept: getMimeType(format)\n    });\n    const dataStr = await data.text();\n    const filename = `data.${format}`;\n    const downloadUrl = createBlob(dataStr, format);\n    downloadBlob(downloadUrl, filename);\n  } catch (error) {\n    const errors = [{\n      id: `http-${new Date().getTime()}`,\n      critical: true,\n      message: `${i18n.t('HTTP error when fetching data')}. ${error.message}`\n    }];\n    console.error('DataExport onExport error: ', error);\n    return {\n      [FORM_ERROR]: errors\n    };\n  }\n};\n\nconst validate = values => ({\n  startDate: DATE_BEFORE_VALIDATOR(values.startDate, values.endDate),\n  endDate: DATE_AFTER_VALIDATOR(values.endDate, values.startDate)\n});\n\nexport { onExport, validate };","import React from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { OrgUnitTree, IncludeChildren, DataSetPicker, Format, formatOptions, defaultFormatOption, Compression, defaultCompressionOption, Dates, StartDate, EndDate, IncludeDeleted, DataElementIdScheme, defaultDataElementIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ExportButton, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MoreOptions, BasicOptions, SchemeContainer, DataIcon } from '../../components/index';\nimport { onExport, validate } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Data export');\nconst PAGE_DESCRIPTION = i18n.t('Export metadata, such as data elements and organisation units, in DXF 2 format.');\nconst PAGE_ICON = <DataIcon />;\nconst today = new Date();\nconst initialValues = {\n  selectedOrgUnits: [],\n  includeChildren: true,\n  selectedDataSets: [],\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  startDate: new Date(today.getFullYear(), today.getMonth() - 3, today.getDate()),\n  endDate: today,\n  includeDeleted: false,\n  dataElementIdScheme: defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: defaultOrgUnitIdSchemeOption,\n  idScheme: defaultIdSchemeOption\n};\n\nconst DataExport = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-data\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} validate={validate} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <OrgUnitTree />\n                            <IncludeChildren />\n                            <DataSetPicker />\n                            <Dates label={i18n.t('Date range to export data for')}>\n                                <StartDate />\n                                <EndDate />\n                            </Dates>\n                            <Format availableFormats={formatOptions} />\n                            <Compression />\n                        </BasicOptions>\n                        <MoreOptions>\n                            <IncludeDeleted />\n                            <SchemeContainer>\n                                <DataElementIdScheme />\n                                <OrgUnitIdScheme />\n                                <IdScheme />\n                            </SchemeContainer>\n                        </MoreOptions>\n                        <ExportButton label={i18n.t('Export data')} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { DataExport };","import { locationAssign, compressionToName } from '../../utils/helper';\nimport { getMimeType } from '../../utils/mime';\nimport i18n from '@dhis2/d2-i18n';\nimport { FORM_ERROR } from '../../utils/final-form';\nimport { createBlob, downloadBlob, jsDateToISO8601, pathToId } from '../../utils/helper';\nimport { DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR } from '../../components/DatePicker/DatePickerField'; // calculate minimum set of parameters based on given filters\n\nconst valuesToParams = ({\n  selectedOrgUnits,\n  selectedUsers,\n  selectedPrograms,\n  selectedTETypes,\n  ouMode,\n  format,\n  compression,\n  includeDeleted,\n  includeAllAttributes,\n  dataElementIdScheme,\n  eventIdScheme,\n  orgUnitIdScheme,\n  idScheme,\n  assignedUserMode,\n  teiTypeFilter,\n  programStatus,\n  followUpStatus,\n  programStartDate,\n  programEndDate,\n  lastUpdatedFilter,\n  lastUpdatedStartDate,\n  lastUpdatedEndDate,\n  lastUpdatedDuration\n}) => {\n  const minParams = {\n    ou: selectedOrgUnits.map(o => pathToId(o)).join(';'),\n    ouMode: ouMode,\n    format: format,\n    includeDeleted: includeDeleted.toString(),\n    includeAllAttributes: includeAllAttributes.toString(),\n    dataElementIdScheme: dataElementIdScheme,\n    eventIdScheme: eventIdScheme,\n    orgUnitIdScheme: orgUnitIdScheme,\n    idScheme: idScheme,\n    assignedUserMode: assignedUserMode\n  };\n\n  if (compression) {\n    minParams.compression = compressionToName(compression);\n  }\n\n  if (assignedUserMode == 'PROVIDED') {\n    minParams.assignedUser = selectedUsers.join(';');\n  }\n\n  if (teiTypeFilter == 'PROGRAM') {\n    minParams.program = selectedPrograms;\n\n    if (programStatus) {\n      // programStatus = ALL is now the same\n      // as not providing a value for this param at all\n      minParams.programStatus = programStatus;\n    }\n\n    minParams.followUpStatus = followUpStatus;\n\n    if (programStartDate) {\n      minParams.programStartDate = jsDateToISO8601(programStartDate);\n    }\n\n    if (programEndDate) {\n      minParams.programEndDate = jsDateToISO8601(programEndDate);\n    }\n  }\n\n  if (teiTypeFilter == 'TE') {\n    minParams.trackedEntity = selectedTETypes;\n  }\n\n  if (lastUpdatedFilter == 'DATE') {\n    if (lastUpdatedStartDate) {\n      minParams.lastUpdatedStartDate = jsDateToISO8601(lastUpdatedStartDate);\n    }\n\n    if (lastUpdatedEndDate) {\n      minParams.lastUpdatedEndDate = jsDateToISO8601(lastUpdatedEndDate);\n    }\n  }\n\n  if (lastUpdatedFilter == 'DURATION') {\n    minParams.lastUpdatedDuration = lastUpdatedDuration;\n  }\n\n  return Object.keys(minParams).map(param => `${param}=${minParams[param]}`).join('&');\n};\n\nconst onExport = baseUrl => async values => {\n  const {\n    format,\n    compression\n  } = values;\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `trackedEntityInstances`;\n  const downloadUrlParams = valuesToParams(values);\n  const url = `${apiBaseUrl}${endpoint}?${downloadUrlParams}`; // if compression is set we can redirect to the appropriate URL\n  // and set the compression parameter\n\n  if (compression) {\n    locationAssign(url);\n    return;\n  } // fetch data and create blob\n\n\n  try {\n    const teis = await fetch(url, {\n      Accept: getMimeType(format)\n    });\n    const teiStr = await teis.text();\n    const filename = `trackedEntityInstances.${format}`;\n    const downloadUrl = createBlob(teiStr, format);\n    downloadBlob(downloadUrl, filename);\n  } catch (error) {\n    const errors = [{\n      id: `http-${new Date().getTime()}`,\n      critical: true,\n      message: `${i18n.t('HTTP error when fetching tracked entity instances')}. ${error.message}`\n    }];\n    console.error('TEIExport onExport error: ', error);\n    return {\n      [FORM_ERROR]: errors\n    };\n  }\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (values.teiTypeFilter == 'PROGRAM' && values.programStartDate && values.programEndDate) {\n    errors.programStartDate = DATE_BEFORE_VALIDATOR(values.programStartDate, values.programEndDate);\n    errors.programEndDate = DATE_AFTER_VALIDATOR(values.programEndDate, values.programStartDate);\n  }\n\n  if (values.lastUpdatedFilter == 'DATE' && values.lastUpdatedStartDate && values.lastUpdatedEndDate) {\n    errors.lastUpdatedStartDate = DATE_BEFORE_VALIDATOR(values.lastUpdatedStartDate, values.lastUpdatedEndDate);\n    errors.lastUpdatedEndDate = DATE_AFTER_VALIDATOR(values.lastUpdatedEndDate, values.lastUpdatedStartDate);\n  }\n\n  if (values.lastUpdatedFilter == 'DATE' && !values.lastUpdatedStartDate && !values.lastUpdatedEndDate) {\n    errors.lastUpdatedEndDate = i18n.t(\"At least one of the 'last updated' date fields must be specified\");\n  }\n\n  return errors;\n};\n\nexport { onExport, validate };","import React from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { Format, formatJsonpOptions, defaultFormatOption, OrgUnitTree, OrgUnitMode, defaultOrgUnitSelectionModeOption, TEITypeFilter, defaultTEITypeFilterOption, ProgramStatus, defaultProgramStatusOption, FollowUpStatus, defaultFollowUpStatusOption, Dates, ProgramStartDate, ProgramEndDate, ProgramPicker, TETypePicker, Compression, defaultCompressionOption, LastUpdatedFilter, defaultLastUpdatedFilterOption, LastUpdatedStartDate, LastUpdatedEndDate, LastUpdatedDuration, AssignedUserMode, defaultAssignedUserModeOption, UserPicker, IncludeDeleted, IncludeAllAttributes, DataElementIdScheme, defaultDataElementIdSchemeOption, EventIdScheme, defaultEventIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption, ExportButton, FormAlerts } from '../../components/Inputs/index';\nimport { Page, MoreOptions, BasicOptions, SchemeContainer, TEIIcon } from '../../components/index';\nimport { onExport, validate } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Tracked entity instances export');\nconst PAGE_DESCRIPTION = i18n.t('Export tracked entity instances in XML, JSON, JSONP or CSV format.');\nconst PAGE_ICON = <TEIIcon />;\nconst initialValues = {\n  selectedOrgUnits: [],\n  selectedPrograms: [],\n  selectedTETypes: [],\n  selectedUsers: [],\n  format: defaultFormatOption,\n  ouMode: defaultOrgUnitSelectionModeOption,\n  teiTypeFilter: defaultTEITypeFilterOption,\n  programStatus: defaultProgramStatusOption,\n  followUpStatus: defaultFollowUpStatusOption,\n  programStartDate: '',\n  programEndDate: '',\n  compression: defaultCompressionOption,\n  lastUpdatedFilter: defaultLastUpdatedFilterOption,\n  lastUpdatedStartDate: '',\n  lastUpdatedEndDate: '',\n  lastUpdatedDuration: '',\n  assignedUserMode: defaultAssignedUserModeOption,\n  includeDeleted: false,\n  includeAllAttributes: false,\n  dataElementIdScheme: defaultDataElementIdSchemeOption,\n  eventIdScheme: defaultEventIdSchemeOption,\n  orgUnitIdScheme: defaultOrgUnitIdSchemeOption,\n  idScheme: defaultIdSchemeOption\n};\n\nconst TEIExport = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-tei\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} validate={validate} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => {\n      const showProgramFilters = values.teiTypeFilter == 'PROGRAM';\n      const showTEFilters = values.teiTypeFilter == 'TE';\n      const showLUDates = values.lastUpdatedFilter == 'DATE';\n      const showLUDuration = values.lastUpdatedFilter == 'DURATION';\n      const showUserPicker = values.assignedUserMode == 'PROVIDED';\n      return <form onSubmit={handleSubmit}>\n                            <BasicOptions>\n                                <OrgUnitTree />\n                                <OrgUnitMode />\n                                <TEITypeFilter />\n                                <ProgramPicker label={i18n.t('Program to export from')} show={showProgramFilters} />\n                                <ProgramStatus show={showProgramFilters} />\n                                <FollowUpStatus show={showProgramFilters} />\n                                <Dates label={i18n.t('Enrollment date range')} show={showProgramFilters}>\n                                    <ProgramStartDate show={showProgramFilters} />\n                                    <ProgramEndDate show={showProgramFilters} />\n                                </Dates>\n                                <TETypePicker show={showTEFilters} />\n                                <Format availableFormats={formatJsonpOptions} />\n                                <Compression />\n                            </BasicOptions>\n                            <MoreOptions>\n                                <LastUpdatedFilter />\n                                <Dates show={showLUDates}>\n                                    <LastUpdatedStartDate show={showLUDates} />\n                                    <LastUpdatedEndDate show={showLUDates} />\n                                </Dates>\n                                <LastUpdatedDuration show={showLUDuration} />\n                                <AssignedUserMode />\n                                <UserPicker show={showUserPicker} />\n                                <IncludeDeleted />\n                                <IncludeAllAttributes />\n                                <SchemeContainer>\n                                    <DataElementIdScheme />\n                                    <EventIdScheme />\n                                    <OrgUnitIdScheme />\n                                    <IdScheme />\n                                </SchemeContainer>\n                            </MoreOptions>\n                            <ExportButton label={i18n.t('Export tracked entity instances')} />\n                            <FormAlerts alerts={submitError} />\n                        </form>;\n    }} />\n        </Page>;\n};\n\nexport { TEIExport };","import { FORM_ERROR, jobStartedMessage } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    format,\n    identifier,\n    importReportMode,\n    preheatMode,\n    importStrategy,\n    atomicMode,\n    mergeMode,\n    flushMode,\n    skipSharing,\n    skipValidation,\n    inclusionStrategy,\n    isAsync,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    eventIdScheme,\n    idScheme\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'trackedEntityInstances.json';\n  const params = [`importMode=${dryRun ? 'VALIDATE' : 'COMMIT'}`, `identifier=${identifier}`, `importReportMode=${importReportMode}`, `preheatMode=${preheatMode}`, `importStrategy=${importStrategy}`, `atomicMode=${atomicMode}`, `mergeMode=${mergeMode}`, `flushMode=${flushMode}`, `skipSharing=${skipSharing}`, `skipValidation=${skipValidation}`, `inclusionStrategy=${inclusionStrategy}`, `async=${isAsync}`, `format=${format}`, `dataElementIdScheme=${dataElementIdScheme}`, `orgUnitIdScheme=${orgUnitIdScheme}`, `eventIdScheme=${eventIdScheme}`, `idScheme=${idScheme}`].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format,\n      type: 'TEI_IMPORT',\n      isAsync: isAsync,\n      setProgress,\n      addEntry: (id, entry) => addTask('tei', id, { ...entry,\n        jobDetails: values\n      })\n    });\n    return jobStartedMessage;\n  } catch (e) {\n    const formErrors = validate(values);\n    const allErrors = {\n      [FORM_ERROR]: [e],\n      ...formErrors\n    };\n    return allErrors;\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nconst validate = () => {\n  return {};\n};\n\nexport { onImport, validate };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails, getInitialBoolValue } from '../../utils/helper';\nimport { FileUpload, Format, formatNoCsvOptions, defaultFormatOption, Identifier, defaultIdentifierOption, ImportReportMode, defaultImportReportModeOption, PreheatMode, defaultPreheatModeOption, ImportStrategy, defaultImportStrategyOption, AtomicMode, defaultAtomicModeOption, MergeMode, defaultMergeModeOption, FlushMode, defaultFlushModeOption, SkipSharing, defaultSkipSharingOption, SkipValidation, defaultSkipValidationOption, IsAsync, defaultIsAsyncOption, InclusionStrategy, defaultInclusionStrategyOption, ImportButtonStrip, FormAlerts, DataElementIdScheme, defaultDataElementIdSchemeOption, EventIdScheme, defaultEventIdSchemeOption, IdScheme, defaultIdSchemeOption, OrgUnitIdScheme, defaultOrgUnitIdSchemeOption } from '../../components/Inputs/index';\nimport { Page, TEIIcon, MoreOptions, SchemeContainer, BasicOptions } from '../../components/index';\nimport { TaskContext, getNewestTask } from '../../contexts/index';\nimport { onImport } from './form-helper';\nconst {\n  Form\n} = ReactFinalForm; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Tracked entity instances import');\nconst PAGE_DESCRIPTION = i18n.t('Import tracked entity instances from JSON or XML files.');\nconst PAGE_ICON = <TEIIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  identifier: prevJobDetails.identifier || defaultIdentifierOption,\n  importReportMode: prevJobDetails.importReportMode || defaultImportReportModeOption,\n  preheatMode: prevJobDetails.preheatMode || defaultPreheatModeOption,\n  importStrategy: prevJobDetails.importStrategy || defaultImportStrategyOption,\n  atomicMode: prevJobDetails.atomicMode || defaultAtomicModeOption,\n  mergeMode: prevJobDetails.mergeMode || defaultMergeModeOption,\n  flushMode: prevJobDetails.flushMode || defaultFlushModeOption,\n  inclusionStrategy: prevJobDetails.inclusionStrategy || defaultInclusionStrategyOption,\n  skipSharing: getInitialBoolValue(prevJobDetails.skipSharing, defaultSkipSharingOption),\n  skipValidation: getInitialBoolValue(prevJobDetails.skipValidation, defaultSkipValidationOption),\n  isAsync: getInitialBoolValue(prevJobDetails.isAsync, defaultIsAsyncOption),\n  dataElementIdScheme: prevJobDetails.dataElementIdScheme || defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: prevJobDetails.orgUnitIdScheme || defaultOrgUnitIdSchemeOption,\n  eventIdScheme: prevJobDetails.eventIdScheme || defaultEventIdSchemeOption,\n  idScheme: prevJobDetails.idScheme || defaultIdSchemeOption\n});\n\nconst TEIImport = () => {\n  const {\n    tasks: {\n      tei: teiTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, teiTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-tei\" summaryTask={getNewestTask(teiTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      values,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <BasicOptions>\n                            <FileUpload helpText={i18n.t('Supported file types: JSON and XML.', {\n          nsSeparator: '>'\n        })} />\n                            <Format availableFormats={formatNoCsvOptions} type=\"import\" />\n                            <Identifier />\n                            <ImportReportMode />\n                            <PreheatMode />\n                            <ImportStrategy value={values.importStrategy} />\n                            <AtomicMode />\n                            <MergeMode />\n                        </BasicOptions>\n                        <MoreOptions>\n                            <FlushMode />\n                            <SkipSharing />\n                            <SkipValidation />\n                            <IsAsync />\n                            <InclusionStrategy />\n                            <SchemeContainer>\n                                <DataElementIdScheme />\n                                <EventIdScheme />\n                                <OrgUnitIdScheme />\n                                <IdScheme />\n                            </SchemeContainer>\n                        </MoreOptions>\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { TEIImport };","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { ScrollToTop } from '../Router/ScrollToTop';\nimport { DataImport, DataExport, EventExport, EventImport, GMLImport, MetadataDependencyExport, MetadataExport, MetadataImport, TEIExport, TEIImport, JobOverview } from '../../pages';\n\nconst Router = () => {\n  return <ScrollToTop>\n            <Switch>\n                <Route path=\"/import/data\" component={DataImport} />\n                <Route path=\"/import/event\" component={EventImport} />\n                <Route path=\"/import/gml\" component={GMLImport} />\n                <Route path=\"/import/metadata\" component={MetadataImport} />\n                <Route path=\"/import/tei\" component={TEIImport} />\n                <Route path=\"/export/data\" component={DataExport} />\n                <Route path=\"/export/event\" component={EventExport} />\n                <Route path=\"/export/metadata-dependency\" component={MetadataDependencyExport} />\n                <Route path=\"/export/metadata\" component={MetadataExport} />\n                <Route path=\"/export/tei\" component={TEIExport} />\n                <Route path=\"/utils/job-overview\" component={JobOverview} />\n                <Redirect from=\"*\" to=\"/import/data\" />\n            </Switch>\n        </ScrollToTop>;\n};\n\nexport { Router };","/**\n * Group and sort schemas\n * ======================\n */\nconst groupSchemas = schemas => schemas.reduce((groups, schema) => {\n  const {\n    group\n  } = schema;\n  return { ...groups,\n    // add schema to \"group\" collection if existing,\n    // otherwise create new collection with schema as first entry\n    [group]: groups[group] ? [...groups[group], schema] : [schema]\n  };\n}, {});\n\nconst combineSingleItemGroups = groups => {\n  const groupNames = Object.keys(groups);\n  return groupNames.reduce((combinedGroups, groupName) => {\n    const group = groups[groupName];\n\n    if (group.length === 1) {\n      return { ...combinedGroups,\n        other: [...combinedGroups.other, group[0]]\n      };\n    }\n\n    return { ...combinedGroups,\n      [groupName]: group\n    };\n  }, {\n    other: []\n  });\n};\n/**\n * Get group label helpers\n * =======================\n */\n\n/**\n * This function will loop through all schemas and\n * compare the the lower case groupKey with\n * the schemas' name.\n * If a match is found, that match will be returned\n */\n\n\nfunction findLabelByLowerCaseComparison(groupKey, schemas) {\n  const isGroupKeyMatchingLowerCaseSchemaName = schemaName => groupKey === schemaName.toLowerCase();\n\n  return schemas.reduce((foundLabel, {\n    name: schemaName,\n    displayName\n  }) => {\n    // do not try to compare anything if a label already\n    // has been found\n    if (foundLabel) return foundLabel;\n\n    if (isGroupKeyMatchingLowerCaseSchemaName(schemaName)) {\n      return displayName;\n    }\n\n    return foundLabel;\n  }, '');\n}\n\nconst ucFirst = str => str[0].toUpperCase() + str.substr(1);\n/**\n * This function will go through all schemas\n * and will compare the scheme name with the\n * lower case group key at position 0 of the schema key.\n * Once a match is found, the match will be extracted,\n * spaces will be inserted before all capital letters\n * and the result returned\n */\n\n\nfunction findKeyByCamelCaseComparison(groupKey, schemas) {\n  const isGroupKeyInSchemaName = schemaName => schemaName.includes(groupKey) && schemaName.indexOf(groupKey) === 0; // Will return either a label or an empty string\n  // if no match for the groupKey was found\n\n\n  return schemas.reduce((foundLabel, {\n    name: schemaName\n  }) => {\n    // do not try to compare anything if a label already\n    // has been found\n    if (foundLabel) return foundLabel;\n    const lowerCaseSchemaName = schemaName.toLowerCase();\n\n    if (isGroupKeyInSchemaName(lowerCaseSchemaName)) {\n      return ucFirst(schemaName // extract part that matches the groupKey\n      .substr(0, groupKey.length) // insert space before capital letters\n      .replace(/([A-Z]+)/g, ' $1'));\n    }\n\n    return foundLabel;\n  }, '');\n}\n\nfunction extractGroupLabelFromSchemas(groupKey, schemas) {\n  const lowerCaseGroupKey = groupKey.toLowerCase();\n\n  if (lowerCaseGroupKey === 'oauth2' || lowerCaseGroupKey === 'other') {\n    return groupKey;\n  }\n\n  return findLabelByLowerCaseComparison(lowerCaseGroupKey, schemas) || findKeyByCamelCaseComparison(lowerCaseGroupKey, schemas) || groupKey[0].toUpperCase() + groupKey.substr(1);\n}\n\nconst getSchemaGroups = schemas => {\n  const groups = groupSchemas(schemas);\n  const combinedGroups = combineSingleItemGroups(groups);\n  return combinedGroups;\n};\n\nconst getGroupLabels = schemaGroups => {\n  return Object.entries(schemaGroups).reduce((groupLabels, [groupKey, schemas]) => {\n    const label = extractGroupLabelFromSchemas(groupKey, schemas);\n    return { ...groupLabels,\n      [groupKey]: label\n    };\n  }, {});\n};\n\nconst getGroupOrder = schemas => {\n  const groupKeys = Object.keys(schemas);\n  groupKeys.sort();\n  return groupKeys;\n};\n\nconst filterOutExcludedSchemas = (excludedSchemas, schemas) => schemas.filter(schema => schema.metadata && !excludedSchemas.has(schema.collectionName));\n\nconst groupName = klass => {\n  const group = klass.split('.');\n  group.pop();\n\n  if (!klass.includes('.dhis')) {\n    group.pop();\n  }\n\n  return group[group.length - 1].replace(/(.)([A-Z])/g, '$1 $2');\n};\n\nconst formatSchemas = (schemas, checkedByDefault) => schemas.map(schema => ({\n  checked: checkedByDefault,\n  label: schema.displayName,\n  name: schema.collectionName,\n  group: groupName(schema.klass)\n}));\n\nexport { filterOutExcludedSchemas, groupName, formatSchemas, getSchemaGroups, getGroupLabels, getGroupOrder };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from '@dhis2/ui';\nimport styles from './Schemas.module.css';\n\nconst SchemaGroup = ({\n  label,\n  schemas,\n  toggleSchema,\n  dataTest\n}) => <div className={styles.group} data-test={dataTest}>\n        <span className={styles.formLabel}>{label}</span>\n        <div className={styles.schema}>\n            {schemas.map((schema, ind) => <div key={schema.name}>\n                    <Checkbox label={schema.label} name={`schemas.${schema.name}`} value={`schemas.${schema.name}`} checked={schema.checked} onChange={() => toggleSchema(ind)} />\n                </div>)}\n        </div>\n    </div>;\n\nSchemaGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  schemas: PropTypes.arrayOf(PropTypes.exact({\n    checked: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    group: PropTypes.string.isRequired\n  })).isRequired,\n  toggleSchema: PropTypes.func.isRequired,\n  dataTest: PropTypes.string\n};\nexport { SchemaGroup };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, CircularLoader, Help } from '@dhis2/ui';\nimport { filterOutExcludedSchemas, formatSchemas, getSchemaGroups, getGroupLabels, getGroupOrder } from './helper';\nimport { SchemaGroup } from './SchemaGroup';\nimport styles from './Schemas.module.css';\nconst schemaQuery = {\n  schemas: {\n    resource: 'schemas',\n    params: {\n      fields: ['metadata', 'collectionName', 'displayName', 'klass']\n    }\n  }\n};\n\nconst Schemas = ({\n  excludeSchemas,\n  setCheckedSchemas,\n  meta,\n  checkedByDefault,\n  dataTest\n}) => {\n  const [schemaGroups, setSchemaGroups] = useState(undefined);\n  const [schemaGroupLabels, setSchemaGroupLabels] = useState(undefined);\n  const [schemaGroupOrder, setSchemaGroupOrder] = useState(undefined);\n  const {\n    error,\n    loading\n  } = useDataQuery(schemaQuery, {\n    onComplete: data => {\n      const schemas = data.schemas.schemas;\n      const filteredSchemas = filterOutExcludedSchemas(excludeSchemas, schemas);\n      const formattedSchemas = formatSchemas(filteredSchemas, checkedByDefault);\n      const groups = getSchemaGroups(formattedSchemas);\n      setSchemaGroups(groups);\n      setSchemaGroupOrder(getGroupOrder(groups));\n      setSchemaGroupLabels(getGroupLabels(groups));\n      propagateCheckedSchemas(groups);\n    },\n    onError: error => {\n      console.error('Schemas error: ', error);\n    }\n  });\n\n  const propagateCheckedSchemas = updatedSchemaGroups => {\n    setCheckedSchemas(Object.keys(updatedSchemaGroups).reduce((acc, groupName) => [...acc, ...updatedSchemaGroups[groupName].filter(s => s.checked).map(s => s.name)], []));\n  };\n\n  const onSelectGeneric = val => () => {\n    const updatedSchemaGroups = Object.keys(schemaGroups).reduce((acc, groupName) => ({ ...acc,\n      [groupName]: schemaGroups[groupName].reduce((grAcc, group) => [...grAcc, { ...group,\n        checked: val\n      }], [])\n    }), {});\n    setSchemaGroups(updatedSchemaGroups);\n    propagateCheckedSchemas(updatedSchemaGroups);\n  };\n\n  const toggleSchema = schemaGroup => ind => {\n    const updatedGroup = [...schemaGroups[schemaGroup]];\n    updatedGroup[ind] = { ...updatedGroup[ind],\n      checked: !updatedGroup[ind].checked\n    };\n    const updatedSchemaGroups = { ...schemaGroups,\n      [schemaGroup]: updatedGroup\n    };\n    setSchemaGroups(updatedSchemaGroups);\n    propagateCheckedSchemas(updatedSchemaGroups);\n  };\n\n  const showSchemas = !loading && !error;\n  return <div className={styles.container} data-test={dataTest}>\n            {loading && <CircularLoader dataTest={`${dataTest}-loading`} />}\n            {error && <div data-test={`${dataTest}-error`}>\n                    <p>\n                        {i18n.t('Something went wrong when loading the schemas!')}\n                    </p>\n                    <p>{error.message}</p>\n                </div>}\n            {showSchemas && <>\n                    <ButtonStrip>\n                        <Button onClick={onSelectGeneric(true)} dataTest={`${dataTest}-select-all`}>\n                            {i18n.t('Select All')}\n                        </Button>\n                        <Button onClick={onSelectGeneric(false)} dataTest={`${dataTest}-select-none`}>\n                            {i18n.t('Select None')}\n                        </Button>\n                    </ButtonStrip>\n\n                    <div className={styles.formControl}>\n                        {schemaGroupOrder.map(groupKey => {\n          const label = schemaGroupLabels[groupKey];\n          return <SchemaGroup key={label} label={label} schemas={schemaGroups[groupKey]} toggleSchema={toggleSchema(groupKey)} />;\n        })}\n                    </div>\n                    {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n                </>}\n        </div>;\n};\n\nSchemas.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  excludeSchemas: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n  setCheckedSchemas: PropTypes.func.isRequired,\n  checkedByDefault: PropTypes.bool\n};\nexport { Schemas };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SingleSelectField, SingleSelectOption, Help } from '@dhis2/ui';\nimport { optionPropType, optionsPropType } from '../../utils/options';\nimport styles from './Select.module.css';\nimport { FormField } from '../index';\n\nconst Select = ({\n  name,\n  dataTest,\n  label,\n  options,\n  setValue,\n  selected,\n  noMatchText,\n  loading,\n  error,\n  meta,\n  warning,\n  validationText,\n  helpText,\n  filled,\n  dense,\n  filterable,\n  initialFocus\n}) => {\n  const optionEls = options.map(o => <SingleSelectOption key={o.value} value={o.value} label={o.label} />);\n\n  const onChange = ({\n    selected\n  }) => setValue(selected);\n\n  return <FormField label={label} dataTest={dataTest}>\n            <div className={styles.select} data-test={`${dataTest}-container`}>\n                <SingleSelectField dense={dense} filled={filled} initialFocus={initialFocus} loading={loading} warning={warning} error={error} name={name} onChange={onChange} selected={selected} filterable={filterable} noMatchText={noMatchText ? noMatchText : `No match found for filter`} helpText={helpText} validationText={validationText} dataTest={`${dataTest}-ssf`}>\n                    {optionEls}\n                </SingleSelectField>\n                {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n            </div>\n        </FormField>;\n};\n\nSelect.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  options: optionsPropType.isRequired,\n  setValue: PropTypes.func.isRequired,\n  dense: PropTypes.bool,\n  error: PropTypes.bool,\n  filled: PropTypes.bool,\n  filterable: PropTypes.bool,\n  helpText: PropTypes.string,\n  initialFocus: PropTypes.bool,\n  loading: PropTypes.bool,\n  noMatchText: PropTypes.string,\n  selected: optionPropType,\n  validationText: PropTypes.string,\n  warning: PropTypes.bool\n};\nexport { Select };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { Select } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  inputName,\n  ...rest\n}) => <Select name={inputName} meta={meta} selected={value || undefined} setValue={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.any,\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst SelectField = ({\n  name,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} inputName={name} {...rest} />;\n};\n\nSelectField.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport { SelectField };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuSectionHeader as UIHeader } from '@dhis2/ui';\nimport styles from './MenuSectionHeader.module.css';\n\nconst MenuSectionHeader = ({\n  label,\n  children\n}) => <UIHeader className={styles.sectionTitle} label={<span className={styles.label}>\n                <span className={styles.icon}>{children}</span>\n                {label}\n            </span>} hideDivider />;\n\nMenuSectionHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  label: PropTypes.string.isRequired\n};\nexport { MenuSectionHeader };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuSectionHeader } from './MenuSectionHeader';\nimport { ImportIcon } from '../index';\n\nconst ImportMenuSectionHeader = () => <MenuSectionHeader label={i18n.t('Import')}>\n        <ImportIcon />\n    </MenuSectionHeader>;\n\nexport { ImportMenuSectionHeader };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuSectionHeader } from './MenuSectionHeader';\nimport { ExportIcon } from '../index';\n\nconst ExportMenuSectionHeader = () => <MenuSectionHeader label={i18n.t('Export')}>\n        <ExportIcon />\n    </MenuSectionHeader>;\n\nexport { ExportMenuSectionHeader };","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, Menu, MenuItem } from '@dhis2/ui';\nimport styles from './Sidebar.module.css';\nimport { DataIcon, EventIcon, GMLIcon, MetadataDependencyExportIcon, MetadataExportIcon, MetadataImportIcon, TEIIcon, TasksIcon } from '../index';\nimport { ImportMenuSectionHeader } from './ImportMenuSectionHeader';\nimport { ExportMenuSectionHeader } from './ExportMenuSectionHeader';\nconst dataImportPage = {\n  name: i18n.t('Data import'),\n  code: 'data-import',\n  icon: <DataIcon />,\n  path: '/import/data'\n};\nconst eventImportPage = {\n  name: i18n.t('Event import'),\n  code: 'event-import',\n  icon: <EventIcon />,\n  path: '/import/event'\n};\nconst gmlImportPage = {\n  name: i18n.t('GML import'),\n  code: 'gml-import',\n  icon: <GMLIcon />,\n  path: '/import/gml'\n};\nconst metadataImportPage = {\n  name: i18n.t('Metadata import'),\n  code: 'metadata-import',\n  path: '/import/metadata',\n  icon: <MetadataImportIcon />\n};\nconst teiImportPage = {\n  name: i18n.t('TEI import'),\n  code: 'tei-import',\n  path: '/import/tei',\n  icon: <TEIIcon />\n};\nconst dataExportPage = {\n  name: i18n.t('Data export'),\n  code: 'data-export',\n  path: '/export/data',\n  icon: <DataIcon />\n};\nconst eventExportPage = {\n  name: i18n.t('Event export'),\n  code: 'event-export',\n  path: '/export/event',\n  icon: <EventIcon />\n};\nconst metadataDependencyExportPage = {\n  name: i18n.t('Metadata dependency export'),\n  code: 'metadata-dependency-export',\n  path: '/export/metadata-dependency',\n  icon: <MetadataDependencyExportIcon />\n};\nconst metadataExportPage = {\n  name: i18n.t('Metadata export'),\n  code: 'metadata-export',\n  path: '/export/metadata',\n  icon: <MetadataExportIcon />\n};\nconst teiExportPage = {\n  name: i18n.t('TEI export'),\n  code: 'tei-export',\n  path: '/export/tei',\n  icon: <TEIIcon />\n};\nconst importPages = [dataImportPage, eventImportPage, gmlImportPage, metadataImportPage, teiImportPage];\nconst exportPages = [dataExportPage, eventExportPage, metadataDependencyExportPage, metadataExportPage, teiExportPage];\nconst jobOverviewPage = {\n  name: i18n.t('Job overview'),\n  code: 'job-overview',\n  path: '/utils/job-overview',\n  icon: <TasksIcon />\n};\n\nconst SidebarItem = ({\n  name,\n  path,\n  code,\n  active,\n  className\n}) => {\n  const history = useHistory();\n\n  const navigateToPath = () => history.push(path);\n\n  return <MenuItem active={active} onClick={navigateToPath} label={name} className={cx(className, {\n    [styles.sidebarItem]: !active,\n    [styles.sidebarItemActive]: active\n  })} dataTest={`sidebar-link-${code}`} />;\n};\n\nSidebarItem.propTypes = {\n  active: PropTypes.bool.isRequired,\n  code: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\n\nconst Sidebar = () => {\n  const location = useLocation();\n  const pathname = location.pathname;\n  return <Menu className={styles.Menu}>\n            <ImportMenuSectionHeader />\n            {importPages.map(({\n      icon,\n      name,\n      code,\n      path\n    }) => {\n      const active = pathname == path;\n      return <SidebarItem name={name} path={path} code={code} icon={icon} active={active} key={path} />;\n    })}\n            <ExportMenuSectionHeader />\n            {exportPages.map(({\n      icon,\n      name,\n      code,\n      path\n    }) => {\n      const active = pathname == path;\n      return <SidebarItem name={name} path={path} code={code} icon={icon} active={active} key={path} />;\n    })}\n            <Divider />\n            <SidebarItem name={jobOverviewPage.name} path={jobOverviewPage.path} code={jobOverviewPage.code} icon={jobOverviewPage.icon} active={pathname == jobOverviewPage.path} className={pathname == jobOverviewPage.path ? '' : styles.jobOverview} key={jobOverviewPage.path} />\n        </Menu>;\n};\n\nexport { Sidebar };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { ReactFinalForm, Switch as SwitchUI } from '@dhis2/ui';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst Wrapper = ({\n  input,\n  meta,\n  ...rest\n}) => <SwitchUI input={input} meta={meta} label={input.value ? i18n.t('Yes') : i18n.t('No')} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired\n};\n\nconst Switch = ({\n  name,\n  label,\n  help,\n  dataTest\n}) => {\n  return <FormField label={label} dataTest={dataTest}>\n            <Field component={Wrapper} name={name} helpText={help} dataTest={`${dataTest}-sf`} />\n        </FormField>;\n};\n\nSwitch.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  help: PropTypes.string\n};\nexport { Switch };","import { useContext } from 'react';\nimport { UserContext } from '../../contexts/index';\n\nconst WithAuthority = ({\n  pred,\n  children\n}) => {\n  const user = useContext(UserContext);\n  if (!user) return null;\n  return pred(user.authorities) ? children : null;\n};\n\nexport { WithAuthority };","const dataSetQuery = {\n  dataSets: {\n    resource: 'dataSets',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nconst programQuery = {\n  programs: {\n    resource: 'programs',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nconst TETypeQuery = {\n  trackedEntityTypes: {\n    resource: 'trackedEntityTypes',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nconst userQuery = {\n  users: {\n    resource: 'users',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\nexport { dataSetQuery, programQuery, TETypeQuery, userQuery };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { ReactFinalForm, SingleSelectFieldFF, Transfer, CircularLoader, Help } from '@dhis2/ui';\nimport styles from './ResourcePicker.module.css';\nimport { dataSetQuery, programQuery, TETypeQuery, userQuery } from './queries';\nimport { resourceTypes } from './resourceTypes';\nimport { FormField } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst resourceToQuery = resourceType => {\n  if (resourceType == resourceTypes.DATASET) {\n    return {\n      resourceName: 'dataSets',\n      query: dataSetQuery\n    };\n  } else if (resourceType == resourceTypes.PROGRAM) {\n    return {\n      resourceName: 'programs',\n      query: programQuery\n    };\n  } else if (resourceType == resourceTypes.TETYPE) {\n    return {\n      resourceName: 'trackedEntityTypes',\n      query: TETypeQuery\n    };\n  } else if (resourceType == resourceTypes.USER) {\n    return {\n      resourceName: 'users',\n      query: userQuery\n    };\n  }\n\n  return {\n    error: `Unkown resource type: ${resourceType}`\n  };\n};\n\nconst ResourcePicker = ({\n  label,\n  resourceType,\n  selected,\n  setSelected,\n  meta,\n  multiSelect,\n  withFilter,\n  autoSelectFirst,\n  dataTest,\n  listName,\n  filterLabel,\n  selectedLabel,\n  errorMessage\n}) => {\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(undefined);\n  const {\n    error: resourceError,\n    resourceName,\n    query\n  } = resourceToQuery(resourceType);\n\n  if (resourceError) {\n    console.error(`ResourcePicker: ${resourceError}`);\n    return null;\n  }\n\n  const {\n    loading\n  } = useDataQuery(query, {\n    onComplete: data => {\n      const elements = data[resourceName][resourceName];\n      const list = elements.map(({\n        id,\n        displayName\n      }) => ({\n        value: id,\n        label: displayName\n      }));\n      setList(list);\n\n      if (autoSelectFirst && list.length) {\n        setSelected({\n          selected: multiSelect ? [list[0].value] : list[0].value\n        });\n      }\n    },\n    onError: error => {\n      setError(error);\n      console.error(`ResourcePicker(${resourceName}) error: `, error);\n    }\n  });\n  const showList = !loading && !error;\n  return <FormField label={label} dataTest={dataTest}>\n            {loading && <CircularLoader dataTest={`${dataTest}-loading`} />}\n            {error && <Help error data-test={`${dataTest}-error`}>\n                    <p>{errorMessage}</p>\n                    <p>{error.message}</p>\n                </Help>}\n            {showList && (multiSelect ? <Transfer name={listName} label={filterLabel} selected={selected} onChange={setSelected} options={list} filterable={withFilter} filterPlaceholder={filterLabel} rightHeader={<p className={styles.selectedLabel}>\n                                {selectedLabel}\n                            </p>} dataTest={`${dataTest}-list`} loading={loading} /> : <Field component={SingleSelectFieldFF} name={listName} options={list} filterable={withFilter} dataTest={`${dataTest}-select`} loading={loading} />)}\n            {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n        </FormField>;\n};\n\nResourcePicker.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string.isRequired,\n  filterLabel: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  listName: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  resourceType: PropTypes.number.isRequired,\n  selected: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n  selectedLabel: PropTypes.string.isRequired,\n  setSelected: PropTypes.func.isRequired,\n  autoSelectFirst: PropTypes.bool,\n  multiSelect: PropTypes.bool,\n  withFilter: PropTypes.bool\n};\nResourcePicker.defaultProps = {\n  multiSelect: true,\n  withFilter: true\n};\nexport { ResourcePicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport { ResourcePicker } from '../index';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  ...rest\n}) => <ResourcePicker meta={meta} selected={value} setSelected={({\n  selected\n}) => onChange(selected)} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst ResourcePickerField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nResourcePickerField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { ResourcePickerField };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider } from '@dhis2/ui';\nimport styles from './BasicOptions.module.css';\nconst LABEL = i18n.t('Basic options');\n\nconst BasicOptions = ({\n  children\n}) => {\n  return <section className={styles.container}>\n            <header className={styles.header}>\n                <h2 className={styles.label}>{LABEL}</h2>\n                <Divider />\n            </header>\n            {children}\n        </section>;\n};\n\nBasicOptions.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired\n};\nexport { BasicOptions };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SchemeContainer.module.css';\n\nconst SchemeContainer = ({\n  children\n}) => <div className={styles.container}>{children}</div>;\n\nSchemeContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport { SchemeContainer };","import React from 'react';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport styles from './StyledField.module.css';\nconst {\n  Field\n} = ReactFinalForm;\n\nconst StyledField = props => <div className={styles.container}>\n        <Field {...props} />\n    </div>;\n\nexport { StyledField };","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport i18n from './locales';\nimport { CssVariables, CssReset, CircularLoader, ScreenCover } from '@dhis2/ui-core';\nimport { TaskContext } from './contexts/';\nimport { UserContext } from './contexts/';\nimport { useUser, useTasks } from './hooks/';\nimport styles from './App.module.css';\nimport { Sidebar } from './components/';\nimport { Router } from './components/';\n\nconst App = () => {\n  const {\n    tasks,\n    addTask,\n    jobOverview,\n    updateJobOverview\n  } = useTasks();\n  const {\n    loading,\n    error,\n    user\n  } = useUser();\n  const showApp = !loading && !error;\n  return <>\n            <CssReset />\n            <CssVariables spacers colors />\n            {loading && <ScreenCover dataTest=\"app-screen-cover\">\n                    <CircularLoader dataTest=\"app-loader\" />\n                </ScreenCover>}\n            {error && <div data-test=\"app-error\">\n                    <p>\n                        {i18n.t('Something went wrong when loading the current user!')}\n                    </p>\n                    <p>{error.message}</p>\n                </div>}\n            {showApp && <HashRouter>\n                    <UserContext.Provider value={user}>\n                        <TaskContext.Provider value={{\n          tasks,\n          addTask,\n          jobOverview,\n          updateJobOverview\n        }}>\n                            <div className={styles.container}>\n                                <div className={styles.sidebar}>\n                                    <Sidebar />\n                                </div>\n                                <main className={styles.content}>\n                                    <Router />\n                                </main>\n                            </div>\n                        </TaskContext.Provider>\n                    </UserContext.Provider>\n                </HashRouter>}\n        </>;\n};\n\nexport default App;"],"sourceRoot":""}