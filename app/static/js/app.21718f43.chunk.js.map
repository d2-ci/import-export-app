{"version":3,"sources":["D2App/components/Schemas/Schemas.module.css","D2App/App.module.css","D2App/components/FormAlerts/FormAlerts.module.css","D2App/components/FormField/FormField.module.css","D2App/components/ImportButtonStrip/ImportButtonStrip.module.css","D2App/components/JobOverview/JobOverview.module.css","D2App/components/JobOverview/MenuLabel/MenuLabel.module.css","D2App/components/JobSummary/JobSummary.module.css","D2App/components/MoreOptions/MoreOptions.module.css","D2App/components/OrgUnitTree/OrgUnitTree.module.css","D2App/components/Page/Page.module.css","D2App/components/RadioGroup/RadioGroup.module.css","D2App/pages/JobOverview/JobOverview.module.css","D2App/components/Select/Select.module.css","D2App/components/SelectableList/SelectableList.module.css","D2App/components/Sidebar/Sidebar.module.css","D2App/components/StyledLink/StyledLink.module.css","D2App/contexts/User.js","D2App/contexts/Task.js","D2App/components/Icon/Icon.js","D2App/utils/tasks.js","D2App/hooks/useTasks.js","D2App/hooks/useUser.js","D2App/hooks/useProgramStages.js","D2App/hooks/useClassKeys.js","D2App/utils/mime.js","D2App/utils/xhr.js","D2App/utils/helper.js","D2App/utils/options.js","D2App/components/ElementSchemes/DataElementIdScheme.js","D2App/components/DataSetPicker/DataSetPicker.js","D2App/components/DataSetPicker/DataSetPickerField.js","D2App/components/DatePicker/DatePicker.js","D2App/components/DatePicker/DatePickerField.js","D2App/components/ElementSchemes/EventIdScheme.js","D2App/components/FileUpload/FileUpload.js","D2App/components/FormAlerts/FormAlerts.js","D2App/components/FormField/FormField.js","D2App/components/ElementSchemes/IdScheme.js","D2App/components/ImportButtonStrip/ImportButtonStrip.js","D2App/components/JobOverview/helper.js","D2App/components/JobOverview/MenuLabel/MenuLabel.js","D2App/components/JobOverview/JobOverview.js","D2App/components/JobSummary/Events/Events.js","D2App/components/JobSummary/helper.js","D2App/components/JobSummary/SingleStatusTable/SingleStatusTable.js","D2App/components/JobSummary/SingleSummary/SingleSummary.js","D2App/components/JobSummary/TypeCount/TypeCount.js","D2App/components/JobSummary/Messages/Messages.js","D2App/components/JobSummary/TypeReportSummary/TypeReportSummary.js","D2App/components/JobSummary/Summary/Summary.js","D2App/components/JobSummary/Details/Details.js","D2App/components/JobSummary/JobSummary.js","D2App/components/JobSummary/MiniJobSummary/MiniJobSummary.js","D2App/components/MoreOptions/MoreOptions.js","D2App/components/ElementSchemes/OrgUnitIdScheme.js","D2App/components/OrgUnitTree/Tree/Tree.js","D2App/components/OrgUnitTree/OrgUnitTree.js","D2App/components/OrgUnitTree/OrgUnitTreeField.js","D2App/components/Page/Page.js","D2App/components/ProgramPicker/ProgramPicker.js","D2App/components/ProgramPicker/ProgramPickerField.js","D2App/components/ProgramStages/ProgramStages.js","D2App/components/RadioGroup/RadioGroup.js","D2App/components/RadioGroup/RadioGroupField.js","D2App/components/Inputs/FileUpload.js","D2App/components/Inputs/ImportButtonStrip.js","D2App/components/Inputs/FormAlerts.js","D2App/components/Inputs/Format.js","D2App/components/Inputs/FirstRowIsHeader.js","D2App/components/Inputs/ClassKey.js","D2App/components/Inputs/Strategy.js","D2App/components/Inputs/PreheatCache.js","D2App/components/Inputs/SkipAudit.js","D2App/components/Inputs/SkipExistingCheck.js","D2App/components/Inputs/Identifier.js","D2App/components/Inputs/ImportReportMode.js","D2App/components/Inputs/PreheatMode.js","D2App/components/Inputs/ImportStrategy.js","D2App/components/Inputs/AtomicMode.js","D2App/components/Inputs/MergeMode.js","D2App/components/Inputs/FlushMode.js","D2App/components/Inputs/InclusionStrategy.js","D2App/components/Inputs/SkipSharing.js","D2App/components/Inputs/SkipValidation.js","D2App/components/Inputs/IsAsync.js","D2App/components/Inputs/OrgUnitTree.js","D2App/components/Inputs/DataSetPicker.js","D2App/components/Inputs/ProgramPicker.js","D2App/components/Inputs/IncludeChildren.js","D2App/components/Inputs/IncludeDeleted.js","D2App/components/Inputs/Compression.js","D2App/components/Inputs/Inclusion.js","D2App/components/Inputs/StartDate.js","D2App/components/Inputs/EndDate.js","D2App/components/Inputs/ExportButton.js","D2App/components/Inputs/ProgramStages.js","D2App/components/Schemas/helper.js","D2App/components/Schemas/SchemaGroup.js","D2App/components/Schemas/Schemas.js","D2App/components/Schemas/SchemasField.js","D2App/components/Inputs/Schemas.js","D2App/components/Inputs/ObjectType.js","D2App/components/Inputs/Objects.js","D2App/hooks/useObjects.js","D2App/components/Inputs/DataElementIdScheme.js","D2App/components/Inputs/EventIdScheme.js","D2App/components/Inputs/IdScheme.js","D2App/components/Inputs/OrgUnitIdScheme.js","D2App/utils/final-form.js","D2App/pages/MetadataImport/form-helper.js","D2App/pages/MetadataImport/MetadataImport.js","D2App/pages/MetadataExport/MetadataExport.js","D2App/pages/MetadataExport/form-helper.js","D2App/pages/MetadataDependencyExport/MetadataDependencyExport.js","D2App/pages/MetadataDependencyExport/form-helper.js","D2App/pages/JobOverview/JobOverview.js","D2App/pages/GMLImport/GMLImport.js","D2App/pages/GMLImport/form-helper.js","D2App/pages/EventImport/EventImport.js","D2App/pages/EventImport/form-helper.js","D2App/pages/EventExport/form-helper.js","D2App/pages/EventExport/EventExport.js","D2App/components/WithAuthority/predicates.js","D2App/pages/DataImport/DataImport.js","D2App/pages/DataImport/form-helper.js","D2App/pages/DataExport/form-helper.js","D2App/pages/DataExport/DataExport.js","D2App/components/Router/Router.js","D2App/components/Select/Select.js","D2App/components/Select/SelectField.js","D2App/components/SelectableList/SelectableList.js","D2App/components/Sidebar/Sidebar.js","D2App/components/StyledLink/StyledLink.js","D2App/components/Switch/Switch.js","D2App/components/WithAuthority/WithAuthority.js","D2App/App.js"],"names":["module","exports","UserContext","React","createContext","undefined","TaskContext","getNewestTask","tasks","Object","keys","map","k","sort","a","b","created","createStyle","width","height","display","fill","color","userSelect","MetadataImportIcon","viewBox","style","data-test","d","MetadataExportIcon","MetadataDependencyExportIcon","DataIcon","EventIcon","GMLIcon","PlusIcon","MinusIcon","TasksIcon","categoryTypes","key","importType","icon","label","i18n","t","allCategories","jobEventQuery","events","resource","id","type","taskId","jobSummaryQuery","summary","defaultTasks","data","event","gml","metadata","defaultJobOverview","activeTypes","selectedJob","useTasks","engine","useDataEngine","setTasks","useState","jobOverview","setJobOverview","fetchSummary","async","task","newTask","error","query","variables","console","status","createFetchSummary","fetchEvents","completed","length","newEvents","filter","e","some","te","uid","level","text","message","date","Date","time","errorEvent","find","reverse","lastUpdated","setTimeout","createFetchEvents","addTask","entry","createAddTask","updateJobOverview","val","createUpdateJobOverview","userQuery","user","programStageQuery","fields","params","paging","ALL_LABEL","classKeyQuery","mapping","json","xml","csv","adx","pdf","getUploadXHR","url","upload","onResponse","onError","setProgress","format","xhr","XMLHttpRequest","contentType","getMimeType","withCredentials","open","setRequestHeader","name","onreadystatechange","onReadyStateChange","onprogress","onProgress","Math","floor","readyState","idAndMsg","extractIdAndMessage","JSON","parse","responseText","typeReports","response","Array","isArray","objectReports","errorReports","msg","evt","lengthComputable","percentComplete","parseInt","loaded","total","max","pathToId","path","pathSplit","split","jsDateToISO8601","getFullYear","toString","getMonth","padStart","getDate","jsDateToString","getHours","getMinutes","getSeconds","blobType","compression","downloadBlob","filename","link","document","createElement","href","setAttribute","body","appendChild","click","remove","fetchAttributes","apiBaseUrl","attribute","filters","fetch","credentials","then","resp","Promise","resolve","catch","Error","statusText","reject","fetcher","attributes","displayName","value","genericErrorMessage","errorGenerator","timestamp","getTime","critical","uploadFile","file","addEntry","errF","ev","target","e2","send","locationAssign","window","location","getPrevJobDetails","job","jobDetails","formatOptions","formatNoCsvOptions","f","formatAdxOptions","formatAdxPdfOptions","compressionOptions","objectTypeOptions","dataElementIdSchemeOptions","orgUnitIdSchemeOptions","idSchemeOptions","eventIdSchemeOptions","inclusionOptions","strategyOptions","importStrategyOptions","identifierOptions","importReportModeOptions","preheatModeOptions","atomicModeOptions","mergeModeOptions","flushModeOptions","inclusionStrategyOptions","defaultFormatOption","defaultCompressionOption","defaultObjectTypeOption","defaultDataElementIdSchemeOption","defaultOrgUnitIdSchemeOption","defaultIdSchemeOption","defaultEventIdSchemeOption","defaultInclusionOption","defaultStrategyOption","defaultIdentifierOption","defaultImportReportModeOption","defaultPreheatModeOption","defaultImportStrategyOption","defaultAtomicModeOption","defaultMergeModeOption","defaultFlushModeOption","defaultInclusionStrategyOption","optionPropType","PropTypes","exact","string","isRequired","DataElementIdScheme","arrayOf","dataTest","baseUrl","useConfig","loading","setLoading","schemes","setSchemes","setError","useEffect","validationText","options","SelectField","dense","dataSetQuery","dataSets","DataSetPicker","selected","setSelected","meta","multiSelect","withFilter","withActions","list","setList","useDataQuery","onComplete","showList","FormField","SelectableList","touched","pristine","SINGLE_DATASET_VALIDATOR","selectedDataSets","SINGLE_EXACT_DATASET_VALIDATOR","Wrapper","input","onChange","rest","DataSetPickerField","validator","component","validate","DatePicker","required","inputWidth","DATE_VALIDATOR","DATE_BEFORE_VALIDATOR","date1","date2","DATE_AFTER_VALIDATOR","inputName","DatePickerField","EventIdScheme","FileUpload","initialValue","accept","FileInput","FormAlerts","alerts","bars","setBars","newBars","warning","info","success","duration","className","styles","container","children","IdScheme","err","dataElementAttributes","organisationUnitAttributes","sharedAttributes","reduce","shared","collection","attributeFoundIn","DRYRUN_HELPTEXT","ImportButtonStrip","dryRunDataTest","importDataTest","form","primary","onClick","change","dryRun","secondary","categoryTypesObj","acc","cur","MenuLabel","files","substring","JobOverview","setActiveTypes","setSelectedJob","useContext","allTasks","flat","createdAt","filteredTasks","includes","items","Menu","chips","onChipClick","active","JobSummary","showFileDetails","showJobDetails","to","pathname","Events","statsPropTypeObj","deleted","number","ignored","updated","imported","getClassName","c","s","SingleStatusTable","property","description","SingleSummary","importCount","conflicts","i","object","TypeCount","stats","Messages","messages","m","TypeReportSummary","overviewStats","extractStats","responseType","Summary","report","allStats","allMessages","forEach","klass","r","push","mainKlass","errorProperty","typeReportParse","overviewSummary","allSummaries","importSummaries","valueToString","File","v","join","Details","details","Header","header","title","taskDetails","Tags","tags","positive","neutral","negative","bold","MiniJobSummary","MoreOptions","initiallyVisible","hidden","setHidden","OrgUnitIdScheme","Tree","select","onOpen","onClose","node","l","hasChildren","checked","rootQuery","roots","orgQuery","units","OrgUnitTree","setChildren","organisationUnits","formatList","toggleOpenStatus","hierarchy","p","newChildren","parent","el","showTree","newValue","ch","orgId","localeCompare","setChildrenFor","SINGLE_ORG_VALIDATOR","selectedOrgUnits","SINGLE_EXACT_ORG_VALIDATOR","OrgUnitTreeField","Page","desc","summaryTask","showFullSummaryTask","loadingEl","amount","preBody","content","programQuery","programs","ProgramPicker","autoSelectFirst","defaultProps","SINGLE_PROGRAM_VALIDATOR","selectedPrograms","SINGLE_EXACT_PROGRAM_VALIDATOR","ProgramPickerField","ProgramStages","program","programStagesLoading","programStagesError","programStagesValidationText","programStages","stages","setStages","formattedList","useProgramStages","RadioGroup","setValue","inputs","o","radio","help","RadioGroupField","LABEL","VALIDATOR","Format","availableFormats","FirstRowIsHeader","show","Switch","ClassKey","prevValue","classKeysLoading","classKeysError","classKeysValidationText","classKeys","setClassKeys","classData","useClassKeys","filterable","Strategy","HELPTEXT","PreheatCache","SkipAudit","SkipExistingCheck","Identifier","ImportReportMode","PreheatMode","ImportStrategy","AtomicMode","MergeMode","FlushMode","InclusionStrategy","SkipSharing","SkipValidation","IsAsync","orgValidator","composeValidators","hasValue","dataSetValidator","programValidator","IncludeChildren","IncludeDeleted","Compression","availableCompressions","Inclusion","StartDate","EndDate","ExportButton","programStage","props","findLabelByLowerCaseComparison","groupKey","schemas","foundLabel","schemaName","toLowerCase","isGroupKeyMatchingLowerCaseSchemaName","findKeyByCamelCaseComparison","indexOf","isGroupKeyInSchemaName","str","substr","replace","toUpperCase","getSchemaGroups","groups","combinedGroups","groupName","group","other","combineSingleItemGroups","schema","groupSchemas","getGroupLabels","schemaGroups","entries","groupLabels","lowerCaseGroupKey","extractGroupLabelFromSchemas","pop","SchemaGroup","toggleSchema","formLabel","ind","schemaQuery","Schemas","excludeSchemas","setCheckedSchemas","checkedByDefault","setSchemaGroups","schemaGroupLabels","setSchemaGroupLabels","schemaGroupOrder","setSchemaGroupOrder","formattedSchemas","collectionName","formatSchemas","excludedSchemas","has","filterOutExcludedSchemas","groupKeys","getGroupOrder","propagateCheckedSchemas","updatedSchemaGroups","onSelectGeneric","grAcc","showSchemas","formControl","schemaGroup","updatedGroup","SchemasField","checkedSchemas","EXCLUDE_SCHEMAS","Set","ObjectType","filled","initialFocus","Objects","objectType","objectsLoading","objectsError","objectsValidationText","objects","setObjects","useObjects","FORM_ERROR","values","classKey","PAGE_NAME","PAGE_DESCRIPTION","PAGE_ICON","MetadataImport","metadataTasks","useLocation","prevJobDetails","initialValues","identifier","importReportMode","preheatMode","importStrategy","firstRowIsHeader","atomicMode","mergeMode","flushMode","inclusionStrategy","skipSharing","skipValidation","isAsync","createInitialValues","progress","setShowFullSummaryTask","onSubmit","formErrors","onImport","subscription","submitError","render","handleSubmit","MetadataExport","endpointExtension","schemaParams","downloadUrlParams","onExport","MetadataDependencyExport","endpoint","types","GMLImport","gmlTasks","EventImport","eventTasks","dataElementIdScheme","orgUnitIdScheme","eventIdScheme","startDate","endDate","today","includeDeleted","idScheme","inclusion","EventExport","hasAuthorityToSkipAudit","authorities","DataImport","dataTasks","strategy","preheatCache","skipAudit","skipExistingCheck","WithAuthority","pred","dataValueSetQuery","sets","orgUnit","dataSet","includeChildren","dataStr","stringify","zip","JSZip","generateAsync","URL","createObjectURL","contents","Blob","createBlob","errors","DataExport","Router","from","Select","noMatchText","helpText","optionEls","setFilter","onSelect","actions","action","all","dataImportPage","code","eventImportPage","gmlImportPage","metadataImportPage","dataExportPage","eventExportPage","metadataDependencyExportPage","metadataExportPage","importPages","exportPages","jobOverviewPage","SidebarItem","StyledLink","Sidebar","sectionTitle","passThroughProps","SwitchUI","App","log","useUser","Provider","sidebar"],"mappings":"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","file":"static/js/app.21718f43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Schemas_container__3H0XX\",\"group\":\"Schemas_group__QeGXq\",\"schema\":\"Schemas_schema__36IFP\",\"formLabel\":\"Schemas_formLabel__1geS0\",\"formControl\":\"Schemas_formControl__2ycln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2zgzu\",\"sidebar\":\"App_sidebar__10tAV\",\"content\":\"App_content__3I8HS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormAlerts_container__JPYH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormField_container__3nG83\",\"label\":\"FormField_label__2Au43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dryRun\":\"ImportButtonStrip_dryRun__112kw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobOverview_container__1_oyo\",\"items\":\"JobOverview_items__2B1hs\",\"Menu\":\"JobOverview_Menu__2bTUp\",\"summary\":\"JobOverview_summary__13xs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MenuLabel_container__ZTyjb\",\"status\":\"MenuLabel_status__1UTMj\",\"date\":\"MenuLabel_date__1r_sY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobSummary_container__2Zh6N\",\"title\":\"JobSummary_title__sZ7p4\",\"taskDetails\":\"JobSummary_taskDetails__3aEqI\",\"tags\":\"JobSummary_tags__3qnhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoreOptions_container__2zKqV\",\"header\":\"MoreOptions_header__120Ww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OrgUnitTree_container__tSgX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page_container__3NEqL\",\"content\":\"Page_content__39Ql1\",\"preBody\":\"Page_preBody__3d4Jp\",\"header\":\"Page_header__13-dA\",\"title\":\"Page_title__rl9Ut\",\"desc\":\"Page_desc__2uKSe\",\"icon\":\"Page_icon__20L2r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputs\":\"RadioGroup_inputs__2MDMV\",\"radio\":\"RadioGroup_radio__2G6wY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"JobOverview_container__F-fbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3_2MB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"SelectableList_body__80Xuu\",\"filter\":\"SelectableList_filter__SHsK2\",\"actions\":\"SelectableList_actions__1Pw1O\",\"action\":\"SelectableList_action__kmkJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Sidebar_Menu__3Gy0D\",\"sectionTitle\":\"Sidebar_sectionTitle__lKKbo\",\"jobOverview\":\"Sidebar_jobOverview__2MJ0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"StyledLink_link__1GAq7\"};","import React from 'react';\nconst UserContext = React.createContext(undefined);\nexport { UserContext };","import React from 'react';\nconst TaskContext = React.createContext(undefined);\n\nconst getNewestTask = tasks => Object.keys(tasks).map(k => tasks[k]).sort((a, b) => a.created < b.created ? 1 : -1)[0];\n\nexport { TaskContext, getNewestTask };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst createStyle = (width, height) => ({\n  width: width || 24,\n  height: height || 24,\n  display: 'inline-block',\n  fill: 'current-color',\n  color: 'current-color',\n  userSelect: 'none'\n});\n\nexport const MetadataImportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadataimport\">\n        <path d=\"M14.039 8.968l-3.961-3.968h1.968s.991-3.178-2.985-5c6.191.222 6.972 5 6.972 5h1.967l-3.961 3.968zm6.461 5.575l-.342.195v1.717l.342-.195v-1.717zm-.844.481l-.35.199v1.717l.35-.199v-1.717zm.906-10.024l-1.306 1.55 1.62.919-6.859 3.698-8.86-5.138 4.436-2.685c-.234-.5-.626-.989-1.313-1.338l-5.124 2.978-3.156 5.487 2 1.106v5.445l12.25 6.978 9.75-5.551v-11.508l-3.438-1.941zm-16.624 2.688l7.897 4.54-1.192 2.091-7.872-4.605 1.167-2.026zm9.062 13.298l-9-5.126v-3.112l7.377 4.319 1.623-2.845v6.764zm9-3.7l-7 3.985v-8.361l7-3.773v8.149zm-4.907-.802l-.349.199v1.713l.349-.195v-1.717zm.584-.333l-.343.195v1.717l.343-.195v-1.717zm1.395-.794l-.343.195v1.717l.343-.195v-1.717zm-.574.327l-.344.196v1.717l.344-.196v-1.717z\" />\n    </svg>;\nexport const MetadataExportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadataexport\">\n        <path d=\"M13.904 9c-3.514-3.984-.1-7.598-.1-7.598l-1.393-1.389 5.589-.013v5.607l-1.372-1.391c0 .001-3.581.706-2.724 4.784zm5.752 6.024l-.35.199v1.717l.35-.199v-1.717zm.844-.481l-.342.195v1.717l.342-.195v-1.717zm-3.407 1.941l-.349.199v1.713l.349-.195v-1.717zm1.979-1.127l-.343.195v1.717l.343-.195v-1.717zm.949-10.673v2.295l.855.489-6.859 3.698-8.86-5.138 6.374-3.654-1.5-1.406-6.864 3.97-3.167 5.533 2 1.106v5.445l12.25 6.978 9.75-5.551v-11.508l-3.979-2.257zm-16.083 3.004l7.897 4.54-1.193 2.091-7.871-4.605 1.167-2.026zm9.062 13.298l-9-5.126v-3.112l5.632 3.297 1.746 1.022 1.002-1.757.62-1.088v6.764zm9-3.7l-7 3.985v-8.361l7-3.773v8.149zm-4.323-1.135l-.343.195v1.717l.343-.195v-1.717zm.821-.467l-.344.196v1.717l.344-.196v-1.717z\" />\n    </svg>;\nexport const MetadataDependencyExportIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-metadatadependencyexport\">\n        <path d=\"M16.949 16.132h2.332c-1.092 1.728-3.605 3.638-6.281 3.852v-8.984h3v-2h-3v-1.103c0-2.39 2-2.619 2-4.897 0-1.654-1.346-3-3-3s-3 1.346-3 3c0 2.297 2 2.487 2 4.897v1.103h-3v2h3v9c-2.639-.18-5.133-2.053-6.281-3.868h2.332l-5.051-3.132v5.912l1.269-1.8c2.702 4.503 6.379 4.305 8.731 6.888 2.352-2.583 6.029-2.385 8.731-6.889l1.269 1.8v-5.911l-5.051 3.132zm-5.949-13.132c0-.551.449-1 1-1s1 .449 1 1-.448 1-1 1-1-.449-1-1z\" />\n    </svg>;\nexport const DataIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-data\">\n        <path d=\"M6.083 4c1.38 1.612 2.578 3 4.917 3h11v13h-20v-16h4.083zm.917-2h-7v20h24v-17h-13c-1.629 0-2.305-1.058-4-3z\" />\n    </svg>;\nexport const EventIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-event\">\n        <path d=\"M20 20h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm6 0h-4v4h4v-4zm-6-6h-4v4h4v-4zm16-8v22h-24v-22h3v1c0 1.103.897 2 2 2s2-.897 2-2v-1h10v1c0 1.103.897 2 2 2s2-.897 2-2v-1h3zm-2 6h-20v14h20v-14zm-2-7c0-.552-.447-1-1-1s-1 .448-1 1v2c0 .552.447 1 1 1s1-.448 1-1v-2zm-14 2c0 .552-.447 1-1 1s-1-.448-1-1v-2c0-.552.447-1 1-1s1 .448 1 1v2z\" />\n    </svg>;\nexport const GMLIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-gml\">\n        <path d=\"M13.144 8.171c-.035-.066.342-.102.409-.102.074.009-.196.452-.409.102zm-2.152-3.072l.108-.031c.064.055-.072.095-.051.136.086.155.021.248.008.332-.014.085-.104.048-.149.093-.053.066.258.075.262.085.011.033-.375.089-.304.171.096.136.824-.195.708-.176.225-.113.029-.125-.097-.19-.043-.215-.079-.547-.213-.68l.088-.102c-.206-.299-.36.362-.36.362zm13.008 6.901c0 6.627-5.373 12-12 12-6.628 0-12-5.373-12-12s5.372-12 12-12c6.627 0 12 5.373 12 12zm-8.31-5.371c-.006-.146-.19-.284-.382-.031-.135.174-.111.439-.184.557-.104.175.567.339.567.174.025-.277.732-.063.87-.025.248.069.643-.226.211-.381-.355-.13-.542-.269-.574-.523 0 0 .188-.176.106-.166-.218.027-.614.786-.614.395zm6.296 5.371c0-1.035-.177-2.08-.357-2.632-.058-.174-.189-.312-.359-.378-.256-.1-1.337.597-1.5.254-.107-.229-.324.146-.572.008-.12-.066-.454-.515-.605-.46-.309.111.474.964.688 1.076.201-.152.852-.465.992-.038.268.804-.737 1.685-1.251 2.149-.768.694-.624-.449-1.147-.852-.275-.211-.272-.66-.55-.815-.124-.07-.693-.725-.688-.813l-.017.166c-.094.071-.294-.268-.315-.321 0 .295.48.765.639 1.001.271.405.416.995.748 1.326.178.178.858.914 1.035.898.193-.017.803-.458.911-.433.644.152-1.516 3.205-1.721 3.583-.169.317.138 1.101.113 1.476-.029.433-.37.573-.693.809-.346.253-.265.745-.556.925-.517.318-.889 1.353-1.623 1.348-.216-.001-1.14.36-1.261.007-.094-.256-.22-.45-.353-.703-.13-.248-.015-.505-.173-.724-.109-.152-.475-.497-.508-.677-.002-.155.117-.626.28-.708.229-.117.044-.458.016-.656-.048-.354-.267-.646-.53-.851-.389-.299-.188-.537-.097-.964 0-.204-.124-.472-.398-.392-.564.164-.393-.44-.804-.413-.296.021-.538.209-.813.292-.346.104-.7-.082-1.042-.125-1.407-.178-1.866-1.786-1.499-2.946.037-.19-.114-.542-.048-.689.158-.352.48-.747.762-1.014.158-.15.361-.112.547-.229.287-.181.291-.553.572-.781.4-.325.946-.318 1.468-.388.278-.037 1.336-.266 1.503-.06 0 .038.191.604-.019.572.433.023 1.05.749 1.461.579.211-.088.134-.736.567-.423.262.188 1.436.272 1.68.069.15-.124.234-.93.052-1.021.116.115-.611.124-.679.098-.12-.044-.232.114-.425.025.116.055-.646-.354-.218-.667-.179.131-.346-.037-.539.107-.133.108.062.18-.128.274-.302.153-.53-.525-.644-.602-.116-.076-1.014-.706-.77-.295l.789.785c-.039.025-.207-.286-.207-.059.053-.135.02.579-.104.347-.055-.089.09-.139.006-.268 0-.085-.228-.168-.272-.226-.125-.155-.457-.497-.637-.579-.05-.023-.764.087-.824.11-.07.098-.13.201-.179.311-.148.055-.287.126-.419.214l-.157.353c-.068.061-.765.291-.769.3.029-.075-.487-.171-.453-.321.038-.165.213-.68.168-.868-.048-.197 1.074.284 1.146-.235.029-.225.046-.487-.313-.525.068.008.695-.246.799-.36.146-.168.481-.442.724-.442.284 0 .223-.413.354-.615.131.053-.07.376.087.507-.01-.103.445.057.489.033.104-.054.684-.022.594-.294-.1-.277.051-.195.181-.253-.022.009.34-.619.402-.413-.043-.212-.421.074-.553.063-.305-.024-.176-.52-.061-.665.089-.115-.243-.256-.247-.036-.006.329-.312.627-.241 1.064.108.659-.735-.159-.809-.114-.28.17-.509-.214-.364-.444.148-.235.505-.224.652-.476.104-.178.225-.385.385-.52.535-.449.683-.09 1.216-.041.521.048.176.124.104.324-.069.19.286.258.409.099.07-.092.229-.323.298-.494.089-.222.901-.197.334-.536-.374-.223-2.004-.672-3.096-.672-.236 0-.401.263-.581.412-.356.295-1.268.874-1.775.698-.519-.179-1.63.66-1.808.666-.065.004.004-.634.358-.681-.153.023 1.247-.707 1.209-.859-.046-.18-2.799.822-2.676 1.023.059.092.299.092-.016.294-.18.109-.372.801-.541.801-.505.221-.537-.435-1.099.409l-.894.36c-1.328 1.411-2.247 3.198-2.58 5.183-.013.079.334.226.379.28.112.134.112.712.167.901.138.478.479.744.74 1.179.154.259.41.914.329 1.186.108-.178 1.07.815 1.246 1.022.414.487.733 1.077.061 1.559-.217.156.33 1.129.048 1.368l-.361.093c-.356.219-.195.756.021.982 1.818 1.901 4.38 3.087 7.22 3.087 5.517 0 9.989-4.472 9.989-9.989zm-11.507-6.357c.125-.055.293-.053.311-.22.015-.148.044-.046.08-.1.035-.053-.067-.138-.11-.146-.064-.014-.108.069-.149.104l-.072.019-.068.087.008.048-.087.106c-.085.084.002.139.087.102z\" />\n    </svg>;\nexport const LogoIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-logo\">\n        <path d=\"M9 3L5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const PlusIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-plus\">\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const MinusIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-minus\">\n        <path d=\"M19 13H5v-2h14v2z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\nexport const TasksIcon = ({\n  width,\n  height\n}) => <svg viewBox=\"0 0 24 24\" style={createStyle(width, height)} data-test=\"icon-tasks\">\n        <path d=\"M19 2h-4.2C14.4.8 13.3 0 12 0c-1.3 0-2.4.8-2.8 2H5C4 2 3 3 3 4v16c0 1 1 2 2 2h14c1 0 2-1 2-2V4c0-1-1-2-2-2zm-7 0c.6 0 1 .5 1 1s-.5 1-1 1-1-.5-1-1 .5-1 1-1zm7 18H5V4h2v3h10V4h2v16z\"></path>\n    </svg>;\nconst iconPropTypes = {\n  height: PropTypes.number,\n  width: PropTypes.number\n};\nDataIcon.propTypes = iconPropTypes;\nEventIcon.propTypes = iconPropTypes;\nGMLIcon.propTypes = iconPropTypes;\nLogoIcon.propTypes = iconPropTypes;\nMetadataDependencyExportIcon.propTypes = iconPropTypes;\nMetadataExportIcon.propTypes = iconPropTypes;\nMetadataImportIcon.propTypes = iconPropTypes;\nMinusIcon.propTypes = iconPropTypes;\nPlusIcon.propTypes = iconPropTypes;\nTasksIcon.propTypes = iconPropTypes;","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { DataIcon, EventIcon, GMLIcon, MetadataImportIcon } from '../components/Icon/Icon';\nconst categoryTypes = [{\n  key: 'data',\n  importType: 'DATAVALUE_IMPORT',\n  icon: <DataIcon />,\n  label: i18n.t('Data')\n}, {\n  key: 'event',\n  importType: 'EVENT_IMPORT',\n  icon: <EventIcon />,\n  label: i18n.t('Event')\n}, {\n  key: 'gml',\n  importType: 'GML_IMPORT',\n  icon: <GMLIcon />,\n  label: i18n.t('GML')\n}, {\n  key: 'metadata',\n  importType: 'METADATA_IMPORT',\n  icon: <MetadataImportIcon />,\n  label: i18n.t('Metadata')\n}];\nconst allCategories = categoryTypes.map(({\n  importType\n}) => importType);\nexport { categoryTypes, allCategories };","import { useState } from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { allCategories } from '../utils/tasks';\nconst jobEventQuery = {\n  events: {\n    resource: 'system/tasks/',\n    id: ({\n      type,\n      taskId\n    }) => `${type}/${taskId}`\n  }\n};\nconst jobSummaryQuery = {\n  summary: {\n    resource: 'system/taskSummaries/',\n    id: ({\n      type,\n      taskId\n    }) => `${type}/${taskId}`\n  }\n};\nconst defaultTasks = {\n  data: {},\n  event: {},\n  gml: {},\n  metadata: {}\n};\nconst defaultJobOverview = {\n  activeTypes: allCategories,\n  selectedJob: undefined\n};\nconst defaultRefetchPeriod = 2000;\n\nconst createFetchEvents = (engine, setTasks, fetchSummary) => (type, id, task) => {\n  const fetchEvents = async () => {\n    if (task.completed) {\n      return;\n    }\n\n    const newTask = { ...task\n    };\n    const {\n      events,\n      error\n    } = await engine.query(jobEventQuery, {\n      variables: {\n        type: task.importType,\n        taskId: task.id\n      }\n    });\n\n    if (error) {\n      console.error('fetchEvents error: ', error);\n      return;\n    }\n\n    if (events && events.length) {\n      const newEvents = events.filter(e => !task.events.some(te => te.id == e.uid)).map(e => ({\n        id: e.uid,\n        level: e.level,\n        text: e.message,\n        date: new Date(e.time)\n      }));\n      const errorEvent = newEvents.find(e => e.level == 'ERROR');\n\n      if (errorEvent) {\n        newTask.error = errorEvent.text;\n      }\n\n      newTask.events = [...newTask.events, ...newEvents.reverse()];\n      newTask.completed = events[0].completed;\n    }\n\n    newTask.lastUpdated = new Date();\n\n    if (!newTask.completed) {\n      setTimeout(() => fetchEvents(type, id, newTask), defaultRefetchPeriod);\n    } else {\n      fetchSummary(type, id, newTask);\n    }\n\n    setTasks(tasks => ({ ...tasks,\n      [type]: { ...tasks[type],\n        [id]: newTask\n      }\n    }));\n  };\n\n  fetchEvents();\n};\n\nconst createFetchSummary = (engine, setTasks) => async (type, id, task) => {\n  const newTask = { ...task\n  };\n  const {\n    summary,\n    error\n  } = await engine.query(jobSummaryQuery, {\n    variables: {\n      type: task.importType,\n      taskId: task.id\n    }\n  });\n\n  if (error) {\n    console.error('fetchSummary error: ', error);\n    return;\n  }\n\n  if (summary && summary.status == 'ERROR' && !newTask.error) {\n    newTask.error = true;\n  }\n\n  newTask.summary = summary;\n  setTasks(tasks => ({ ...tasks,\n    [type]: { ...tasks[type],\n      [id]: newTask\n    }\n  }));\n};\n\nconst createAddTask = (setTasks, fetchEvents) => (type, id, entry) => {\n  setTasks(tasks => ({ ...tasks,\n    [type]: { ...tasks[type],\n      [id]: entry\n    }\n  }));\n  fetchEvents(type, id, entry);\n};\n\nconst createUpdateJobOverview = setJobOverview => val => {\n  setJobOverview(jobOverview => ({ ...jobOverview,\n    ...val\n  }));\n};\n\nconst useTasks = () => {\n  const engine = useDataEngine();\n  const [tasks, setTasks] = useState(defaultTasks);\n  const [jobOverview, setJobOverview] = useState(defaultJobOverview);\n  const fetchSummary = createFetchSummary(engine, setTasks);\n  const fetchEvents = createFetchEvents(engine, setTasks, fetchSummary);\n  const addTask = createAddTask(setTasks, fetchEvents);\n  const updateJobOverview = createUpdateJobOverview(setJobOverview);\n  return {\n    tasks,\n    addTask,\n    jobOverview,\n    updateJobOverview\n  };\n};\n\nexport { useTasks };","import { useDataQuery } from '@dhis2/app-runtime';\nconst userQuery = {\n  user: {\n    resource: 'me'\n  }\n};\n\nconst useUser = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(userQuery);\n\n  if (error) {\n    console.log('useUser error: ', error);\n  }\n\n  return {\n    loading,\n    error,\n    user: data && data.user\n  };\n};\n\nexport { useUser };","import { useState, useEffect } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataEngine } from '@dhis2/app-runtime';\nconst programStageQuery = {\n  data: {\n    resource: 'programs',\n    fields: 'id,displayName',\n    id: ({\n      id\n    }) => `${id}`,\n    params: {\n      fields: 'programStages[id,displayName]',\n      paging: 'false'\n    }\n  }\n};\nconst ALL_VALUE = '';\nconst ALL_LABEL = `[ ${i18n.t('All program stages')} ]`;\n\nconst useProgramStages = (program, setSelected) => {\n  const engine = useDataEngine();\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [stages, setStages] = useState([]);\n  useEffect(() => {\n    if (program) {\n      setLoading(true);\n      setSelected(undefined);\n    } else {\n      setLoading(false);\n    }\n\n    if (program) {\n      engine.query(programStageQuery, {\n        variables: {\n          id: program\n        },\n        onComplete: data => {\n          const list = data.data.programStages;\n          const formattedList = list.map(e => ({\n            value: e.id,\n            label: e.displayName\n          }));\n          setStages([{\n            value: ALL_VALUE,\n            label: ALL_LABEL\n          }, ...formattedList]);\n          setSelected({\n            value: ALL_VALUE,\n            label: ALL_LABEL\n          });\n          setLoading(false);\n        },\n        onError: error => {\n          setError(error);\n          console.error('useProgramStages error: ', error);\n        }\n      });\n    }\n  }, [program]);\n  const validationText = error && `${i18n.t('Something went wrong when loading the program stages')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    programStages: stages\n  };\n};\n\nexport { useProgramStages, ALL_VALUE };","import { useState } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataQuery } from '@dhis2/app-runtime';\nconst classKeyQuery = {\n  keys: {\n    resource: 'metadata/csvImportClasses'\n  }\n};\n\nconst useClassKeys = (setValue, prevValue) => {\n  const [classKeys, setClassKeys] = useState([]);\n  const {\n    loading,\n    error\n  } = useDataQuery(classKeyQuery, {\n    onComplete: classData => {\n      setClassKeys(classData.keys.map(k => ({\n        value: k,\n        label: k\n      })));\n\n      if (prevValue) {\n        setValue(prevValue);\n      } else {\n        setValue({\n          value: classData.keys[0],\n          label: classData.keys[0]\n        });\n      }\n    },\n    onError: error => {\n      console.error('useClassKeys error: ', error);\n    }\n  });\n  const validationText = error && `${i18n.t('Something went wrong when loading the class keys')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    classKeys\n  };\n};\n\nexport { useClassKeys };","const mapping = {\n  json: 'application/json',\n  xml: 'application/xml',\n  csv: 'application/csv',\n  gml: 'application/xml',\n  adx: 'application/adx+xml',\n  pdf: 'application/pdf'\n};\nexport const getMimeType = format => mapping[format] || null;","import { getMimeType } from './mime';\n\nconst getUploadXHR = ({\n  url,\n  upload,\n  type,\n  onResponse,\n  onError,\n  setProgress,\n  format\n}) => {\n  const xhr = new XMLHttpRequest();\n  const contentType = getMimeType(format);\n  xhr.withCredentials = true;\n  xhr.open('POST', url, true);\n  xhr.setRequestHeader('Content-Type', contentType);\n  xhr.setRequestHeader('Content-Disposition', 'attachment filename=\"' + upload.name + '\"');\n  xhr.onreadystatechange = onReadyStateChange({\n    xhr,\n    type,\n    onResponse,\n    onError\n  });\n  xhr.upload.onprogress = onProgress(setProgress);\n  return xhr;\n};\n\nconst onReadyStateChange = ({\n  xhr,\n  type,\n  onResponse,\n  onError\n}) => {\n  return e => {\n    const status = Math.floor(xhr.status / 100);\n\n    if (xhr.readyState === 4 && status === 2) {\n      const idAndMsg = extractIdAndMessage(xhr);\n      onResponse({ ...idAndMsg,\n        type: type\n      });\n    } else if (xhr.readyState === 4) {\n      onError(e);\n    }\n  };\n};\n\nconst extractIdAndMessage = xhr => {\n  const data = JSON.parse(xhr.responseText);\n  const {\n    message,\n    status,\n    typeReports,\n    response\n  } = data;\n\n  if (status && status === 'ERROR') {\n    if (Array.isArray(typeReports) && Array.isArray(typeReports[0].objectReports) && Array.isArray(typeReports[0].objectReports[0].errorReports)) {\n      return {\n        error: true,\n        msg: {\n          id: 'init',\n          text: typeReports[0].objectReports[0].errorReports[0].message,\n          date: new Date()\n        },\n        typeReports: data\n      };\n    }\n  }\n\n  if (typeof response !== 'undefined') {\n    return {\n      id: response.id,\n      msg: {\n        id: 'init',\n        text: message,\n        date: new Date(response.created)\n      }\n    };\n  }\n\n  return {\n    error: true\n  };\n};\n\nconst onProgress = setProgress => evt => {\n  if (evt.lengthComputable) {\n    const percentComplete = parseInt(evt.loaded / evt.total * 100);\n    setProgress(Math.max(1, percentComplete));\n  }\n};\n\nexport { getUploadXHR };","import i18n from '@dhis2/d2-i18n';\nimport { getUploadXHR } from './xhr';\n\nconst trimString = (length, string) => string.length > length ? string.substring(0, length - 3) + '...' : string;\n\nconst pathToId = path => {\n  const pathSplit = path.split('/');\n  const orgId = pathSplit[pathSplit.length - 1];\n  return orgId;\n};\n\nconst jsDateToISO8601 = date => `${date.getFullYear().toString()}-${(date.getMonth() + 1).toString().padStart(2, 0)}-${date.getDate().toString().padStart(2, 0)}`;\n\nconst jsDateToString = date => `${jsDateToISO8601(date)} ${date.getHours().toString().padStart(2, 0)}:${date.getMinutes().toString().padStart(2, 0)}:${date.getSeconds().toString().padStart(2, 0)}\n`;\n\nconst blobType = (format, compression) => {\n  if (compression === 'gzip') {\n    return `application/${format}+gzip`;\n  } else if (compression === 'zip') {\n    return `application/${format}+zip`;\n  }\n\n  if (format === 'xml') {\n    return 'application/xml';\n  } else if (format === 'json') {\n    return 'application/json';\n  }\n};\n\nconst createBlob = (contents, format, compression = 'none') => {\n  return URL.createObjectURL(new Blob([contents], {\n    type: blobType(format, compression)\n  }));\n};\n\nconst downloadBlob = (url, filename) => {\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', filename);\n  document.body.appendChild(link);\n  link.click();\n  link.remove();\n};\n\nconst fetchAttributes = async (apiBaseUrl, attribute) => {\n  const fetcher = url => fetch(url, {\n    credentials: 'include'\n  }).then(resp => {\n    if (resp.status >= 200 && resp.status < 300) {\n      return Promise.resolve(resp.json());\n    } else {\n      throw resp;\n    }\n  }).catch(resp => {\n    const error = new Error(resp.statusText || resp.status);\n    console.error(`fetchAttributes ${attribute} fetch error: `, error);\n    return Promise.reject(error);\n  });\n\n  const fields = 'id,displayName';\n  const filters = `unique:eq:true&filter=${attribute}:eq:true`;\n  const url = `${apiBaseUrl}attributes.json?paging=false&fields=${fields}&filter=${filters}`;\n  const json = await fetcher(url).catch(error => Promise.reject(error));\n  return json.attributes.map(({\n    id,\n    displayName\n  }) => ({\n    value: `ATTRIBUTE:${id}`,\n    label: displayName\n  }));\n};\n\nconst genericErrorMessage = i18n.t('An unknown error occurred. Please try again later');\n\nconst errorGenerator = setProgress => message => {\n  const timestamp = new Date().getTime();\n  setProgress(0);\n  return {\n    id: `xhr-${timestamp}`,\n    critical: true,\n    message: message ? message : genericErrorMessage\n  };\n};\n\nconst uploadFile = ({\n  url,\n  file,\n  format,\n  type,\n  setProgress,\n  addEntry\n}) => {\n  setProgress(1);\n  const errF = errorGenerator(setProgress);\n  return new Promise((resolve, reject) => {\n    try {\n      const xhr = getUploadXHR({\n        url,\n        upload: file,\n        type,\n        onResponse: ({\n          error,\n          id,\n          msg,\n          typeReports\n        }) => {\n          let entry;\n\n          if (error && msg) {\n            // error but we have a message\n            entry = {\n              id: new Date().getTime(),\n              level: 'ERROR',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: true,\n              events: [msg],\n              summary: typeReports,\n              error: true,\n              importType: type\n            };\n          } else if (error) {\n            // error with no message\n            entry = {\n              id: new Date().getTime(),\n              level: 'ERROR',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: true,\n              summary: undefined,\n              error: true,\n              importType: type\n            };\n          } else {\n            // success\n            entry = {\n              id: id,\n              level: 'INFO',\n              created: new Date(),\n              lastUpdated: new Date(),\n              completed: false,\n              events: [msg],\n              summary: undefined,\n              error: false,\n              importType: type\n            };\n          }\n\n          addEntry(entry.id, entry);\n\n          if (error) {\n            reject(errF(msg && msg.text));\n          }\n\n          setProgress(0);\n          resolve({});\n        },\n        onError: ev => {\n          let message;\n\n          try {\n            const response = JSON.parse(ev.target.response);\n            message = response.message;\n          } catch (e2) {\n            message = genericErrorMessage;\n          }\n\n          console.error('sendFile error', message);\n          reject(errF(message));\n        },\n        setProgress,\n        format\n      });\n      xhr.send(file);\n    } catch (e) {\n      // xhr.send can throw an exception\n      reject(errorGenerator(e));\n    }\n  });\n}; // call stub function if available\n\n\nconst locationAssign = url => {\n  if (window.locationAssign) {\n    window.locationAssign(url);\n  } else {\n    window.location = url;\n  }\n};\n\nconst getPrevJobDetails = (query, tasks) => {\n  if (!query || !query.id) return {};\n  const job = tasks[query.id];\n  if (!job) return {};\n  return job.jobDetails;\n};\n\nexport { createBlob, downloadBlob, fetchAttributes, getPrevJobDetails, locationAssign, jsDateToISO8601, jsDateToString, pathToId, trimString, uploadFile };","import PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nconst formatOptions = [{\n  value: 'json',\n  label: i18n.t('JSON')\n}, {\n  value: 'csv',\n  label: i18n.t('CSV')\n}, {\n  value: 'xml',\n  label: i18n.t('XML')\n}];\nconst formatNoCsvOptions = formatOptions.filter(f => f.value != 'csv');\nconst formatAdxOptions = [...formatOptions, {\n  value: 'adx',\n  label: i18n.t('ADX')\n}];\nconst formatAdxPdfOptions = [...formatAdxOptions, {\n  value: 'pdf',\n  label: i18n.t('PDF')\n}];\nconst compressionOptions = [{\n  value: 'zip',\n  label: i18n.t('Zip')\n}, {\n  value: 'gz',\n  label: i18n.t('GZip')\n}, {\n  value: '',\n  label: i18n.t('Uncompressed')\n}];\nconst objectTypeOptions = [{\n  value: 'dataSets',\n  label: i18n.t('Data sets')\n}, {\n  value: 'programs',\n  label: i18n.t('Programs')\n}, {\n  value: 'categoryCombos',\n  label: i18n.t('Category combination')\n}, {\n  value: 'dashboards',\n  label: i18n.t('Dashboard')\n}, {\n  value: 'dataElementGroups',\n  label: i18n.t('Data element groups')\n}, {\n  value: 'optionSets',\n  label: i18n.t('Option sets')\n}];\nconst dataElementIdSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}, {\n  value: 'NAME',\n  label: i18n.t('Name')\n}];\nconst orgUnitIdSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}, {\n  value: 'NAME',\n  label: i18n.t('Name')\n}];\nconst idSchemeOptions = [{\n  value: 'UID',\n  label: i18n.t('Uid')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}];\nconst eventIdSchemeOptions = [...idSchemeOptions];\nconst inclusionOptions = [{\n  value: 'SELECTED',\n  label: i18n.t('Selected organisation unit')\n}, {\n  value: 'CHILDREN',\n  label: i18n.t('Include children of organisation unit')\n}, {\n  value: 'DESCENDANTS',\n  label: i18n.t('Include descendants of organisation unit')\n}];\nconst skipExisitingCheckOptions = [{\n  value: 'true',\n  label: i18n.t('Skip check'),\n  help: 'fast'\n}, {\n  value: 'false',\n  label: i18n.t('Check'),\n  help: 'safe, recommended'\n}];\nconst strategyOptions = [{\n  value: 'NEW_AND_UPDATES',\n  label: i18n.t('New and updates')\n}, {\n  value: 'NEW',\n  label: i18n.t('New only')\n}, {\n  value: 'UPDATES',\n  label: i18n.t('Updates only')\n}, {\n  value: 'DELETE',\n  label: i18n.t('Delete')\n}];\nconst importStrategyOptions = [{\n  value: 'CREATE_AND_UPDATE',\n  label: i18n.t('New and updates')\n}, {\n  value: 'CREATE',\n  label: i18n.t('New only')\n}, {\n  value: 'UPDATES',\n  label: i18n.t('Updates only')\n}, {\n  value: 'DELETE',\n  label: i18n.t('Delete')\n}];\nconst identifierOptions = [{\n  value: 'UID',\n  label: i18n.t('UID')\n}, {\n  value: 'CODE',\n  label: i18n.t('Code')\n}, {\n  value: 'AUTO',\n  label: i18n.t('Auto')\n}];\nconst importReportModeOptions = [{\n  value: 'ERRORS',\n  label: i18n.t('Errors')\n}, {\n  value: 'FULL',\n  label: i18n.t('Full')\n}, {\n  value: 'DEBUG',\n  label: i18n.t('Debug')\n}];\nconst preheatModeOptions = [{\n  value: 'REFERENCE',\n  label: i18n.t('Reference')\n}, {\n  value: 'ALL',\n  label: i18n.t('All')\n}, {\n  value: 'NONE',\n  label: i18n.t('None')\n}];\nconst atomicModeOptions = [{\n  value: 'ALL',\n  label: i18n.t('All')\n}, {\n  value: 'NONE',\n  label: i18n.t('None')\n}];\nconst mergeModeOptions = [{\n  value: 'MERGE',\n  label: i18n.t('Merge')\n}, {\n  value: 'REPLACE',\n  label: i18n.t('Replace')\n}];\nconst flushModeOptions = [{\n  value: 'AUTO',\n  label: i18n.t('Auto')\n}, {\n  value: 'OBJECT',\n  label: i18n.t('Object')\n}];\nconst inclusionStrategyOptions = [{\n  value: 'NON_NULL',\n  label: i18n.t('Non Null')\n}, {\n  value: 'ALWAYS',\n  label: i18n.t('Always')\n}, {\n  value: 'NON_EMPTY',\n  label: i18n.t('Non Empty')\n}];\nconst defaultFormatOption = formatOptions[0];\nconst defaultCompressionOption = compressionOptions[0];\nconst defaultObjectTypeOption = objectTypeOptions[0];\nconst defaultDataElementIdSchemeOption = dataElementIdSchemeOptions[0];\nconst defaultOrgUnitIdSchemeOption = orgUnitIdSchemeOptions[0];\nconst defaultIdSchemeOption = idSchemeOptions[0];\nconst defaultEventIdSchemeOption = eventIdSchemeOptions[0];\nconst defaultInclusionOption = inclusionOptions[0];\nconst defaultSkipExisitingCheckOption = skipExisitingCheckOptions[0];\nconst defaultStrategyOption = strategyOptions[0];\nconst defaultIdentifierOption = identifierOptions[0];\nconst defaultImportReportModeOption = importReportModeOptions[0];\nconst defaultPreheatModeOption = preheatModeOptions[0];\nconst defaultImportStrategyOption = importStrategyOptions[0];\nconst defaultAtomicModeOption = atomicModeOptions[0];\nconst defaultMergeModeOption = mergeModeOptions[0];\nconst defaultFlushModeOption = flushModeOptions[0];\nconst defaultInclusionStrategyOption = inclusionStrategyOptions[0];\nconst optionPropType = PropTypes.exact({\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n});\nconst optionsPropType = PropTypes.arrayOf(optionPropType);\nexport { formatOptions, formatNoCsvOptions, formatAdxOptions, formatAdxPdfOptions, compressionOptions, objectTypeOptions, dataElementIdSchemeOptions, orgUnitIdSchemeOptions, idSchemeOptions, eventIdSchemeOptions, inclusionOptions, skipExisitingCheckOptions, strategyOptions, identifierOptions, importReportModeOptions, preheatModeOptions, importStrategyOptions, atomicModeOptions, mergeModeOptions, flushModeOptions, inclusionStrategyOptions, defaultFormatOption, defaultCompressionOption, defaultObjectTypeOption, defaultDataElementIdSchemeOption, defaultOrgUnitIdSchemeOption, defaultIdSchemeOption, defaultEventIdSchemeOption, defaultInclusionOption, defaultSkipExisitingCheckOption, defaultStrategyOption, defaultIdentifierOption, defaultImportReportModeOption, defaultPreheatModeOption, defaultImportStrategyOption, defaultAtomicModeOption, defaultMergeModeOption, defaultFlushModeOption, defaultInclusionStrategyOption, optionPropType, optionsPropType };","import React, { useEffect, useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { fetchAttributes } from '../../utils/helper';\nimport { dataElementIdSchemeOptions } from '../../utils/options';\nimport { SelectField } from '../';\n\nconst DataElementIdScheme = ({\n  name,\n  label,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    fetchAttributes(`${baseUrl}/api/`, 'dataElementAttribute').then(attributes => setSchemes(attributes)).catch(error => setError(error));\n    setLoading(false);\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional data element ID schemes')} : ${error.message}`;\n  const options = [...dataElementIdSchemeOptions, ...schemes];\n  return <SelectField name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} dense />;\n};\n\nDataElementIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { DataElementIdScheme };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { CircularLoader, Help } from '@dhis2/ui-core';\nimport { FormField, SelectableList } from '../';\nconst dataSetQuery = {\n  dataSets: {\n    resource: 'dataSets',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\n\nconst DataSetPicker = ({\n  label,\n  selected,\n  setSelected,\n  meta,\n  multiSelect = true,\n  withFilter = true,\n  withActions = true,\n  dataTest\n}) => {\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(undefined);\n  const {\n    loading\n  } = useDataQuery(dataSetQuery, {\n    onComplete: data => {\n      const dataSets = data.dataSets.dataSets;\n      const list = dataSets.map(({\n        id,\n        displayName\n      }) => ({\n        value: id,\n        label: displayName\n      }));\n      setList(list);\n    },\n    onError: error => {\n      setError(error);\n      console.error('DataSetPicker error: ', error);\n    }\n  });\n  const showList = !loading && !error;\n  return <FormField label={label} dataTest={dataTest}>\n            {loading && <CircularLoader dataTest={`${dataTest}-loading`} />}\n            {error && <div data-test={`${dataTest}-error`}>\n                    <p>\n                        {i18n.t('Something went wrong when loading the data sets!')}\n                    </p>\n                    <p>{error.message}</p>\n                </div>}\n            {showList && <SelectableList name=\"dataSetPicker\" label={i18n.t('Filter data sets by name')} selected={selected} setSelected={setSelected} multiSelect={multiSelect} list={list} withFilter={withFilter} withActions={withActions} dataTest={`${dataTest}-list`} />}\n            {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n        </FormField>;\n};\n\nDataSetPicker.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  selected: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelected: PropTypes.func.isRequired,\n  multiSelect: PropTypes.bool,\n  withActions: PropTypes.bool,\n  withFilter: PropTypes.bool\n};\nexport { DataSetPicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui-forms';\nimport { DataSetPicker } from '../';\n\nconst SINGLE_DATASET_VALIDATOR = selectedDataSets => selectedDataSets.length == 0 ? i18n.t('At least one data set must be selected') : undefined;\n\nconst SINGLE_EXACT_DATASET_VALIDATOR = selectedDataSets => selectedDataSets.length != 1 ? i18n.t('One data set must be selected') : undefined;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  ...rest\n}) => <DataSetPicker meta={meta} selected={value} setSelected={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst DataSetPickerField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nDataSetPickerField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { DataSetPickerField, SINGLE_DATASET_VALIDATOR, SINGLE_EXACT_DATASET_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputField } from '@dhis2/ui-core';\nimport { jsDateToISO8601 } from '../../utils/helper';\nimport { FormField } from '../';\n\nconst DatePicker = ({\n  name,\n  error,\n  label,\n  date,\n  onChange,\n  dataTest,\n  required = true\n}) => {\n  const onChangeHelper = ({\n    value\n  }) => {\n    onChange(new Date(value));\n  };\n\n  const value = jsDateToISO8601(date);\n  return <FormField label={label} dataTest={dataTest}>\n            <InputField type=\"date\" name={name} value={value} onChange={onChangeHelper} required={required} inputWidth=\"200px\" error={!!error} validationText={error} />\n        </FormField>;\n};\n\nDatePicker.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  required: PropTypes.bool\n};\nexport { DatePicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui-forms';\nimport { DatePicker } from '../';\n\nconst DATE_VALIDATOR = date => new Date(date) == 'Invalid Date' ? i18n.t('Invalid date') : undefined;\n\nconst DATE_BEFORE_VALIDATOR = (date1, date2) => date1 > date2 ? i18n.t('Start date must be before end date') : undefined;\n\nconst DATE_AFTER_VALIDATOR = (date2, date1) => date2 < date1 ? i18n.t('End date must be after start date') : undefined;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta: {\n    error\n  },\n  inputName,\n  ...rest\n}) => <DatePicker name={inputName} error={error} date={value} onChange={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.instanceOf(Date).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst DatePickerField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} inputName={name} type=\"date\" inputWidth=\"200px\" {...rest} />;\n};\n\nDatePickerField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { DatePickerField, DATE_VALIDATOR, DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SelectField } from '../';\nimport { eventIdSchemeOptions } from '../../utils/options';\n\nconst EventIdScheme = ({\n  name,\n  label,\n  dataTest\n}) => {\n  return <SelectField name={name} label={label} options={eventIdSchemeOptions} dense dataTest={dataTest} />;\n};\n\nEventIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { EventIdScheme };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { Field, FileInput } from '@dhis2/ui-forms';\nimport { FormField } from '../';\n\nconst SINGLE_FILE_VALIDATOR = files => !files || files.length == 0 ? i18n.t('Please select a file') : undefined;\n\nconst FileUpload = ({\n  initialValue,\n  required,\n  name,\n  label,\n  accept = '*',\n  validator,\n  dataTest\n}) => {\n  return <FormField label={label} required={required} dataTest={dataTest}>\n            <Field component={FileInput} name={name} accept={accept} required={required} initialValue={initialValue} validate={validator} dataTest={`${dataTest}-fileinput`} />\n        </FormField>;\n};\n\nFileUpload.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  accept: PropTypes.string,\n  initialValue: PropTypes.instanceOf(File),\n  required: PropTypes.bool,\n  validator: PropTypes.func\n};\nexport { FileUpload, SINGLE_FILE_VALIDATOR };","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AlertBar } from '@dhis2/ui-core';\nimport styles from './FormAlerts.module.css';\n\nconst FormAlerts = ({\n  alerts,\n  dataTest\n}) => {\n  const [bars, setBars] = useState([]);\n  useEffect(() => {\n    if (alerts) {\n      const newBars = alerts.map(a => <AlertBar key={`alert-${a.id}`} warning={a.warning} info={a.info} critical={a.critical} success={a.success} duration={8000}>\n                    {a.message}\n                </AlertBar>);\n      setBars(newBars);\n    }\n  }, [alerts]);\n  if (bars.length == 0) return null;\n  return <div className={styles.container} data-test={dataTest}>\n            {bars}\n        </div>;\n};\n\nFormAlerts.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  alerts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    critical: PropTypes.bool,\n    info: PropTypes.bool,\n    warning: PropTypes.bool\n  }))\n};\nexport { FormAlerts };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FormField.module.css';\n\nconst FormField = ({\n  dataTest,\n  label,\n  required = false,\n  children\n}) => {\n  return <div className={styles.container} data-test={dataTest}>\n            <span className={styles.label}>\n                {label}\n                {required && <span> *</span>}\n            </span>\n            {children}\n        </div>;\n};\n\nFormField.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  required: PropTypes.bool\n};\nexport { FormField };","import React, { useState, useEffect } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { fetchAttributes } from '../../utils/helper';\nimport { idSchemeOptions } from '../../utils/options';\nimport { SelectField } from '../';\n\nconst attributeFoundIn = (attribute, collection) => !!collection.find(({\n  value\n}) => value === attribute.value);\n\nconst IdScheme = ({\n  name,\n  label,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    const f = async () => {\n      let err;\n      const dataElementAttributes = await fetchAttributes(`${baseUrl}/api/`, 'dataElementAttribute').catch(error => err = error);\n      const organisationUnitAttributes = await fetchAttributes(`${baseUrl}/api/`, 'organisationUnitAttribute').catch(error => err = error);\n      setError(err);\n\n      if (!err) {\n        const sharedAttributes = dataElementAttributes.reduce((shared, attribute) => {\n          const foundInOrgUnits = attributeFoundIn(attribute, organisationUnitAttributes);\n          return foundInOrgUnits ? [...shared, attribute] : shared;\n        }, []);\n        setSchemes(sharedAttributes);\n      }\n\n      setLoading(false);\n    };\n\n    f();\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional ID schemes')} : ${error.message}`;\n  const options = [...idSchemeOptions, ...schemes];\n  return <SelectField name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} dense />;\n};\n\nIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { IdScheme };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, Help } from '@dhis2/ui-core';\nimport styles from './ImportButtonStrip.module.css';\nconst DRYRUN_HELPTEXT = i18n.t('Will do a test run without importing any data into the database');\n\nconst ImportButtonStrip = ({\n  dryRunDataTest,\n  importDataTest,\n  form,\n  dataTest\n}) => {\n  return <div data-test={dataTest}>\n            <ButtonStrip dataTest={`${dataTest}-button-strip`}>\n                <Button primary type=\"submit\" onClick={() => form.change('dryRun', true)} dataTest={dryRunDataTest} className={styles.dryRun}>\n                    {i18n.t('Dry run')}\n                </Button>\n                <Button secondary type=\"submit\" onClick={() => form.change('dryRun', false)} dataTest={importDataTest}>\n                    {i18n.t('Import')}\n                </Button>\n            </ButtonStrip>\n            <Help dataTest={`${dataTest}-help`}>{`${i18n.t('Dry run')}: ${DRYRUN_HELPTEXT}`}</Help>\n        </div>;\n};\n\nImportButtonStrip.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  dryRunDataTest: PropTypes.string.isRequired,\n  form: PropTypes.object.isRequired,\n  importDataTest: PropTypes.string.isRequired\n};\nexport { ImportButtonStrip };","import { categoryTypes } from '../../utils/tasks';\nconst categoryTypesObj = categoryTypes.reduce((acc, cur) => {\n  acc[cur.importType] = cur;\n  return acc;\n}, {});\n\nconst jobToPath = job => ({\n  pathname: `/import/${categoryTypesObj[job.importType].key}`,\n  query: {\n    id: job.id\n  }\n});\n\nexport { categoryTypesObj, jobToPath };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './MenuLabel.module.css';\nimport { jsDateToString, trimString } from '../../../utils/helper';\n\nconst MenuLabel = ({\n  task\n}) => {\n  return <div className={styles.container} data-test={`job-overview-menu-label-${task.id}`}>\n            <div className={styles.status}>\n                <span>{trimString(15, task.jobDetails.files[0].name)}</span>\n                <br />\n                <span>\n                    {task.completed ? i18n.t('Completed') : i18n.t('In progress')}{' '}\n                </span>\n            </div>\n            <div className={styles.date}>{jsDateToString(task.created)}</div>\n        </div>;\n};\n\nMenuLabel.propTypes = {\n  task: PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    created: PropTypes.instanceOf(Date).isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    jobDetails: PropTypes.object.isRequired\n  }).isRequired\n};\nexport { MenuLabel };","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Chip, Menu, MenuItem } from '@dhis2/ui-core';\nimport styles from './JobOverview.module.css';\nimport { TaskContext } from '../../contexts/';\nimport { categoryTypes } from '../../utils/tasks';\nimport { JobSummary } from '../';\nimport { categoryTypesObj, jobToPath } from './helper';\nimport { MenuLabel } from './MenuLabel/MenuLabel';\n\nconst JobOverview = ({\n  activeTypes,\n  setActiveTypes,\n  selectedJob,\n  setSelectedJob\n}) => {\n  const {\n    tasks\n  } = useContext(TaskContext);\n\n  const onChipClick = key => {\n    if (activeTypes.includes(key)) {\n      setActiveTypes([...activeTypes].filter(k => k != key));\n    } else {\n      setActiveTypes([...activeTypes, key]);\n    }\n  }; // all tasks sorted by type, createdAt (descending)\n\n\n  const allTasks = categoryTypes.map(({\n    key: type\n  }) => Object.keys(tasks[type]).map(id => tasks[type][id])).flat().sort((a, b) => {\n    if (a.importType > b.importType) return -1;\n    if (a.createdAt > b.createdAt) return -1;\n  });\n  const filteredTasks = allTasks.filter(t => activeTypes.includes(t.importType)); // set selected job to first job if\n  // first time user visits the job overview page\n\n  useEffect(() => {\n    if (!selectedJob && allTasks.length > 0) {\n      setSelectedJob(allTasks[0]);\n    }\n  }, []);\n\n  if (!selectedJob) {\n    return <p>{i18n.t('No jobs started yet.')}</p>;\n  }\n\n  return <div className={styles.container} data-test=\"job-overview-container\">\n            <div className={styles.items} data-test=\"job-overview-tasks\">\n                <Menu className={styles.Menu}>\n                    <div className={styles.chips} data-test=\"job-overview-chips\">\n                        {categoryTypes.map(({\n            key,\n            importType,\n            label\n          }) => <Chip onClick={() => onChipClick(importType)} selected={activeTypes.includes(importType)} key={key} dataTest={`job-overview-chips-${key}`}>\n                                {label}\n                            </Chip>)}\n                    </div>\n                    {filteredTasks.map(t => <MenuItem key={`job-overview-tasks-${t.id}`} active={selectedJob.id == t.id} label={<MenuLabel task={t} />} onClick={() => setSelectedJob(t)} icon={categoryTypesObj[t.importType].icon} />)}\n                </Menu>\n            </div>\n            <div className={styles.summary} data-test=\"job-overview-summary\">\n                <JobSummary task={selectedJob} dataTest=\"job-summary-container\" showFileDetails={false} showJobDetails={true} />\n                <Link to={jobToPath(selectedJob)}>\n                    <Button primary>{i18n.t('Recreate job')}</Button>\n                </Link>\n            </div>\n        </div>;\n};\n\nJobOverview.propTypes = {\n  activeTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setActiveTypes: PropTypes.func.isRequired,\n  setSelectedJob: PropTypes.func.isRequired,\n  selectedJob: PropTypes.object\n};\nexport { JobOverview, categoryTypes };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\nimport { jsDateToString } from '../../../utils/helper';\nimport { FormField } from '../../';\n\nconst Events = ({\n  events\n}) => {\n  return <FormField label={`${i18n.t('Events')}`} dataTest=\"job-summary-events\" name=\"events\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Time')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Message')}</TableCellHead>\n                        <TableCellHead>{i18n.t('ID')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {events.map(e => <TableRow key={`job-summary-events-${e.id}`}>\n                            <TableCell>{jsDateToString(e.date)}</TableCell>\n                            <TableCell>{e.text}</TableCell>\n                            <TableCell>{e.id}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nconst eventPropType = PropTypes.shape({\n  date: PropTypes.instanceOf(Date).isRequired,\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n});\nEvents.propTypes = {\n  events: PropTypes.arrayOf(eventPropType).isRequired\n};\nexport { Events };","import PropTypes from 'prop-types';\nconst statsPropTypeObj = {\n  deleted: PropTypes.number.isRequired,\n  ignored: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  updated: PropTypes.number.isRequired,\n  imported: PropTypes.number,\n  created: PropTypes.number\n};\nconst statsPropType = PropTypes.exact(statsPropTypeObj);\n\nconst getClassName = c => {\n  const s = c.split('.');\n  return s[s.length - 1];\n};\n\nconst typeReportParse = report => {\n  let allStats = [];\n  const allMessages = [];\n  Object.keys(report).forEach(i => {\n    const {\n      klass,\n      objectReports,\n      stats\n    } = report[i];\n    allStats = [...allStats, { ...stats,\n      type: getClassName(klass)\n    }];\n    objectReports && objectReports.forEach(r => {\n      const {\n        uid,\n        errorReports\n      } = r;\n      errorReports && errorReports.forEach(e => {\n        allMessages.push({\n          uid,\n          type: getClassName(e.mainKlass),\n          property: e.errorProperty,\n          message: e.message\n        });\n      });\n    });\n  });\n  return {\n    stats: allStats,\n    messages: allMessages\n  };\n};\n\nconst messagesPropType = PropTypes.arrayOf(PropTypes.exact({\n  uid: PropTypes.string,\n  type: PropTypes.string,\n  property: PropTypes.string,\n  message: PropTypes.string\n}));\nexport { typeReportParse, statsPropType, statsPropTypeObj, messagesPropType };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\n\nconst SingleStatusTable = ({\n  status,\n  description\n}) => <Table>\n        <TableHead>\n            <TableRowHead>\n                <TableCellHead>{i18n.t('Status')}</TableCellHead>\n                <TableCellHead>{i18n.t('Description')}</TableCellHead>\n            </TableRowHead>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n                <TableCell>{status}</TableCell>\n                <TableCell>{description}</TableCell>\n            </TableRow>\n        </TableBody>\n    </Table>;\n\nSingleStatusTable.propTypes = {\n  description: PropTypes.string,\n  status: PropTypes.string\n};\nexport { SingleStatusTable };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\nimport { statsPropType } from '../helper';\nimport { SingleStatusTable } from '../SingleStatusTable/SingleStatusTable';\nimport { FormField } from '../../';\n\nconst SingleSummary = ({\n  importCount,\n  status,\n  description,\n  conflicts,\n  id\n}) => <div>\n        <FormField label={`${i18n.t('Summary')} #${id}`} dataTest=\"job-summary-single-summary\" name=\"summary\">\n            <>\n                {status && <SingleStatusTable description={description} status={status} />}\n                <Table>\n                    <TableHead>\n                        <TableRowHead>\n                            <TableCellHead>{i18n.t('Created')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Deleted')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Ignored')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Updated')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Total')}</TableCellHead>\n                        </TableRowHead>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>{importCount.imported}</TableCell>\n                            <TableCell>{importCount.deleted}</TableCell>\n                            <TableCell>{importCount.ignored}</TableCell>\n                            <TableCell>{importCount.updated}</TableCell>\n                            <TableCell>{importCount.total}</TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </>\n        </FormField>\n        {conflicts && <FormField label={`${i18n.t('Conflicts')}`} dataTest=\"job-summary-conflicts\" name=\"conflicts\">\n                <Table>\n                    <TableHead>\n                        <TableRowHead>\n                            <TableCellHead>{i18n.t('Object')}</TableCellHead>\n                            <TableCellHead>{i18n.t('Value')}</TableCellHead>\n                        </TableRowHead>\n                    </TableHead>\n                    <TableBody>\n                        {conflicts.map((c, i) => <TableRow key={`job-summary-conflicts-${c.object}-${i}`}>\n                                <TableCell>{c.object}</TableCell>\n                                <TableCell>{c.value}</TableCell>\n                            </TableRow>)}\n                    </TableBody>\n                </Table>\n            </FormField>}\n    </div>;\n\nSingleSummary.propTypes = {\n  id: PropTypes.string.isRequired,\n  importCount: statsPropType.isRequired,\n  conflicts: PropTypes.arrayOf(PropTypes.exact({\n    object: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })),\n  description: PropTypes.string,\n  status: PropTypes.string\n};\nexport { SingleSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\nimport { statsPropTypeObj } from '../helper';\nimport { FormField } from '../../';\n\nconst TypeCount = ({\n  stats\n}) => {\n  if (stats.length == 0) return null;\n  return <FormField label={`${i18n.t('Type count')}`} dataTest=\"job-summary-type-count\" name=\"typeCount\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Type')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Created')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Deleted')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Ignored')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Updated')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Total')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {stats.map((s, i) => <TableRow key={`job-summary-type-count-${i}`}>\n                            <TableCell>{s.type}</TableCell>\n                            <TableCell>{s.created}</TableCell>\n                            <TableCell>{s.deleted}</TableCell>\n                            <TableCell>{s.ignored}</TableCell>\n                            <TableCell>{s.updated}</TableCell>\n                            <TableCell>{s.total}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nconst typeCountStatsPropTypeObj = { ...statsPropTypeObj,\n  type: PropTypes.string.isRequired\n};\nTypeCount.propTypes = {\n  stats: PropTypes.arrayOf(PropTypes.shape(typeCountStatsPropTypeObj)).isRequired\n};\nexport { TypeCount, typeCountStatsPropTypeObj };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\nimport { FormField } from '../../';\nimport { messagesPropType } from '../helper';\n\nconst Messages = ({\n  messages\n}) => {\n  if (messages.length == 0) return null;\n  return <FormField label={`${i18n.t('Messages')}`} dataTest=\"job-summary-messages\" name=\"messages\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('UID')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Type')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Property')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Message')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {messages.map((m, i) => <TableRow key={`job-summary-messages-${i}`}>\n                            <TableCell>{m.uid}</TableCell>\n                            <TableCell>{m.type}</TableCell>\n                            <TableCell>{m.property}</TableCell>\n                            <TableCell>{m.message}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nMessages.propTypes = {\n  messages: messagesPropType.isRequired\n};\nexport { Messages, messagesPropType };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { statsPropType, messagesPropType } from '../helper';\nimport { SingleSummary } from '../SingleSummary/SingleSummary';\nimport { TypeCount, typeCountStatsPropTypeObj } from '../TypeCount/TypeCount';\nimport { Messages } from '../Messages/Messages';\n\nconst TypeReportSummary = ({\n  overviewStats,\n  stats,\n  messages\n}) => {\n  return <div>\n            <SingleSummary importCount={overviewStats} id={i18n.t('Overview')} />\n            <TypeCount stats={stats} />\n            <Messages messages={messages} />\n        </div>;\n};\n\nTypeReportSummary.propTypes = {\n  messages: messagesPropType.isRequired,\n  overviewStats: statsPropType.isRequired,\n  stats: PropTypes.arrayOf(PropTypes.exact(typeCountStatsPropTypeObj)).isRequired\n};\nexport { TypeReportSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { typeReportParse } from '../helper';\nimport { SingleSummary } from '../SingleSummary/SingleSummary';\nimport { TypeReportSummary } from '../TypeReportSummary/TypeReportSummary';\n\nconst extractStats = summary => {\n  if (summary.responseType == 'ImportSummaries') {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    } = summary;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  } else if (summary.importCount) {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated\n    } = summary.importCount;\n    const total = imported + deleted + ignored + updated;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  } else if (summary.stats) {\n    const {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    } = summary.stats;\n    return {\n      imported,\n      deleted,\n      ignored,\n      updated,\n      total\n    };\n  }\n};\n\nconst Summary = ({\n  summary\n}) => {\n  // gml import type object return\n  if (summary.typeReports) {\n    const overviewStats = { ...summary.stats,\n      imported: summary.stats.created\n    };\n    const {\n      stats,\n      messages\n    } = typeReportParse(summary.typeReports);\n    return <div data-test=\"job-summary-summary\">\n                <TypeReportSummary overviewStats={overviewStats} stats={stats} messages={messages} />\n            </div>;\n  }\n\n  const importCount = extractStats(summary);\n  const overviewSummary = <SingleSummary importCount={importCount} status={summary.status} description={summary.description} conflicts={summary.conflicts} id={i18n.t('Overview')} />;\n  const allSummaries = summary.responseType == 'ImportSummaries' && summary.importSummaries ? summary.importSummaries.map((s, i) => {\n    const importCount = extractStats(s);\n    return <SingleSummary key={`single-summary-${i}`} importCount={importCount} status={s.status} description={s.description} conflicts={s.conflicts} id={`${i + 1}`} />;\n  }) : null;\n  return <div data-test=\"job-summary-summary\">\n            {overviewSummary}\n            {allSummaries}\n        </div>;\n};\n\nSummary.propTypes = {\n  summary: PropTypes.object.isRequired\n};\nexport { Summary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableBody, TableCell, TableHead, TableRow, TableRowHead, TableCellHead } from '@dhis2/ui-core';\nimport { FormField } from '../../';\n\nconst valueToString = value => {\n  if (value instanceof File) {\n    return value.name;\n  } else if (Array.isArray(value)) {\n    return value.map(v => valueToString(v)).join(',');\n  } else if (value instanceof Object) {\n    return value.label;\n  }\n\n  return `${value}`;\n};\n\nconst Details = ({\n  details\n}) => {\n  return <FormField label={`${i18n.t('Job details')}`} dataTest=\"job-summary-job-details\" name=\"details\">\n            <Table>\n                <TableHead>\n                    <TableRowHead>\n                        <TableCellHead>{i18n.t('Key')}</TableCellHead>\n                        <TableCellHead>{i18n.t('Value')}</TableCellHead>\n                    </TableRowHead>\n                </TableHead>\n                <TableBody>\n                    {Object.keys(details).map(key => <TableRow key={`job-summary-job-details-${key}`}>\n                            <TableCell>{key}</TableCell>\n                            <TableCell>{valueToString(details[key])}</TableCell>\n                        </TableRow>)}\n                </TableBody>\n            </Table>\n        </FormField>;\n};\n\nDetails.propTypes = {\n  details: PropTypes.object.isRequired\n};\nexport { Details };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, Tag } from '@dhis2/ui-core';\nimport styles from './JobSummary.module.css';\nimport { jsDateToString } from '../../utils/helper';\nimport { Events } from './Events/Events';\nimport { Summary } from './Summary/Summary';\nimport { Details } from './Details/Details';\n\nconst Header = ({\n  jobDetails,\n  task,\n  showFileDetails\n}) => <div className={styles.header}>\n        <h3 className={styles.title}>{`${i18n.t('Job summary')}`}</h3>\n        {showFileDetails && <span className={styles.taskDetails}>\n                <span data-test=\"job-summary-filename\">\n                    {jobDetails.files[0].name}\n                </span>{' '}\n                -{' '}\n                <span data-test=\"job-summary-date\">\n                    {jsDateToString(task.created)}{' '}\n                </span>\n            </span>}\n    </div>;\n\nHeader.propTypes = {\n  jobDetails: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired,\n  showFileDetails: PropTypes.bool\n};\n\nconst Tags = ({\n  jobDetails,\n  task\n}) => <div className={styles.tags} data-test=\"job-summary-tags\">\n        {task.completed ? <Tag positive>{i18n.t('Completed')}</Tag> : <Tag neutral>{i18n.t('In progress')}</Tag>}\n        {task.error && <Tag negative bold>\n                {i18n.t('Error')}\n            </Tag>}\n        {task.summary && task.summary.conflicts && <Tag negative>{i18n.t('Conflicts')}</Tag>}\n        {jobDetails.dryRun && <Tag neutral bold>\n                {i18n.t('Dry run')}\n            </Tag>}\n    </div>;\n\nTags.propTypes = {\n  jobDetails: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired\n};\n\nconst JobSummary = ({\n  task,\n  showFileDetails = true,\n  showJobDetails = false,\n  dataTest\n}) => {\n  if (!task) return null;\n  const {\n    jobDetails\n  } = task;\n  return <div className={styles.container} data-test={dataTest}>\n            <Header jobDetails={jobDetails} task={task} showFileDetails={showFileDetails} />\n            <Tags jobDetails={jobDetails} task={task} />\n            <Divider />\n            {task.completed && task.summary && <Summary summary={task.summary} />}\n            <div className={styles.events}>\n                <Events events={task.events} />\n            </div>\n            {showJobDetails && <div className={styles.jobDetails}>\n                    <Details details={task.jobDetails} />\n                </div>}\n        </div>;\n};\n\nJobSummary.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  showFileDetails: PropTypes.bool,\n  showJobDetails: PropTypes.bool,\n  task: PropTypes.object\n};\nexport { JobSummary };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { JobSummary } from '../JobSummary';\nimport { MoreOptions } from '../../';\n\nconst MiniJobSummary = ({\n  task,\n  dataTest\n}) => {\n  if (!task) return null;\n  return <div data-test={dataTest}>\n            <MoreOptions label={i18n.t('View summary of recently started import job')} dataTest={`${dataTest}-MoreOptions`}>\n                <JobSummary task={task} dataTest={`${dataTest}-JobSummary`} />\n            </MoreOptions>\n        </div>;\n};\n\nMiniJobSummary.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  task: PropTypes.object\n};\nexport { MiniJobSummary };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { MinusIcon, PlusIcon } from '../';\nimport styles from './MoreOptions.module.css';\n\nconst MoreOptions = ({\n  children,\n  initiallyVisible = false,\n  label = i18n.t('more options'),\n  dataTest = 'interaction-more-options'\n}) => {\n  const [hidden, setHidden] = useState(!initiallyVisible);\n\n  const onToggle = () => {\n    setHidden(!hidden);\n  };\n\n  return <div className={styles.container} data-test={dataTest}>\n            <div className={styles.header} onClick={onToggle} data-test={`${dataTest}-header`}>\n                {hidden ? <PlusIcon /> : <MinusIcon />}\n                {label}\n            </div>\n            <div className={styles.children} data-test={`${dataTest}-children`}>\n                {!hidden && children}\n            </div>\n        </div>;\n};\n\nMoreOptions.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  dataTest: PropTypes.string,\n  initiallyVisible: PropTypes.bool,\n  label: PropTypes.string\n};\nexport { MoreOptions };","import React, { useEffect, useState } from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { fetchAttributes } from '../../utils/helper';\nimport { orgUnitIdSchemeOptions } from '../../utils/options';\nimport { SelectField } from '../';\n\nconst OrgUnitIdScheme = ({\n  name,\n  label,\n  dataTest\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    fetchAttributes(`${baseUrl}/api/`, 'organisationUnitAttribute').then(attributes => setSchemes(attributes)).catch(error => setError(error));\n    setLoading(false);\n  }, []);\n  const validationText = error && `${i18n.t('Something went wrong when loading the additional organisation unit ID schemes')} : ${error.message}`;\n  const options = [...orgUnitIdSchemeOptions, ...schemes];\n  return <SelectField name={name} label={label} options={options} dataTest={dataTest} loading={loading} validationText={validationText} error={!!error} dense />;\n};\n\nOrgUnitIdScheme.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport { OrgUnitIdScheme };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Radio, Checkbox, Node } from '@dhis2/ui-core';\n\nconst Tree = ({\n  list,\n  select,\n  selected,\n  multiSelect,\n  onOpen,\n  onClose,\n  dataTest\n}) => {\n  const view = () => node(list);\n\n  const node = (l, d = 0) => {\n    if (!Array.isArray(list)) {\n      return null;\n    }\n\n    return l.map(({\n      open,\n      label,\n      value,\n      children,\n      hasChildren\n    }) => {\n      const component = multiSelect ? <Checkbox name={value} value={value} label={label} checked={selected.includes(value)} onChange={() => select(value)} dataTest={`${dataTest}-${value}-select`} /> : <Radio name={value} value={value} label={label} checked={selected.includes(value)} onChange={() => select(value)} dataTest={`${dataTest}-${value}-select`} />;\n      return <Node key={`node-${value}`} open={open} label={label} component={component} value={value} onOpen={() => onOpen(value, children)} onClose={() => onClose(value, children)} dataTest={`${dataTest}-${value}`}>\n                    {hasChildren && children.length == 0 ? <span>placeholder</span> : null}\n                    {children ? node(children, d + 1) : null}\n                </Node>;\n    });\n  };\n\n  return list.length == 0 ? null : <div data-test={dataTest}>{view()}</div>;\n};\n\nconst listItemPropType = PropTypes.exact({\n  children: PropTypes.array.isRequired,\n  hasChildren: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n}); //   80:5  error  Callback prop types must be listed after all other prop types  react/sort-prop-types\n\nTree.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  list: PropTypes.arrayOf(listItemPropType).isRequired,\n  selected: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onClose: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/sort-prop-types\n  onOpen: PropTypes.func.isRequired,\n  select: PropTypes.func.isRequired,\n  multiSelect: PropTypes.bool\n};\nexport { Tree };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { CircularLoader, Help } from '@dhis2/ui-core';\nimport { pathToId } from '../../utils/helper';\nimport { FormField } from '../';\nimport { Tree } from './Tree/Tree';\nimport styles from './OrgUnitTree.module.css';\nconst rootQuery = {\n  roots: {\n    resource: 'organisationUnits',\n    params: {\n      filter: 'level:eq:1',\n      fields: 'id,path,displayName,children::isNotEmpty',\n      paging: 'false'\n    }\n  }\n};\nconst orgQuery = {\n  units: {\n    resource: 'organisationUnits',\n    id: ({\n      id\n    }) => `${id}`,\n    params: {\n      fields: 'children[id,displayName,path,children::isNotEmpty]',\n      paging: 'false'\n    }\n  }\n};\n\nconst OrgUnitTree = ({\n  label,\n  selected,\n  setSelected,\n  meta,\n  dataTest,\n  multiSelect = true\n}) => {\n  const [children, setChildren] = useState([]);\n  const [error, setError] = useState(undefined);\n  const {\n    loading,\n    engine\n  } = useDataQuery(rootQuery, {\n    onComplete: data => {\n      const roots = data.roots.organisationUnits;\n      const list = formatList(roots);\n      setChildren(list);\n    },\n    onError: error => {\n      setError(error);\n      console.error('OrgUnitTree error: ', error);\n    }\n  });\n\n  const formatList = list => {\n    return list.map(({\n      id,\n      path,\n      displayName,\n      children\n    }) => ({\n      open: false,\n      id: id,\n      value: path,\n      label: displayName,\n      children: [],\n      hasChildren: children\n    }));\n  };\n\n  const toggleOpenStatus = path => {\n    const hierarchy = path.split('/').filter(p => p.length != 0);\n    const newChildren = [...children];\n    let target = newChildren;\n    hierarchy.forEach(parent => {\n      target = target.find(el => el.id == parent);\n\n      if (target.value == path) {\n        target.open = !target.open;\n      } else {\n        target = target.children;\n      }\n    });\n    setChildren(newChildren);\n  };\n\n  const setChildrenFor = (path, ch) => {\n    const list = formatList(ch);\n    list.sort((a, b) => a.label.localeCompare(b.label));\n    const hierarchy = path.split('/').filter(p => p.length != 0);\n    const newChildren = [...children];\n    let target = newChildren;\n    hierarchy.forEach(parent => {\n      target = target.find(el => el.id == parent);\n\n      if (target.value == path) {\n        target.children = list;\n        target.open = true;\n      } else {\n        target = target.children;\n      }\n    });\n    setChildren(newChildren);\n  };\n\n  const onOpen = (path, ch) => {\n    if (ch.length == 0) {\n      const orgId = pathToId(path);\n      engine.query(orgQuery, {\n        variables: {\n          id: orgId\n        },\n        onComplete: data => {\n          setChildrenFor(path, data.units.children);\n        },\n        onError: error => {\n          setError(error);\n          console.error('OrgUnitTree onOpen error: ', error);\n        }\n      });\n    } else {\n      toggleOpenStatus(path);\n    }\n  };\n\n  const onClose = path => {\n    toggleOpenStatus(path);\n  };\n\n  const onSelect = path => {\n    if (multiSelect) {\n      const newValue = !selected.includes(path);\n\n      if (newValue == false) {\n        setSelected(selected.filter(p => p != path));\n      } else {\n        setSelected([...selected, path]);\n      }\n    } else {\n      setSelected([path]);\n    }\n  };\n\n  const showTree = !loading && !error;\n  return <FormField label={label} dataTest={dataTest}>\n            <div className={styles.container}>\n                {loading && <CircularLoader dataTest={`${dataTest}-loading`} />}\n                {error && <div data-test={`${dataTest}-error`}>\n                        <p>\n                            {i18n.t('Something went wrong when loading the organisation units!')}\n                        </p>\n                        <p>{error.message}</p>\n                    </div>}\n                {showTree && <Tree selected={selected} select={onSelect} multiSelect={multiSelect} onOpen={onOpen} onClose={onClose} list={children} dataTest={`${dataTest}-tree`} />}\n                {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n            </div>\n        </FormField>;\n};\n\nOrgUnitTree.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  selected: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelected: PropTypes.func.isRequired,\n  multiSelect: PropTypes.bool\n};\nexport { OrgUnitTree };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui-forms';\nimport { OrgUnitTree } from './OrgUnitTree';\n\nconst SINGLE_ORG_VALIDATOR = selectedOrgUnits => selectedOrgUnits.length == 0 ? i18n.t('At least one organisation unit must be selected') : undefined;\n\nconst SINGLE_EXACT_ORG_VALIDATOR = selectedOrgUnits => selectedOrgUnits.length != 1 ? i18n.t('One organisation unit must be selected') : undefined;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  ...rest\n}) => <OrgUnitTree meta={meta} selected={value} setSelected={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst OrgUnitTreeField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nOrgUnitTreeField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { OrgUnitTreeField, SINGLE_ORG_VALIDATOR, SINGLE_EXACT_ORG_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CircularLoader, ComponentCover, LinearLoader } from '@dhis2/ui-core';\nimport styles from './Page.module.css';\nimport { JobSummary, MiniJobSummary } from '../../components/';\n\nconst Page = ({\n  title,\n  desc,\n  icon,\n  summaryTask,\n  showFullSummaryTask = false,\n  children,\n  loading = false,\n  dataTest\n}) => {\n  const loadingEl = typeof loading == 'number' ? <LinearLoader amount={loading} /> : <CircularLoader />;\n  return <div className={styles.container} data-test={dataTest}>\n            <div className={styles.header}>\n                <span className={styles.icon}>{icon}</span>\n                <span className={styles.title}>{title}</span>\n                <p className={styles.desc}>{desc}</p>\n            </div>\n            {summaryTask && <Card className={styles.preBody}>\n                    <div className={styles.content}>\n                        {showFullSummaryTask ? <JobSummary task={summaryTask} dataTest=\"job-summary-container\" /> : <MiniJobSummary task={summaryTask} dataTest=\"mini-job-summary-container\" />}\n                    </div>\n                </Card>}\n            <Card>\n                {!!loading && <ComponentCover>{loadingEl}</ComponentCover>}\n                <div className={styles.content}>{children}</div>\n            </Card>\n        </div>;\n};\n\nPage.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  dataTest: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  icon: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  showFullSummaryTask: PropTypes.bool,\n  summaryTask: PropTypes.object\n};\nexport { Page };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { CircularLoader, Help } from '@dhis2/ui-core';\nimport { FormField, SelectableList } from '../';\nconst programQuery = {\n  programs: {\n    resource: 'programs',\n    params: {\n      fields: 'id,displayName',\n      paging: 'false'\n    }\n  }\n};\n\nconst ProgramPicker = ({\n  label,\n  selected,\n  setSelected,\n  meta,\n  dataTest,\n  multiSelect,\n  withFilter,\n  withActions,\n  autoSelectFirst\n}) => {\n  const [list, setList] = useState([]);\n  const {\n    error,\n    loading\n  } = useDataQuery(programQuery, {\n    onComplete: data => {\n      const programs = data.programs.programs;\n      const list = programs.map(({\n        id,\n        displayName\n      }) => ({\n        value: id,\n        label: displayName\n      }));\n      setList(list);\n\n      if (autoSelectFirst) {\n        setSelected([list[0].value]);\n      }\n    },\n    onError: error => {\n      console.error('ProgramPicker error: ', error);\n    }\n  });\n  const showList = !loading && !error;\n  return <FormField label={label} dataTest={dataTest}>\n            {loading && <CircularLoader dataTest={`${dataTest}-loading`} />}\n            {error && <div data-test={`${dataTest}-error`}>\n                    <p>\n                        {i18n.t('Something went wrong when loading the programs!')}\n                    </p>\n                    <p>{error.message}</p>\n                </div>}\n            {showList && <SelectableList name=\"programPicker\" label={i18n.t('Filter programs by name')} selected={selected} setSelected={setSelected} multiSelect={multiSelect} list={list} withFilter={withFilter} withActions={withActions} dataTest={`${dataTest}-list`} />}\n            {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n        </FormField>;\n};\n\nProgramPicker.defaultProps = {\n  multiSelect: false,\n  withFilter: true,\n  withActions: false,\n  autoSelectFirst: true\n};\nProgramPicker.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  selected: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelected: PropTypes.func.isRequired,\n  autoSelectFirst: PropTypes.bool,\n  multiSelect: PropTypes.bool,\n  withActions: PropTypes.bool,\n  withFilter: PropTypes.bool\n};\nexport { ProgramPicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui-forms';\nimport { ProgramPicker } from '../';\n\nconst SINGLE_PROGRAM_VALIDATOR = selectedPrograms => selectedPrograms.length == 0 ? i18n.t('At least one program must be selected') : undefined;\n\nconst SINGLE_EXACT_PROGRAM_VALIDATOR = selectedPrograms => selectedPrograms.length != 1 ? i18n.t('One program must be selected') : undefined;\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  ...rest\n}) => <ProgramPicker meta={meta} selected={value} setSelected={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst ProgramPickerField = ({\n  name,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} {...rest} />;\n};\n\nProgramPickerField.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport { ProgramPickerField, SINGLE_PROGRAM_VALIDATOR, SINGLE_EXACT_PROGRAM_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SelectField } from '../';\nimport { useProgramStages } from '../../hooks/';\n\nconst SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR = programStage => !programStage ? i18n.t('One program stage must be selected') : undefined;\n\nconst ProgramStages = ({\n  name,\n  label,\n  selectedPrograms,\n  form,\n  validator,\n  dataTest\n}) => {\n  const setProgramStage = val => form.change(name, val);\n\n  const program = selectedPrograms.length > 0 ? selectedPrograms[0] : undefined;\n  const {\n    loading: programStagesLoading,\n    error: programStagesError,\n    validationText: programStagesValidationText,\n    programStages\n  } = useProgramStages(program, setProgramStage);\n  return <SelectField name={name} loading={programStagesLoading} label={label} validate={validator} dataTest={dataTest} options={programStages} validationText={programStagesValidationText} error={!!programStagesError} dense />;\n};\n\nProgramStages.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  form: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  selectedPrograms: PropTypes.array.isRequired,\n  validator: PropTypes.func\n};\nexport { ProgramStages, SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Help, Radio } from '@dhis2/ui-core';\nimport { optionPropType, optionsPropType } from '../../utils/options';\nimport { FormField } from '../';\nimport styles from './RadioGroup.module.css';\n\nconst RadioGroup = ({\n  name,\n  label,\n  options,\n  checked,\n  setValue,\n  dataTest\n}) => {\n  const onChange = label => ({\n    value\n  }) => setValue({\n    value: value,\n    label: label\n  });\n\n  return <FormField label={label} dataTest={dataTest} name={name}>\n            <div className={styles.inputs}>\n                {options.map(o => <div key={o.value}>\n                        <Radio className={styles.radio} name={name} value={o.value} label={o.label} checked={o.value == checked.value} onChange={onChange(o.label)} dataTest={`${dataTest}-${o.value}`} />\n                        {o.help && <Help>{o.help}</Help>}\n                    </div>)}\n            </div>\n        </FormField>;\n};\n\nRadioGroup.propTypes = {\n  checked: optionPropType.isRequired,\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  options: optionsPropType.isRequired,\n  setValue: PropTypes.func.isRequired\n};\nexport { RadioGroup };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from '@dhis2/ui-forms';\nimport { RadioGroup } from './RadioGroup';\nimport { optionPropType } from '../../utils/options';\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta: {\n    error\n  },\n  inputName,\n  ...rest\n}) => <RadioGroup name={inputName} error={error} checked={value} setValue={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: optionPropType.isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst RadioGroupField = ({\n  name,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} inputName={name} {...rest} />;\n};\n\nRadioGroupField.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport { RadioGroupField };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { FileUpload as FileUploadGeneric } from '../';\nimport { SINGLE_FILE_VALIDATOR } from '../FileUpload/FileUpload';\nconst NAME = 'files';\nconst LABEL = i18n.t('File');\nconst DATATEST = 'input-file-upload';\nconst VALIDATOR = SINGLE_FILE_VALIDATOR;\n\nconst FileUpload = () => <FileUploadGeneric name={NAME} label={LABEL} validator={VALIDATOR} dataTest={DATATEST} />;\n\nexport { FileUpload };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ImportButtonStrip as ImportButtonStripGeneric } from '../';\nconst DRYRUNDATATEST = 'input-dry-run';\nconst IMPORTDATATEST = 'input-import-submit';\nconst DATATEST = 'input-import-button-strip';\n\nconst ImportButtonStrip = ({\n  form\n}) => <ImportButtonStripGeneric form={form} dryRunDataTest={DRYRUNDATATEST} importDataTest={IMPORTDATATEST} dataTest={DATATEST} />;\n\nImportButtonStrip.propTypes = {\n  form: PropTypes.object.isRequired\n};\nexport { ImportButtonStrip };","import React from 'react';\nimport { FormAlerts as FormAlertsGeneric } from '../';\nconst DATATEST = 'input-form-alerts';\n\nconst FormAlerts = ({\n  alerts\n}) => <FormAlertsGeneric alerts={alerts} dataTest={DATATEST} />;\n\nFormAlerts.propTypes = {\n  alerts: FormAlertsGeneric.propTypes.alerts\n};\nexport { FormAlerts };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../';\nimport { optionsPropType } from '../../utils/options';\nconst NAME = 'format';\nconst DATATEST = 'input-format';\nconst LABEL = i18n.t('Format');\n\nconst Format = ({\n  availableFormats\n}) => <RadioGroupField name={NAME} label={LABEL} options={availableFormats} dataTest={DATATEST} />;\n\nFormat.propTypes = {\n  availableFormats: optionsPropType.isRequired\n};\nexport { Format };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../';\nconst NAME = 'firstRowIsHeader';\nconst DATATEST = 'input-first-row-is-header';\nconst LABEL = i18n.t('First row is header');\n\nconst FirstRowIsHeader = ({\n  show,\n  value\n}) => show && <Switch name={NAME} label={LABEL} value={value} dataTest={DATATEST} />;\n\nFirstRowIsHeader.propTypes = {\n  show: PropTypes.bool.isRequired,\n  value: PropTypes.bool.isRequired\n};\nexport { FirstRowIsHeader };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SelectField } from '../';\nimport { useClassKeys } from '../../hooks/';\nconst NAME = 'classKey';\nconst LABEL = i18n.t('Object');\nconst DATATEST = 'input-class-key';\n\nconst ClassKey = ({\n  form,\n  prevValue,\n  show = true\n}) => {\n  const setClassKey = val => form.change(NAME, val);\n\n  const {\n    loading: classKeysLoading,\n    error: classKeysError,\n    validationText: classKeysValidationText,\n    classKeys\n  } = useClassKeys(setClassKey, prevValue);\n  return show && <SelectField name={NAME} label={LABEL} options={classKeys} loading={classKeysLoading} dataTest={DATATEST} validationText={classKeysValidationText} error={!!classKeysError} filterable dense />;\n};\n\nClassKey.propTypes = {\n  form: PropTypes.object.isRequired,\n  prevValue: PropTypes.object,\n  show: PropTypes.bool\n};\nexport { ClassKey };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { strategyOptions } from '../../utils/options';\nimport { RadioGroupField } from '../';\nconst NAME = 'strategy';\nconst DATATEST = 'input-strategy';\nconst LABEL = i18n.t('Strategy');\n\nconst Strategy = () => <RadioGroupField name={NAME} label={LABEL} options={strategyOptions} dataTest={DATATEST} />;\n\nexport { Strategy };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../';\nconst NAME = 'preheatCache';\nconst DATATEST = 'input-preheat-cache';\nconst LABEL = i18n.t('Preheat cache');\nconst HELPTEXT = i18n.t('Faster for large imports');\n\nconst PreheatCache = ({\n  value\n}) => <Switch name={NAME} label={LABEL} value={value} dataTest={DATATEST} help={HELPTEXT} />;\n\nPreheatCache.propTypes = {\n  value: PropTypes.bool.isRequired\n};\nexport { PreheatCache };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../';\nconst NAME = 'skipAudit';\nconst DATATEST = 'input-has-authority-to-skip-audit';\nconst LABEL = i18n.t('Skip audit');\nconst HELPTEXT = i18n.t('Improves performance at the cost of ability to audit changes');\n\nconst SkipAudit = ({\n  value\n}) => <Switch name={NAME} label={LABEL} value={value} dataTest={DATATEST} help={HELPTEXT} />;\n\nSkipAudit.propTypes = {\n  value: PropTypes.bool.isRequired\n};\nexport { SkipAudit };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../';\nconst NAME = 'skipExistingCheck';\nconst DATATEST = 'input-skip-exisiting-check';\nconst LABEL = i18n.t('Skip exisiting check');\nconst HELPTEXT = i18n.t('Faster, but unsafe');\n\nconst SkipExistingCheck = ({\n  value\n}) => <Switch name={NAME} label={LABEL} value={value} dataTest={DATATEST} help={HELPTEXT} />;\n\nSkipExistingCheck.propTypes = {\n  value: PropTypes.bool.isRequired\n};\nexport { SkipExistingCheck };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { identifierOptions } from '../../utils/options';\nimport { RadioGroupField } from '../';\nconst NAME = 'identifier';\nconst DATATEST = 'input-identifier';\nconst LABEL = i18n.t('Identifier');\n\nconst Identifier = () => <RadioGroupField name={NAME} label={LABEL} options={identifierOptions} dataTest={DATATEST} />;\n\nexport { Identifier };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { importReportModeOptions } from '../../utils/options';\nimport { RadioGroupField } from '../';\nconst NAME = 'importReportMode';\nconst DATATEST = 'input-import-report-mode';\nconst LABEL = i18n.t('Import report mode');\n\nconst ImportReportMode = () => <RadioGroupField name={NAME} label={LABEL} options={importReportModeOptions} dataTest={DATATEST} />;\n\nexport { ImportReportMode };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { preheatModeOptions } from '../../utils/options';\nimport { RadioGroupField } from '../';\nconst NAME = 'preheatMode';\nconst DATATEST = 'input-preheat-mode';\nconst LABEL = i18n.t('Preheat mode');\n\nconst PreheatMode = () => <RadioGroupField name={NAME} label={LABEL} options={preheatModeOptions} dataTest={DATATEST} />;\n\nexport { PreheatMode };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { importStrategyOptions } from '../../utils/options';\nimport { RadioGroupField } from '../';\nconst NAME = 'importStrategy';\nconst DATATEST = 'input-import-strategy';\nconst LABEL = i18n.t('Import strategy');\n\nconst ImportStrategy = () => <RadioGroupField name={NAME} label={LABEL} options={importStrategyOptions} dataTest={DATATEST} />;\n\nexport { ImportStrategy };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { atomicModeOptions } from '../../utils/options';\nimport { RadioGroupField } from '../';\nconst NAME = 'atomicMode';\nconst DATATEST = 'input-atomic-mode';\nconst LABEL = i18n.t('Atomic mode');\n\nconst AtomicMode = () => <RadioGroupField name={NAME} label={LABEL} options={atomicModeOptions} dataTest={DATATEST} />;\n\nexport { AtomicMode };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { mergeModeOptions } from '../../utils/options';\nimport { RadioGroupField } from '../';\nconst NAME = 'mergeMode';\nconst DATATEST = 'input-merge-mode';\nconst LABEL = i18n.t('Merge mode');\n\nconst MergeMode = () => <RadioGroupField name={NAME} label={LABEL} options={mergeModeOptions} dataTest={DATATEST} />;\n\nexport { MergeMode };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { flushModeOptions } from '../../utils/options';\nimport { RadioGroupField } from '../';\nconst NAME = 'flushMode';\nconst DATATEST = 'input-flush-mode';\nconst LABEL = i18n.t('Flush mode');\n\nconst FlushMode = () => <RadioGroupField name={NAME} label={LABEL} options={flushModeOptions} dataTest={DATATEST} />;\n\nexport { FlushMode };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { inclusionStrategyOptions } from '../../utils/options';\nimport { RadioGroupField } from '../';\nconst NAME = 'inclusionStrategy';\nconst DATATEST = 'input-inclusion-strategy';\nconst LABEL = i18n.t('Inclusion strategy');\n\nconst InclusionStrategy = () => <RadioGroupField name={NAME} label={LABEL} options={inclusionStrategyOptions} dataTest={DATATEST} />;\n\nexport { InclusionStrategy };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../';\nconst NAME = 'skipSharing';\nconst DATATEST = 'input-skip-sharing';\nconst LABEL = i18n.t('Skip sharing');\n\nconst SkipSharing = ({\n  value\n}) => <Switch name={NAME} label={LABEL} value={value} dataTest={DATATEST} />;\n\nSkipSharing.propTypes = {\n  value: PropTypes.bool.isRequired\n};\nexport { SkipSharing };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../';\nconst NAME = 'skipValidation';\nconst DATATEST = 'input-skip-validation';\nconst LABEL = i18n.t('Skip validation');\n\nconst SkipValidation = ({\n  value\n}) => <Switch name={NAME} label={LABEL} value={value} dataTest={DATATEST} />;\n\nSkipValidation.propTypes = {\n  value: PropTypes.bool.isRequired\n};\nexport { SkipValidation };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../';\nconst NAME = 'isAsync';\nconst DATATEST = 'input-is-async';\nconst LABEL = i18n.t('Async');\n\nconst IsAsync = ({\n  value\n}) => <Switch name={NAME} label={LABEL} value={value} dataTest={DATATEST} />;\n\nIsAsync.propTypes = {\n  value: PropTypes.bool.isRequired\n};\nexport { IsAsync };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { OrgUnitTreeField } from '../../components/';\nimport { SINGLE_ORG_VALIDATOR, SINGLE_EXACT_ORG_VALIDATOR } from '../../components/OrgUnitTree/OrgUnitTreeField';\nconst NAME = 'selectedOrgUnits';\nconst LABEL = i18n.t('Organisation unit');\nconst DATATEST = 'input-org-unit-tree';\n\nconst OrgUnitTree = ({\n  multiSelect = true\n}) => {\n  const orgValidator = multiSelect ? SINGLE_ORG_VALIDATOR : SINGLE_EXACT_ORG_VALIDATOR;\n  const validator = composeValidators(hasValue, orgValidator);\n  return <OrgUnitTreeField name={NAME} validator={validator} multiSelect={multiSelect} label={LABEL} dataTest={DATATEST} />;\n};\n\nOrgUnitTree.propTypes = {\n  multiSelect: PropTypes.bool\n};\nexport { OrgUnitTree };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { DataSetPickerField } from '../../components/';\nimport { SINGLE_DATASET_VALIDATOR, SINGLE_EXACT_DATASET_VALIDATOR } from '../../components/DataSetPicker/DataSetPickerField';\nconst NAME = 'selectedDataSets';\nconst LABEL = i18n.t('Data sets');\nconst DATATEST = 'input-data-set-picker';\n\nconst DataSetPicker = ({\n  multiSelect = true\n}) => {\n  const dataSetValidator = multiSelect ? SINGLE_DATASET_VALIDATOR : SINGLE_EXACT_DATASET_VALIDATOR;\n  const validator = composeValidators(hasValue, dataSetValidator);\n  return <DataSetPickerField name={NAME} validator={validator} multiSelect={multiSelect} label={LABEL} dataTest={DATATEST} />;\n};\n\nDataSetPicker.propTypes = {\n  multiSelect: PropTypes.bool\n};\nexport { DataSetPicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { ProgramPickerField } from '../../components/';\nimport { SINGLE_PROGRAM_VALIDATOR, SINGLE_EXACT_PROGRAM_VALIDATOR } from '../../components/ProgramPicker/ProgramPickerField';\nconst NAME = 'selectedPrograms';\nconst LABEL = i18n.t('Programs');\nconst DATATEST = 'input-program-picker';\n\nconst ProgramPicker = ({\n  multiSelect,\n  ...rest\n}) => {\n  const programValidator = multiSelect ? SINGLE_PROGRAM_VALIDATOR : SINGLE_EXACT_PROGRAM_VALIDATOR;\n  const validator = composeValidators(hasValue, programValidator);\n  return <ProgramPickerField name={NAME} multiSelect={multiSelect} validator={validator} withActions={false} label={LABEL} dataTest={DATATEST} {...rest} />;\n};\n\nProgramPicker.defaultProps = {\n  multiSelect: false\n};\nProgramPicker.propTypes = {\n  multiSelect: PropTypes.bool\n};\nexport { ProgramPicker };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../';\nconst NAME = 'includeChildren';\nconst DATATEST = 'input-include-children';\nconst LABEL = i18n.t('Include children');\n\nconst IncludeChildren = ({\n  value\n}) => <Switch name={NAME} label={LABEL} value={value} dataTest={DATATEST} />;\n\nIncludeChildren.propTypes = {\n  value: PropTypes.bool.isRequired\n};\nexport { IncludeChildren };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Switch } from '../';\nconst NAME = 'includeDeleted';\nconst DATATEST = 'input-include-deleted';\nconst LABEL = i18n.t('Include deleted');\n\nconst IncludeDeleted = ({\n  value\n}) => <Switch name={NAME} label={LABEL} value={value} dataTest={DATATEST} />;\n\nIncludeDeleted.propTypes = {\n  value: PropTypes.bool.isRequired\n};\nexport { IncludeDeleted };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { RadioGroupField } from '../';\nimport { optionsPropType } from '../../utils/options';\nconst NAME = 'compression';\nconst DATATEST = 'input-compression';\nconst LABEL = i18n.t('Compression');\n\nconst Compression = ({\n  availableCompressions\n}) => <RadioGroupField name={NAME} label={LABEL} options={availableCompressions} dataTest={DATATEST} />;\n\nCompression.propTypes = {\n  availableCompressions: optionsPropType.isRequired\n};\nexport { Compression };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { inclusionOptions } from '../../utils/options';\nimport { RadioGroupField } from '../';\nconst NAME = 'inclusion';\nconst DATATEST = 'input-inclusion';\nconst LABEL = i18n.t('Inclusion');\n\nconst Inclusion = () => <RadioGroupField name={NAME} label={LABEL} options={inclusionOptions} dataTest={DATATEST} />;\n\nexport { Inclusion };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { DatePickerField } from '../';\nimport { DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'startDate';\nconst DATATEST = 'input-start-date';\nconst LABEL = i18n.t('Start date');\nconst VALIDATOR = composeValidators(hasValue, DATE_VALIDATOR);\n\nconst StartDate = () => <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nexport { StartDate };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { DatePickerField } from '../';\nimport { DATE_VALIDATOR } from '../DatePicker/DatePickerField';\nconst NAME = 'endDate';\nconst DATATEST = 'input-end-date';\nconst LABEL = i18n.t('End date');\nconst VALIDATOR = composeValidators(hasValue, DATE_VALIDATOR);\n\nconst EndDate = () => <DatePickerField name={NAME} validator={VALIDATOR} label={LABEL} dataTest={DATATEST} />;\n\nexport { EndDate };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui-core';\nconst DATATEST = 'input-export-submit';\nconst LABEL = i18n.t('Export');\n\nconst ExportButton = () => <Button primary type=\"submit\" dataTest={DATATEST}>\n        {LABEL}\n    </Button>;\n\nexport { ExportButton };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { ProgramStages as ProgramStagesGeneric } from '../../components/';\nimport { SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR } from '../../components/ProgramStages/ProgramStages';\nconst VALIDATOR = composeValidators(hasValue, SINGLE_EXACT_PROGRAMSTAGE_VALIDATOR);\nconst NAME = 'programStage';\nconst LABEL = i18n.t('Program stage');\nconst DATATEST = 'input-program-stage-select';\n\nconst ProgramStages = props => <ProgramStagesGeneric name={NAME} label={LABEL} validator={VALIDATOR} dataTest={DATATEST} {...props} />;\n\nexport { ProgramStages };","/**\n * Group and sort schemas\n * ======================\n */\nconst groupSchemas = schemas => schemas.reduce((groups, schema) => {\n  const {\n    group\n  } = schema;\n  return { ...groups,\n    // add schema to \"group\" collection if existing,\n    // otherwise create new collection with schema as first entry\n    [group]: groups[group] ? [...groups[group], schema] : [schema]\n  };\n}, {});\n\nconst combineSingleItemGroups = groups => {\n  const groupNames = Object.keys(groups);\n  return groupNames.reduce((combinedGroups, groupName) => {\n    const group = groups[groupName];\n\n    if (group.length === 1) {\n      return { ...combinedGroups,\n        other: [...combinedGroups.other, group[0]]\n      };\n    }\n\n    return { ...combinedGroups,\n      [groupName]: group\n    };\n  }, {\n    other: []\n  });\n};\n/**\n * Get group label helpers\n * =======================\n */\n\n/**\n * This function will loop through all schemas and\n * compare the the lower case groupKey with\n * the schemas' name.\n * If a match is found, that match will be returned\n */\n\n\nfunction findLabelByLowerCaseComparison(groupKey, schemas) {\n  const isGroupKeyMatchingLowerCaseSchemaName = schemaName => groupKey === schemaName.toLowerCase();\n\n  return schemas.reduce((foundLabel, {\n    name: schemaName,\n    displayName\n  }) => {\n    // do not try to compare anything if a label already\n    // has been found\n    if (foundLabel) return foundLabel;\n\n    if (isGroupKeyMatchingLowerCaseSchemaName(schemaName)) {\n      return displayName;\n    }\n\n    return foundLabel;\n  }, '');\n}\n\nconst ucFirst = str => str[0].toUpperCase() + str.substr(1);\n/**\n * This function will go through all schemas\n * and will compare the scheme name with the\n * lower case group key at position 0 of the schema key.\n * Once a match is found, the match will be extracted,\n * spaces will be inserted before all capital letters\n * and the result returned\n */\n\n\nfunction findKeyByCamelCaseComparison(groupKey, schemas) {\n  const isGroupKeyInSchemaName = schemaName => schemaName.includes(groupKey) && schemaName.indexOf(groupKey) === 0; // Will return either a label or an empty string\n  // if no match for the groupKey was found\n\n\n  return schemas.reduce((foundLabel, {\n    name: schemaName\n  }) => {\n    // do not try to compare anything if a label already\n    // has been found\n    if (foundLabel) return foundLabel;\n    const lowerCaseSchemaName = schemaName.toLowerCase();\n\n    if (isGroupKeyInSchemaName(lowerCaseSchemaName)) {\n      return ucFirst(schemaName // extract part that matches the groupKey\n      .substr(0, groupKey.length) // insert space before capital letters\n      .replace(/([A-Z]+)/g, ' $1'));\n    }\n\n    return foundLabel;\n  }, '');\n}\n\nfunction extractGroupLabelFromSchemas(groupKey, schemas) {\n  const lowerCaseGroupKey = groupKey.toLowerCase();\n\n  if (lowerCaseGroupKey === 'oauth2' || lowerCaseGroupKey === 'other') {\n    return groupKey;\n  }\n\n  return findLabelByLowerCaseComparison(lowerCaseGroupKey, schemas) || findKeyByCamelCaseComparison(lowerCaseGroupKey, schemas) || groupKey[0].toUpperCase() + groupKey.substr(1);\n}\n\nconst getSchemaGroups = schemas => {\n  const groups = groupSchemas(schemas);\n  const combinedGroups = combineSingleItemGroups(groups);\n  return combinedGroups;\n};\n\nconst getGroupLabels = schemaGroups => {\n  return Object.entries(schemaGroups).reduce((groupLabels, [groupKey, schemas]) => {\n    const label = extractGroupLabelFromSchemas(groupKey, schemas);\n    return { ...groupLabels,\n      [groupKey]: label\n    };\n  }, {});\n};\n\nconst getGroupOrder = schemas => {\n  const groupKeys = Object.keys(schemas);\n  groupKeys.sort();\n  return groupKeys;\n};\n\nconst filterOutExcludedSchemas = (excludedSchemas, schemas) => schemas.filter(schema => schema.metadata && !excludedSchemas.has(schema.collectionName));\n\nconst groupName = klass => {\n  const group = klass.split('.');\n  group.pop();\n\n  if (!klass.includes('.dhis')) {\n    group.pop();\n  }\n\n  return group[group.length - 1].replace(/(.)([A-Z])/g, '$1 $2');\n};\n\nconst formatSchemas = (schemas, checkedByDefault) => schemas.map(schema => ({\n  checked: checkedByDefault,\n  label: schema.displayName,\n  name: schema.collectionName,\n  group: groupName(schema.klass)\n}));\n\nexport { filterOutExcludedSchemas, groupName, formatSchemas, getSchemaGroups, getGroupLabels, getGroupOrder };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from '@dhis2/ui-core';\nimport styles from './Schemas.module.css';\n\nconst SchemaGroup = ({\n  label,\n  schemas,\n  toggleSchema,\n  dataTest\n}) => <div className={styles.group} data-test={dataTest}>\n        <span className={styles.formLabel}>{label}</span>\n        <div className={styles.schema}>\n            {schemas.map((schema, ind) => <div key={schema.name}>\n                    <Checkbox label={schema.label} name={`schemas.${schema.name}`} value={`schemas.${schema.name}`} checked={schema.checked} onChange={() => toggleSchema(ind)} />\n                </div>)}\n        </div>\n    </div>;\n\nSchemaGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  schemas: PropTypes.arrayOf(PropTypes.exact({\n    checked: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    group: PropTypes.string.isRequired\n  })).isRequired,\n  toggleSchema: PropTypes.func.isRequired,\n  dataTest: PropTypes.string\n};\nexport { SchemaGroup };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, CircularLoader, Help } from '@dhis2/ui-core';\nimport { filterOutExcludedSchemas, formatSchemas, getSchemaGroups, getGroupLabels, getGroupOrder } from './helper';\nimport { SchemaGroup } from './SchemaGroup';\nimport styles from './Schemas.module.css';\nconst schemaQuery = {\n  schemas: {\n    resource: 'schemas',\n    params: {\n      paging: 'false'\n    }\n  }\n};\n\nconst Schemas = ({\n  excludeSchemas,\n  setCheckedSchemas,\n  meta,\n  checkedByDefault,\n  dataTest\n}) => {\n  const [schemaGroups, setSchemaGroups] = useState(undefined);\n  const [schemaGroupLabels, setSchemaGroupLabels] = useState(undefined);\n  const [schemaGroupOrder, setSchemaGroupOrder] = useState(undefined);\n  const {\n    error,\n    loading\n  } = useDataQuery(schemaQuery, {\n    onComplete: data => {\n      const schemas = data.schemas.schemas;\n      const filteredSchemas = filterOutExcludedSchemas(excludeSchemas, schemas);\n      const formattedSchemas = formatSchemas(filteredSchemas, checkedByDefault);\n      const groups = getSchemaGroups(formattedSchemas);\n      setSchemaGroups(groups);\n      setSchemaGroupOrder(getGroupOrder(groups));\n      setSchemaGroupLabels(getGroupLabels(groups));\n      propagateCheckedSchemas(groups);\n    },\n    onError: error => {\n      console.error('Schemas error: ', error);\n    }\n  });\n\n  const propagateCheckedSchemas = updatedSchemaGroups => {\n    setCheckedSchemas(Object.keys(updatedSchemaGroups).reduce((acc, groupName) => [...acc, ...updatedSchemaGroups[groupName].filter(s => s.checked).map(s => s.name)], []));\n  };\n\n  const onSelectGeneric = val => () => {\n    const updatedSchemaGroups = Object.keys(schemaGroups).reduce((acc, groupName) => ({ ...acc,\n      [groupName]: schemaGroups[groupName].reduce((grAcc, group) => [...grAcc, { ...group,\n        checked: val\n      }], [])\n    }), {});\n    setSchemaGroups(updatedSchemaGroups);\n    propagateCheckedSchemas(updatedSchemaGroups);\n  };\n\n  const toggleSchema = schemaGroup => ind => {\n    const updatedGroup = [...schemaGroups[schemaGroup]];\n    updatedGroup[ind] = { ...updatedGroup[ind],\n      checked: !updatedGroup[ind].checked\n    };\n    const updatedSchemaGroups = { ...schemaGroups,\n      [schemaGroup]: updatedGroup\n    };\n    setSchemaGroups(updatedSchemaGroups);\n    propagateCheckedSchemas(updatedSchemaGroups);\n  };\n\n  const showSchemas = !loading && !error;\n  return <div className={styles.container} data-test={dataTest}>\n            {loading && <CircularLoader dataTest={`${dataTest}-loading`} />}\n            {error && <div data-test={`${dataTest}-error`}>\n                    <p>\n                        {i18n.t('Something went wrong when loading the schemas!')}\n                    </p>\n                    <p>{error.message}</p>\n                </div>}\n            {showSchemas && <>\n                    <ButtonStrip>\n                        <Button onClick={onSelectGeneric(true)} dataTest={`${dataTest}-select-all`}>\n                            {i18n.t('Select All')}\n                        </Button>\n                        <Button onClick={onSelectGeneric(false)} dataTest={`${dataTest}-select-none`}>\n                            {i18n.t('Select None')}\n                        </Button>\n                    </ButtonStrip>\n\n                    <div className={styles.formControl}>\n                        {schemaGroupOrder.map(groupKey => {\n          const label = schemaGroupLabels[groupKey];\n          return <SchemaGroup key={label} label={label} schemas={schemaGroups[groupKey]} toggleSchema={toggleSchema(groupKey)} />;\n        })}\n                    </div>\n                    {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n                </>}\n        </div>;\n};\n\nSchemas.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  excludeSchemas: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n  setCheckedSchemas: PropTypes.func.isRequired,\n  checkedByDefault: PropTypes.bool\n};\nexport { Schemas };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui-forms';\nimport { Schemas } from './Schemas';\n\nconst SINGLE_SCHEMA_VALIDATOR = checkedSchemas => checkedSchemas.length == 0 ? i18n.t('At least one schema must be selected') : undefined;\n\nconst Wrapper = ({\n  input: {\n    onChange\n  },\n  meta,\n  ...rest\n}) => <Schemas meta={meta} setCheckedSchemas={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst SchemasField = ({\n  name,\n  validator,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} validate={validator} {...rest} />;\n};\n\nSchemasField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validator: PropTypes.func\n};\nexport { SchemasField, SINGLE_SCHEMA_VALIDATOR };","import React from 'react';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport { SchemasField } from '../../components/';\nimport { SINGLE_SCHEMA_VALIDATOR } from '../../components/Schemas/SchemasField';\nconst NAME = 'checkedSchemas';\nconst VALIDATOR = composeValidators(hasValue, SINGLE_SCHEMA_VALIDATOR);\nconst DATATEST = 'input-schemas';\nconst EXCLUDE_SCHEMAS = new Set(['analyticsTableHooks', 'charts', 'constants', 'dataElementDimensions', 'dataEntryForms', 'dataSetNotificationTemplates', 'dataStores', 'documents', 'eventCharts', 'eventReports', 'icons', 'jobConfigurations', 'messageConversations', 'metadataVersions', 'minMaxDataElements', 'oAuth2Clients', 'programDataElements', 'programNotificationTemplates', 'pushAnalysis', 'reportTables', 'reportingRates', 'reports', 'sections', 'smsCommands', 'sqlViews', 'trackedEntityInstanceFilters', 'validationNotificationTemplates']);\n\nconst Schemas = () => <SchemasField name={NAME} excludeSchemas={EXCLUDE_SCHEMAS} validator={VALIDATOR} checkedByDefault dataTest={DATATEST} />;\n\nexport { Schemas };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { SelectField } from '../../components/';\nimport { objectTypeOptions } from '../../utils/options';\nconst NAME = 'objectType';\nconst LABEL = i18n.t('Object type');\nconst DATATEST = 'input-object-type';\n\nconst ObjectType = () => <SelectField name={NAME} label={LABEL} options={objectTypeOptions} filled initialFocus dataTest={DATATEST} />;\n\nexport { ObjectType };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hasValue, composeValidators } from '@dhis2/ui-forms';\nimport i18n from '@dhis2/d2-i18n';\nimport { SelectField } from '../';\nimport { useObjects } from '../../hooks/';\n\nconst SINGLE_EXACT_OBJECT_VALIDATOR = object => !object ? i18n.t('One object must be selected') : undefined;\n\nconst NAME = 'object';\nconst LABEL = i18n.t('Object');\nconst VALIDATOR = composeValidators(hasValue, SINGLE_EXACT_OBJECT_VALIDATOR);\nconst DATATEST = 'input-object-select';\n\nconst Objects = ({\n  objectType,\n  form\n}) => {\n  const setObjectListSelected = val => form.change(NAME, val);\n\n  const {\n    loading: objectsLoading,\n    error: objectsError,\n    validationText: objectsValidationText,\n    objects\n  } = useObjects(objectType, setObjectListSelected);\n  return <SelectField loading={objectsLoading} name={NAME} label={LABEL} options={objects} validate={VALIDATOR} dataTest={DATATEST} validationText={objectsValidationText} error={!!objectsError} filterable dense />;\n};\n\nObjects.propTypes = {\n  form: PropTypes.object.isRequired,\n  objectType: PropTypes.object.isRequired\n};\nexport { Objects };","import { useState, useEffect } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { useDataEngine } from '@dhis2/app-runtime';\n\nconst listQuery = resource => ({\n  data: {\n    resource: resource,\n    fields: 'id,displayName',\n    params: {\n      paging: 'false'\n    }\n  }\n});\n\nconst useObjects = (type, setSelected) => {\n  const engine = useDataEngine();\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [objects, setObjects] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    setSelected(undefined);\n    engine.query(listQuery(type.value), {\n      onComplete: data => {\n        const list = data.data[type.value];\n        const formattedList = list.map(e => ({\n          value: e.id,\n          label: e.displayName\n        }));\n        setObjects(formattedList);\n        setSelected(formattedList[0]);\n        setLoading(false);\n      },\n      onError: error => {\n        setError(error);\n        console.error('useObjects error: ', error);\n      }\n    });\n  }, [type]);\n  const validationText = error && `${i18n.t('Something went wrong when loading the objects')} : ${error.message}`;\n  return {\n    loading,\n    error,\n    validationText,\n    objects\n  };\n};\n\nexport { useObjects };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { DataElementIdScheme as DataElementIdSchemeGeneric } from '../';\nconst NAME = 'dataElementIdScheme';\nconst DATATEST = 'input-data-element-id-scheme';\nconst LABEL = i18n.t('Data element ID scheme');\n\nconst DataElementIdScheme = () => <DataElementIdSchemeGeneric name={NAME} label={LABEL} dataTest={DATATEST} />;\n\nexport { DataElementIdScheme };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { EventIdScheme as EventIdSchemeGeneric } from '../';\nconst NAME = 'eventIdScheme';\nconst DATATEST = 'input-event-id-scheme';\nconst LABEL = i18n.t('Event ID scheme');\n\nconst EventIdScheme = () => <EventIdSchemeGeneric name={NAME} label={LABEL} dataTest={DATATEST} />;\n\nexport { EventIdScheme };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { IdScheme as IdSchemeGeneric } from '../';\nconst NAME = 'idScheme';\nconst DATATEST = 'input-id-scheme';\nconst LABEL = i18n.t('ID scheme');\n\nconst IdScheme = () => <IdSchemeGeneric name={NAME} label={LABEL} dataTest={DATATEST} />;\n\nexport { IdScheme };","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { OrgUnitIdScheme as OrgUnitIdSchemeGeneric } from '../';\nconst NAME = 'orgUnitIdScheme';\nconst DATATEST = 'input-org-unit-id-scheme';\nconst LABEL = i18n.t('Organisation unit ID scheme');\n\nconst OrgUnitIdScheme = () => <OrgUnitIdSchemeGeneric name={NAME} label={LABEL} dataTest={DATATEST} />;\n\nexport { OrgUnitIdScheme };","export const FORM_ERROR = 'FINAL_FORM/form-error';\nexport const ARRAY_ERROR = 'FINAL_FORM/array-error';","import i18n from '@dhis2/d2-i18n';\nimport { FORM_ERROR } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    format,\n    identifier,\n    importReportMode,\n    preheatMode,\n    importStrategy,\n    atomicMode,\n    mergeMode,\n    flushMode,\n    skipSharing,\n    skipValidation,\n    inclusionStrategy,\n    isAsync,\n    firstRowIsHeader,\n    classKey\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'metadata.json';\n  const params = [`importMode=${dryRun ? 'VALIDATE' : 'COMMIT'}`, `identifier=${identifier.value}`, `importReportMode=${importReportMode.value}`, `preheatMode=${preheatMode.value}`, `importStrategy=${importStrategy.value}`, `atomicMode=${atomicMode.value}`, `mergeMode=${mergeMode.value}`, `flushMode=${flushMode.value}`, `skipSharing=${skipSharing}`, `skipValidation=${skipValidation}`, `inclusionStrategy=${inclusionStrategy.value}`, `async=${isAsync}`, `format=${format.value}`, format.value == 'csv' ? `firstRowIsHeader=${firstRowIsHeader}&classKey=${classKey.value}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format.value,\n      type: 'METADATA_IMPORT',\n      setProgress,\n      addEntry: (id, entry) => addTask('metadata', id, { ...entry,\n        jobDetails: values\n      })\n    });\n  } catch (e) {\n    const formErrors = validate(values);\n    const allErrors = {\n      [FORM_ERROR]: [e],\n      ...formErrors\n    };\n    return allErrors;\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nconst validate = values => {\n  const classKeyValidator = (format, classKey) => format.value == 'csv' && !classKey ? i18n.t('A class key must be selected') : undefined;\n\n  return {\n    classKey: classKeyValidator(values.format, values.classKey)\n  };\n};\n\nexport { onImport, validate };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { Form } from '@dhis2/ui-forms';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { formatOptions, defaultFormatOption, defaultIdentifierOption, defaultImportReportModeOption, defaultPreheatModeOption, defaultImportStrategyOption, defaultAtomicModeOption, defaultMergeModeOption, defaultFlushModeOption, defaultInclusionStrategyOption } from '../../utils/options';\nimport { FileUpload, Format, FirstRowIsHeader, ClassKey, Identifier, ImportReportMode, PreheatMode, ImportStrategy, AtomicMode, MergeMode, FlushMode, SkipSharing, SkipValidation, IsAsync, InclusionStrategy, ImportButtonStrip, FormAlerts } from '../../components/Inputs';\nimport { Page, MetadataImportIcon, MoreOptions } from '../../components/';\nimport { TaskContext, getNewestTask } from '../../contexts/';\nimport { onImport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Metadata import');\nconst PAGE_DESCRIPTION = i18n.t('Import metadata like data elements and organisation units using the DXF 2 format.');\nconst PAGE_ICON = <MetadataImportIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  identifier: prevJobDetails.identifier || defaultIdentifierOption,\n  importReportMode: prevJobDetails.importReportMode || defaultImportReportModeOption,\n  preheatMode: prevJobDetails.preheatMode || defaultPreheatModeOption,\n  importStrategy: prevJobDetails.importStrategy || defaultImportStrategyOption,\n  firstRowIsHeader: !!prevJobDetails.firstRowIsHeader,\n  atomicMode: prevJobDetails.atomicMode || defaultAtomicModeOption,\n  mergeMode: prevJobDetails.mergeMode || defaultMergeModeOption,\n  flushMode: prevJobDetails.flushMode || defaultFlushModeOption,\n  inclusionStrategy: prevJobDetails.inclusionStrategy || defaultInclusionStrategyOption,\n  skipSharing: !!prevJobDetails.skipSharing,\n  skipValidation: !!prevJobDetails.skipValidation,\n  isAsync: !prevJobDetails.isAsync\n});\n\nconst MetadataImport = () => {\n  const {\n    tasks: {\n      metadata: metadataTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, metadataTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-metadata\" summaryTask={getNewestTask(metadataTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <FileUpload />\n                        <Format availableFormats={formatOptions} />\n                        <FirstRowIsHeader show={values.format.value == 'csv'} value={values.firstRowIsHeader} />\n                        <ClassKey show={values.format.value == 'csv'} form={form} prevValue={prevJobDetails.classKey} />\n                        <Identifier />\n                        <ImportReportMode />\n                        <PreheatMode />\n                        <ImportStrategy />\n                        <AtomicMode />\n                        <MergeMode />\n                        <MoreOptions>\n                            <FlushMode />\n                            <SkipSharing value={values.skipSharing} />\n                            <SkipValidation value={values.skipValidation} />\n                            <IsAsync value={values.isAsync} />\n                            <InclusionStrategy />\n                        </MoreOptions>\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataImport };","import React from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Form } from '@dhis2/ui-forms';\nimport { formatOptions, compressionOptions, defaultFormatOption, defaultCompressionOption } from '../../utils/options';\nimport { Format, Schemas, Compression, SkipSharing, ExportButton } from '../../components/Inputs';\nimport { Page, MetadataExportIcon } from '../../components/';\nimport { onExport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Metadata export');\nconst PAGE_DESCRIPTION = i18n.t('Export meta data like data elements and organisation units in the XML, JSON or CSV format.');\nconst PAGE_ICON = <MetadataExportIcon />;\nconst initialValues = {\n  checkedSchemas: [],\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  skipSharing: false\n};\n\nconst MetadataExport = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-metadata\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} render={({\n      handleSubmit,\n      form,\n      values\n    }) => <form onSubmit={handleSubmit}>\n                        <Schemas />\n                        <Format availableFormats={formatOptions} />\n                        <Compression availableCompressions={compressionOptions} />\n                        <SkipSharing value={values.skipSharing} />\n                        <ExportButton />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataExport };","import { locationAssign } from '../../utils/helper';\n\nconst onExport = baseUrl => values => {\n  const {\n    checkedSchemas,\n    format,\n    compression,\n    skipSharing\n  } = values; // generate download url\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `metadata`;\n  const endpointExtension = compression.value ? `${format.value}.${compression.value}` : format.value;\n  const schemaParams = checkedSchemas.map(name => `${name}=true`).join('&');\n  const downloadUrlParams = `skipSharing=${skipSharing}&download=true&${schemaParams}`;\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url);\n};\n\nexport { onExport };","import React from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Form } from '@dhis2/ui-forms';\nimport { formatNoCsvOptions, compressionOptions, defaultFormatOption, defaultCompressionOption, defaultObjectTypeOption } from '../../utils/options';\nimport { Format, Compression, ObjectType, Objects, SkipSharing, ExportButton } from '../../components/Inputs';\nimport { Page, MetadataDependencyExportIcon } from '../../components/';\nimport { onExport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Metadata dependency export');\nconst PAGE_DESCRIPTION = i18n.t('Export metadata like data sets and programs including related metadata objects in the XML or JSON format.');\nconst PAGE_ICON = <MetadataDependencyExportIcon />;\nconst initialValues = {\n  objectType: defaultObjectTypeOption,\n  object: undefined,\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  skipSharing: false\n};\n\nconst MetadataDependencyExport = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-metadata-dependency\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} render={({\n      handleSubmit,\n      form,\n      values\n    }) => <form onSubmit={handleSubmit}>\n                        <ObjectType />\n                        <Objects objectType={values.objectType} form={form} />\n                        <Format availableFormats={formatNoCsvOptions} />\n                        <Compression availableCompressions={compressionOptions} />\n                        <SkipSharing value={values.skipSharing} />\n                        <ExportButton />\n                    </form>} />\n        </Page>;\n};\n\nexport { MetadataDependencyExport };","import { locationAssign } from '../../utils/helper';\n\nconst onExport = baseUrl => values => {\n  const {\n    objectType,\n    object,\n    format,\n    compression,\n    skipSharing\n  } = values;\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `${objectType.value}/${object.value}/metadata`;\n  const endpointExtension = compression.value ? `${format.value}.${compression.value}` : format.value;\n  const downloadUrlParams = `skipSharing=${skipSharing}&download=true`;\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url);\n};\n\nexport { onExport };","import React, { useContext } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './JobOverview.module.css';\nimport { TaskContext } from '../../contexts/';\nimport { JobOverview as JobOverviewComponent, Page, TasksIcon } from '../../components/';\n\nconst JobOverview = () => {\n  const {\n    jobOverview,\n    updateJobOverview\n  } = useContext(TaskContext);\n\n  const setActiveTypes = types => {\n    updateJobOverview({\n      activeTypes: types\n    });\n  };\n\n  const setSelectedJob = job => {\n    updateJobOverview({\n      selectedJob: job\n    });\n  };\n\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"job-overview-page\">\n            <div className={styles.container}>\n                <JobOverviewComponent activeTypes={jobOverview.activeTypes} setActiveTypes={setActiveTypes} selectedJob={jobOverview.selectedJob} setSelectedJob={setSelectedJob} />\n            </div>\n        </Page>;\n}; // PAGE INFO\n\n\nconst PAGE_NAME = i18n.t('Job overview');\nconst PAGE_DESCRIPTION = i18n.t('An overview of all import jobs started this session.');\nconst PAGE_ICON = <TasksIcon />;\nexport { JobOverview };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { Form } from '@dhis2/ui-forms';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { FileUpload, ImportButtonStrip, FormAlerts } from '../../components/Inputs/';\nimport { Page, GMLIcon } from '../../components/';\nimport { TaskContext, getNewestTask } from '../../contexts/';\nimport { onImport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('GML import');\nconst PAGE_DESCRIPTION = i18n.t('Import geographic data for organisation units using the GML format. GML is an XML grammar for expressing geographical features.');\nconst PAGE_ICON = <GMLIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files\n});\n\nconst GMLImport = () => {\n  const {\n    tasks: {\n      gml: gmlTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, gmlTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-gml\" summaryTask={getNewestTask(gmlTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <FileUpload />\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { GMLImport };","import { FORM_ERROR } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'metadata/gml.json';\n  const params = [`dryRun=${dryRun}`, 'format=json'].join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: 'gml',\n      type: 'GML_IMPORT',\n      setProgress,\n      addEntry: (id, entry) => addTask('gml', id, { ...entry,\n        jobDetails: values\n      })\n    });\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { Form } from '@dhis2/ui-forms';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { formatOptions, defaultFormatOption, defaultDataElementIdSchemeOption, defaultOrgUnitIdSchemeOption, defaultEventIdSchemeOption } from '../../utils/options';\nimport { FileUpload, Format, DataElementIdScheme, EventIdScheme, OrgUnitIdScheme, ImportButtonStrip, FormAlerts } from '../../components/Inputs';\nimport { Page, MoreOptions, EventIcon } from '../../components/';\nimport { TaskContext, getNewestTask } from '../../contexts/';\nimport { onImport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Event import');\nconst PAGE_DESCRIPTION = i18n.t('Import events for programs, stages and tracked entities using the DXF 2 format.');\nconst PAGE_ICON = <EventIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  dataElementIdScheme: prevJobDetails.dataElementIdScheme || defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: prevJobDetails.orgUnitIdScheme || defaultOrgUnitIdSchemeOption,\n  eventIdScheme: prevJobDetails.eventIdScheme || defaultEventIdSchemeOption\n});\n\nconst EventImport = () => {\n  const {\n    tasks: {\n      event: eventTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, eventTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-event\" summaryTask={getNewestTask(eventTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <FileUpload />\n                        <Format availableFormats={formatOptions} />\n                        <MoreOptions>\n                            <DataElementIdScheme />\n                            <EventIdScheme />\n                            <OrgUnitIdScheme />\n                        </MoreOptions>\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { EventImport };","import { FORM_ERROR } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    format,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    eventIdScheme\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'events.json';\n  const params = ['skipFirst=true', 'async=true', `dryRun=${dryRun}`, `dataElementIdScheme=${dataElementIdScheme.value}`, `orgUnitIdScheme=${orgUnitIdScheme.value}`, `eventIdScheme=${eventIdScheme.value}`, `payloadFormat=${format.value}`].join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format.value,\n      type: 'EVENT_IMPORT',\n      setProgress,\n      addEntry: (id, entry) => addTask('event', id, { ...entry,\n        jobDetails: values\n      })\n    });\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import { jsDateToISO8601, locationAssign, pathToId } from '../../utils/helper';\nimport { ALL_VALUE } from '../../hooks/useProgramStages';\nimport { DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR } from '../../components/DatePicker/DatePickerField';\n\nconst onExport = baseUrl => values => {\n  const {\n    selectedOrgUnits,\n    selectedPrograms,\n    programStage,\n    format,\n    compression,\n    startDate,\n    endDate,\n    includeDeleted,\n    idScheme,\n    inclusion\n  } = values; // generate URL and redirect\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = `events`;\n  const endpointExtension = compression.value ? `${format.value}.${compression.value}` : format.value;\n  const filename = `${endpoint}.${endpointExtension}`;\n  const downloadUrlParams = ['links=false', 'skipPaging=true', `orgUnit=${pathToId(selectedOrgUnits[0])}`, `program=${selectedPrograms[0]}`, `includeDeleted=${includeDeleted}`, `idScheme=${idScheme.value}`, `attachment=${filename}`, `startDate=${jsDateToISO8601(startDate)}`, `endDate=${jsDateToISO8601(endDate)}`, `ouMode=${inclusion.value}`, `format=${format.value}`, programStage.value != ALL_VALUE ? `programStage=${programStage.value}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}.${endpointExtension}?${downloadUrlParams}`;\n  locationAssign(url);\n};\n\nconst validate = values => ({\n  startDate: DATE_BEFORE_VALIDATOR(values.startDate, values.endDate),\n  endDate: DATE_AFTER_VALIDATOR(values.endDate, values.startDate)\n});\n\nexport { onExport, validate };","import React from 'react';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Form } from '@dhis2/ui-forms';\nimport { formatOptions, compressionOptions, defaultFormatOption, defaultCompressionOption, defaultIdSchemeOption, defaultInclusionOption } from '../../utils/options';\nimport { OrgUnitTree, ProgramPicker, Format, Compression, StartDate, EndDate, IncludeDeleted, Inclusion, ExportButton, ProgramStages, IdScheme } from '../../components/Inputs';\nimport { Page, MoreOptions, EventIcon } from '../../components/';\nimport { onExport, validate } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Event export');\nconst PAGE_DESCRIPTION = i18n.t('Export event data for programs, stages and tracked entities in the DXF 2 format.');\nconst PAGE_ICON = <EventIcon />;\nconst today = new Date();\nconst initialValues = {\n  selectedOrgUnits: [],\n  selectedPrograms: [],\n  programStage: undefined,\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  startDate: new Date(today.getFullYear(), today.getMonth() - 3, today.getDate()),\n  endDate: today,\n  includeDeleted: false,\n  idScheme: defaultIdSchemeOption,\n  inclusion: defaultInclusionOption\n};\n\nconst EventExport = () => {\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onExport(baseUrl);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-data\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} validate={validate} subscription={{\n      values: true\n    }} render={({\n      handleSubmit,\n      form,\n      values\n    }) => <form onSubmit={handleSubmit}>\n                        <OrgUnitTree multiSelect={false} />\n                        <ProgramPicker autoSelectFirst />\n                        <ProgramStages selectedPrograms={values.selectedPrograms} form={form} />\n                        <StartDate />\n                        <EndDate />\n                        <Format availableFormats={formatOptions} />\n                        <Compression availableCompressions={compressionOptions} />\n                        <MoreOptions>\n                            <IncludeDeleted value={values.includeDeleted} />\n                            <IdScheme />\n                            <Inclusion />\n                        </MoreOptions>\n                        <ExportButton />\n                    </form>} />\n        </Page>;\n};\n\nexport { EventExport };","const hasAuthorityToSkipAudit = authorities => authorities.includes('ALL') || authorities.includes('F_SKIP_DATA_IMPORT_AUDIT');\n\nexport { hasAuthorityToSkipAudit };","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { Form } from '@dhis2/ui-forms';\nimport i18n from '@dhis2/d2-i18n';\nimport { getPrevJobDetails } from '../../utils/helper';\nimport { formatAdxPdfOptions, defaultFormatOption, defaultStrategyOption, defaultDataElementIdSchemeOption, defaultOrgUnitIdSchemeOption, defaultIdSchemeOption } from '../../utils/options';\nimport { FileUpload, Format, FirstRowIsHeader, Strategy, PreheatCache, SkipAudit, SkipExistingCheck, DataElementIdScheme, IdScheme, OrgUnitIdScheme, ImportButtonStrip, FormAlerts } from '../../components/Inputs';\nimport { hasAuthorityToSkipAudit } from '../../components/WithAuthority/predicates';\nimport { Page, WithAuthority, MoreOptions, DataIcon } from '../../components/';\nimport { TaskContext, getNewestTask } from '../../contexts/';\nimport { onImport } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Data import');\nconst PAGE_DESCRIPTION = i18n.t('Import data values from ADX XML, DXF 2 XML, JSON, CSV or PDF files.');\nconst PAGE_ICON = <DataIcon />;\n\nconst createInitialValues = prevJobDetails => ({\n  files: prevJobDetails.files,\n  format: prevJobDetails.format || defaultFormatOption,\n  strategy: prevJobDetails.strategy || defaultStrategyOption,\n  firstRowIsHeader: !!prevJobDetails.firstRowIsHeader,\n  preheatCache: !!prevJobDetails.preheatCache,\n  skipAudit: !!prevJobDetails.skipAudit,\n  dataElementIdScheme: prevJobDetails.dataElementIdScheme || defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: prevJobDetails.orgUnitIdScheme || defaultOrgUnitIdSchemeOption,\n  idScheme: prevJobDetails.idScheme || defaultIdSchemeOption,\n  skipExistingCheck: !!prevJobDetails.skipExistingCheck\n});\n\nconst DataImport = () => {\n  const {\n    tasks: {\n      data: dataTasks\n    },\n    addTask\n  } = useContext(TaskContext); // recreating a previously run job\n\n  const query = useLocation().query;\n  const prevJobDetails = getPrevJobDetails(query, dataTasks);\n  const initialValues = createInitialValues(prevJobDetails);\n  const [progress, setProgress] = useState(0);\n  const [showFullSummaryTask, setShowFullSummaryTask] = useState(false);\n  const {\n    baseUrl\n  } = useConfig();\n  const onSubmit = onImport({\n    baseUrl,\n    setProgress,\n    addTask,\n    setShowFullSummaryTask\n  });\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} loading={progress} dataTest=\"page-import-data\" summaryTask={getNewestTask(dataTasks)} showFullSummaryTask={showFullSummaryTask}>\n            <Form onSubmit={onSubmit} initialValues={initialValues} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <FileUpload />\n                        <Format availableFormats={formatAdxPdfOptions} />\n                        <FirstRowIsHeader show={values.format.value == 'csv'} value={values.firstRowIsHeader} />\n                        <Strategy />\n                        <PreheatCache value={values.preheatCache} />\n                        <WithAuthority pred={hasAuthorityToSkipAudit}>\n                            <SkipAudit value={values.skipAudit} />\n                        </WithAuthority>\n                        <MoreOptions>\n                            <DataElementIdScheme />\n                            <OrgUnitIdScheme />\n                            <IdScheme />\n                            <SkipExistingCheck value={values.skipExistingCheck} />\n                        </MoreOptions>\n                        <ImportButtonStrip form={form} />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { DataImport };","import { FORM_ERROR } from '../../utils/final-form';\nimport { uploadFile } from '../../utils/helper';\n\nconst onImport = ({\n  baseUrl,\n  setProgress,\n  addTask,\n  setShowFullSummaryTask\n}) => async values => {\n  const {\n    dryRun,\n    files,\n    strategy,\n    preheatCache,\n    skipAudit,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    idScheme,\n    skipExistingCheck,\n    format,\n    firstRowIsHeader\n  } = values; // send xhr\n\n  const apiBaseUrl = `${baseUrl}/api/`;\n  const endpoint = 'dataValueSets.json';\n  const params = ['async=true', `dryRun=${dryRun}`, `strategy=${strategy.value}`, `preheatCache=${preheatCache}`, `skipAudit=${skipAudit}`, `dataElementIdScheme=${dataElementIdScheme.value}`, `orgUnitIdScheme=${orgUnitIdScheme.value}`, `idScheme=${idScheme.value}`, `skipExistingCheck=${skipExistingCheck}`, `format=${format.value}`, format == 'csv' ? `firstRowIsHeader=${firstRowIsHeader}` : ''].filter(s => s != '').join('&');\n  const url = `${apiBaseUrl}${endpoint}?${params}`;\n\n  try {\n    await uploadFile({\n      url,\n      file: files[0],\n      format: format.value,\n      type: 'DATAVALUE_IMPORT',\n      setProgress,\n      addEntry: (id, entry) => addTask('data', id, { ...entry,\n        jobDetails: values\n      })\n    });\n  } catch (e) {\n    const errors = [e];\n    return {\n      [FORM_ERROR]: errors\n    };\n  } finally {\n    setShowFullSummaryTask(true);\n  }\n};\n\nexport { onImport };","import i18n from '@dhis2/d2-i18n';\nimport JSZip from 'jszip';\nimport { FORM_ERROR } from '../../utils/final-form';\nimport { createBlob, downloadBlob, jsDateToISO8601, pathToId } from '../../utils/helper';\nimport { DATE_BEFORE_VALIDATOR, DATE_AFTER_VALIDATOR } from '../../components/DatePicker/DatePickerField';\nconst dataValueSetQuery = {\n  sets: {\n    resource: 'dataValueSets',\n    params: ({\n      dataElementIdScheme,\n      orgUnitIdScheme,\n      idScheme,\n      includeDeleted,\n      children,\n      startDate,\n      endDate,\n      orgUnit,\n      dataSet,\n      format\n    }) => ({\n      dataElementIdScheme,\n      orgUnitIdScheme,\n      idScheme,\n      includeDeleted,\n      children,\n      startDate,\n      endDate,\n      orgUnit,\n      dataSet,\n      format\n    })\n  }\n};\n\nconst onExport = engine => async values => {\n  const {\n    selectedOrgUnits,\n    includeChildren,\n    selectedDataSets,\n    format,\n    compression,\n    startDate,\n    endDate,\n    includeDeleted,\n    dataElementIdScheme,\n    orgUnitIdScheme,\n    idScheme\n  } = values; // fetch data\n\n  try {\n    const {\n      sets\n    } = await engine.query(dataValueSetQuery, {\n      variables: {\n        dataElementIdScheme: dataElementIdScheme.value,\n        orgUnitIdScheme: orgUnitIdScheme.value,\n        idScheme: idScheme.value,\n        includeDeleted: includeDeleted.toString(),\n        children: includeChildren.toString(),\n        startDate: jsDateToISO8601(startDate),\n        endDate: jsDateToISO8601(endDate),\n        orgUnit: selectedOrgUnits.map(o => pathToId(o)),\n        dataSet: selectedDataSets,\n        format: format.value\n      }\n    });\n    const dataStr = format.value === 'json' ? JSON.stringify(sets) : sets;\n    const filename = `data.${format.value}`;\n\n    if (compression.value !== '') {\n      const zip = new JSZip();\n      zip.file(filename, dataStr);\n      zip.generateAsync({\n        type: 'blob'\n      }).then(content => {\n        const url = URL.createObjectURL(content);\n        downloadBlob(url, `${filename}.${compression.value}`);\n      });\n    } else {\n      const url = createBlob(dataStr, format.value);\n      downloadBlob(url, filename);\n    }\n  } catch (error) {\n    const errors = [{\n      id: `http-${new Date().getTime()}`,\n      critical: true,\n      message: `${i18n.t('HTTP error when fetching data')}. ${error.message}`\n    }];\n    console.error('DataExport onExport error: ', error);\n    return {\n      [FORM_ERROR]: errors\n    };\n  }\n};\n\nconst validate = values => ({\n  startDate: DATE_BEFORE_VALIDATOR(values.startDate, values.endDate),\n  endDate: DATE_AFTER_VALIDATOR(values.endDate, values.startDate)\n});\n\nexport { onExport, validate };","import React from 'react';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Form } from '@dhis2/ui-forms';\nimport { formatAdxOptions, compressionOptions, defaultFormatOption, defaultCompressionOption, defaultDataElementIdSchemeOption, defaultOrgUnitIdSchemeOption, defaultIdSchemeOption } from '../../utils/options';\nimport { OrgUnitTree, IncludeChildren, DataSetPicker, Format, Compression, StartDate, EndDate, IncludeDeleted, DataElementIdScheme, IdScheme, OrgUnitIdScheme, ExportButton, FormAlerts } from '../../components/Inputs';\nimport { Page, MoreOptions, DataIcon } from '../../components/';\nimport { onExport, validate } from './form-helper'; // PAGE INFO\n\nconst PAGE_NAME = i18n.t('Data export');\nconst PAGE_DESCRIPTION = i18n.t('Export data values as ADX XML, DFX 2 XML, JSON or CSV files.');\nconst PAGE_ICON = <DataIcon />;\nconst today = new Date();\nconst initialValues = {\n  selectedOrgUnits: [],\n  includeChildren: true,\n  selectedDataSets: [],\n  format: defaultFormatOption,\n  compression: defaultCompressionOption,\n  startDate: new Date(today.getFullYear(), today.getMonth() - 3, today.getDate()),\n  endDate: today,\n  includeDeleted: false,\n  dataElementIdScheme: defaultDataElementIdSchemeOption,\n  orgUnitIdScheme: defaultOrgUnitIdSchemeOption,\n  idScheme: defaultIdSchemeOption\n};\n\nconst DataExport = () => {\n  const engine = useDataEngine();\n  const onSubmit = onExport(engine);\n  return <Page title={PAGE_NAME} desc={PAGE_DESCRIPTION} icon={PAGE_ICON} dataTest=\"page-export-data\">\n            <Form onSubmit={onSubmit} initialValues={initialValues} validate={validate} subscription={{\n      values: true,\n      submitError: true\n    }} render={({\n      handleSubmit,\n      form,\n      values,\n      submitError\n    }) => <form onSubmit={handleSubmit}>\n                        <OrgUnitTree />\n                        <IncludeChildren value={values.includeChildren} />\n                        <DataSetPicker />\n                        <Format availableFormats={formatAdxOptions} />\n                        <Compression availableCompressions={compressionOptions} />\n                        <StartDate />\n                        <EndDate />\n                        <MoreOptions>\n                            <IncludeDeleted value={values.includeDeleted} />\n                            <DataElementIdScheme />\n                            <OrgUnitIdScheme />\n                            <IdScheme />\n                        </MoreOptions>\n                        <ExportButton />\n                        <FormAlerts alerts={submitError} />\n                    </form>} />\n        </Page>;\n};\n\nexport { DataExport };","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { DataImport, DataExport, EventExport, EventImport, GMLImport, MetadataDependencyExport, MetadataExport, MetadataImport, JobOverview } from '../../pages';\n\nconst Router = () => {\n  return <Switch>\n            <Route path=\"/import/data\" component={DataImport} />\n            <Route path=\"/import/event\" component={EventImport} />\n            <Route path=\"/import/gml\" component={GMLImport} />\n            <Route path=\"/import/metadata\" component={MetadataImport} />\n            <Route path=\"/export/data\" component={DataExport} />\n            <Route path=\"/export/event\" component={EventExport} />\n            <Route path=\"/export/metadata-dependency\" component={MetadataDependencyExport} />\n            <Route path=\"/export/metadata\" component={MetadataExport} />\n            <Route path=\"/utils/job-overview\" component={JobOverview} />\n            <Redirect from=\"*\" to=\"/import/data\" />\n        </Switch>;\n};\n\nexport { Router };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SingleSelectField, SingleSelectOption, Help } from '@dhis2/ui-core';\nimport { optionPropType, optionsPropType } from '../../utils/options';\nimport styles from './Select.module.css';\nimport { FormField } from '../';\n\nconst Select = ({\n  name,\n  dataTest,\n  label,\n  options,\n  setValue,\n  selected,\n  noMatchText,\n  loading,\n  error,\n  meta,\n  warning,\n  validationText,\n  helpText,\n  filled,\n  dense,\n  filterable,\n  initialFocus\n}) => {\n  const optionEls = options.map(o => <SingleSelectOption key={o.value} value={o.value} label={o.label} />);\n\n  const onChange = ({\n    selected\n  }) => setValue(selected);\n\n  return <FormField label={label} dataTest={dataTest}>\n            <div className={styles.select} data-test={`${dataTest}-container`}>\n                <SingleSelectField dense={dense} filled={filled} initialFocus={initialFocus} loading={loading} warning={warning} error={error} name={name} onChange={onChange} selected={selected} filterable={filterable} noMatchText={noMatchText ? noMatchText : `No match found for filter`} helpText={helpText} validationText={validationText} dataTest={`${dataTest}-ssf`}>\n                    {optionEls}\n                </SingleSelectField>\n                {(meta.touched || !meta.pristine) && meta.error && <Help error>{meta.error}</Help>}\n            </div>\n        </FormField>;\n};\n\nSelect.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  options: optionsPropType.isRequired,\n  setValue: PropTypes.func.isRequired,\n  dense: PropTypes.bool,\n  error: PropTypes.bool,\n  filled: PropTypes.bool,\n  filterable: PropTypes.bool,\n  helpText: PropTypes.string,\n  initialFocus: PropTypes.bool,\n  loading: PropTypes.bool,\n  noMatchText: PropTypes.string,\n  selected: optionPropType,\n  validationText: PropTypes.string,\n  warning: PropTypes.bool\n};\nexport { Select };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from '@dhis2/ui-forms';\nimport { Select } from '../';\n\nconst Wrapper = ({\n  input: {\n    value,\n    onChange\n  },\n  meta,\n  inputName,\n  ...rest\n}) => <Select name={inputName} meta={meta} selected={value || undefined} setValue={onChange} {...rest} />;\n\nWrapper.propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.any,\n    onChange: PropTypes.func\n  }).isRequired,\n  inputName: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    pristine: PropTypes.bool,\n    touched: PropTypes.bool\n  }).isRequired\n};\n\nconst SelectField = ({\n  name,\n  ...rest\n}) => {\n  return <Field component={Wrapper} name={name} inputName={name} {...rest} />;\n};\n\nSelectField.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport { SelectField };","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Checkbox, InputField, MenuItem, Radio } from '@dhis2/ui-core';\nimport { optionsPropType } from '../../utils/options';\nimport styles from './SelectableList.module.css';\n\nconst SelectableList = ({\n  label,\n  name,\n  selected,\n  setSelected,\n  list,\n  multiSelect,\n  withFilter,\n  withActions,\n  dataTest\n}) => {\n  const [filter, setFilter] = useState('');\n\n  const onSelectAll = () => {\n    if (multiSelect) {\n      const all = list.map(({\n        value\n      }) => value);\n      setSelected(all);\n    }\n  };\n\n  const onClearAll = () => {\n    if (multiSelect) {\n      setSelected([]);\n    }\n  };\n\n  const onSelect = ({\n    value: id\n  }) => {\n    if (multiSelect) {\n      const newValue = !selected.includes(id);\n\n      if (newValue == false) {\n        setSelected(selected.filter(p => p != id));\n      } else {\n        setSelected([...selected, id]);\n      }\n    } else {\n      setSelected([id]);\n    }\n  };\n\n  return <div data-test={dataTest}>\n            {withFilter && <div className={styles.filter} data-test={`${dataTest}-filter`}>\n                    <InputField name=\"filter\" label={label} value={filter} onChange={({\n        value\n      }) => setFilter(value)} dense />\n                </div>}\n\n            {withActions && <div className={styles.actions} data-test={`${dataTest}-actions`}>\n                    <Button className={styles.action} onClick={onSelectAll} dataTest={`${dataTest}-actions-select-all`}>\n                        {i18n.t('Select all')}\n                    </Button>\n                    <Button className={styles.action} onClick={onClearAll} dataTest={`${dataTest}-actions-clear-all`}>\n                        {i18n.t('Clear all')}\n                    </Button>\n                </div>}\n\n            <div className={styles.body} data-test={`${dataTest}-body`} name={name}>\n                {list.filter(({\n        label\n      }) => label.toLowerCase().includes(filter.toLowerCase())).map(({\n        value,\n        label\n      }) => {\n        const component = multiSelect ? <Checkbox value={value} name={name} label={label} checked={selected.includes(value)} onChange={() => 0} /> : <Radio value={value} name={name} label={label} checked={selected.includes(value)} onChange={() => 0} />;\n        return <MenuItem dataTest={`${dataTest}-body-li-${value}`} key={`${dataTest}-body-li-${value}`} value={value} label={component} onClick={onSelect} />;\n      })}\n            </div>\n        </div>;\n};\n\nSelectableList.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  list: optionsPropType.isRequired,\n  name: PropTypes.string.isRequired,\n  selected: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelected: PropTypes.func.isRequired,\n  multiSelect: PropTypes.bool,\n  withActions: PropTypes.bool,\n  withFilter: PropTypes.bool\n};\nexport { SelectableList };","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, Menu, MenuItem } from '@dhis2/ui-core';\nimport styles from './Sidebar.module.css';\nimport { StyledLink } from '../';\nimport { DataIcon, EventIcon, GMLIcon, MetadataDependencyExportIcon, MetadataExportIcon, MetadataImportIcon, TasksIcon } from '../';\nconst dataImportPage = {\n  name: i18n.t('Data import'),\n  code: 'data-import',\n  icon: <DataIcon />,\n  path: '/import/data'\n};\nconst eventImportPage = {\n  name: i18n.t('Event import'),\n  code: 'event-import',\n  icon: <EventIcon />,\n  path: '/import/event'\n};\nconst gmlImportPage = {\n  name: i18n.t('GML import'),\n  code: 'gml-import',\n  icon: <GMLIcon />,\n  path: '/import/gml'\n};\nconst metadataImportPage = {\n  name: i18n.t('Metadata import'),\n  code: 'metadata-import',\n  path: '/import/metadata',\n  icon: <MetadataImportIcon />\n};\nconst dataExportPage = {\n  name: i18n.t('Data export'),\n  code: 'data-export',\n  path: '/export/data',\n  icon: <DataIcon />\n};\nconst eventExportPage = {\n  name: i18n.t('Event export'),\n  code: 'event-export',\n  path: '/export/event',\n  icon: <EventIcon />\n};\nconst metadataDependencyExportPage = {\n  name: i18n.t('Metadata dependency export'),\n  code: 'metadata-dependency-export',\n  path: '/export/metadata-dependency',\n  icon: <MetadataDependencyExportIcon />\n};\nconst metadataExportPage = {\n  name: i18n.t('Metadata export'),\n  code: 'metadata-export',\n  path: '/export/metadata',\n  icon: <MetadataExportIcon />\n};\nconst importPages = [dataImportPage, eventImportPage, gmlImportPage, metadataImportPage];\nconst exportPages = [dataExportPage, eventExportPage, metadataDependencyExportPage, metadataExportPage];\nconst jobOverviewPage = {\n  name: i18n.t('Job overview'),\n  code: 'job-overview',\n  path: '/utils/job-overview',\n  icon: <TasksIcon />\n};\n\nconst SidebarItem = ({\n  name,\n  path,\n  code,\n  icon,\n  active,\n  className\n}) => <StyledLink to={path} dataTest={`sidebar-link-${code}`}>\n        <MenuItem active={active} icon={icon} label={name} className={className} />\n    </StyledLink>;\n\nSidebarItem.propTypes = {\n  active: PropTypes.bool.isRequired,\n  code: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\n\nconst Sidebar = () => {\n  const location = useLocation();\n  const pathname = location.pathname;\n  return <Menu className={styles.Menu}>\n            <h3 className={styles.sectionTitle}>{i18n.t('Import')}</h3>\n            {importPages.map(({\n      icon,\n      name,\n      code,\n      path\n    }) => {\n      const active = pathname == path;\n      return <SidebarItem name={name} path={path} code={code} icon={icon} active={active} key={path} />;\n    })}\n            <Divider />\n            <h3 className={styles.sectionTitle}>{i18n.t('Export')}</h3>\n            {exportPages.map(({\n      icon,\n      name,\n      code,\n      path\n    }) => {\n      const active = pathname == path;\n      return <SidebarItem name={name} path={path} code={code} icon={icon} active={active} key={path} />;\n    })}\n            <Divider />\n            <SidebarItem name={jobOverviewPage.name} path={jobOverviewPage.path} code={jobOverviewPage.code} icon={jobOverviewPage.icon} active={pathname == jobOverviewPage.path} className={pathname == jobOverviewPage.path ? '' : styles.jobOverview} key={jobOverviewPage.path} />\n        </Menu>;\n};\n\nexport { Sidebar };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styles from './StyledLink.module.css';\n\nconst StyledLink = ({\n  dataTest,\n  ...passThroughProps\n}) => <Link data-test={dataTest} className={styles.link} {...passThroughProps} />;\n\nStyledLink.propTypes = {\n  dataTest: PropTypes.string.isRequired\n};\nexport { StyledLink };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field, Switch as SwitchUI } from '@dhis2/ui-forms';\nimport { FormField } from '../';\n\nconst Switch = ({\n  name,\n  label,\n  help,\n  value,\n  dataTest\n}) => {\n  return <FormField label={label} dataTest={dataTest}>\n            <Field component={SwitchUI} name={name} label={value ? i18n.t('Yes') : i18n.t('No')} helpText={help} dataTest={`${dataTest}-sf`} />\n        </FormField>;\n};\n\nSwitch.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  help: PropTypes.string,\n  value: PropTypes.bool\n};\nexport { Switch };","import { useContext } from 'react';\nimport { UserContext } from '../../contexts/';\n\nconst WithAuthority = ({\n  pred,\n  children\n}) => {\n  const user = useContext(UserContext);\n  if (!user) return null;\n  return pred(user.authorities) ? children : null;\n};\n\nexport { WithAuthority };","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssReset, CircularLoader, ScreenCover } from '@dhis2/ui-core';\nimport { TaskContext } from './contexts/';\nimport { UserContext } from './contexts/';\nimport { useUser, useTasks } from './hooks/';\nimport styles from './App.module.css';\nimport { Sidebar } from './components/';\nimport { Router } from './components/';\n\nconst App = () => {\n  const {\n    tasks,\n    addTask,\n    jobOverview,\n    updateJobOverview\n  } = useTasks();\n  const {\n    loading,\n    error,\n    user\n  } = useUser();\n\n  if (loading) {\n    return <ScreenCover dataTest=\"app-screen-cover\">\n                <CircularLoader dataTest=\"app-loader\" />\n            </ScreenCover>;\n  } else if (error) {\n    return <div data-test=\"app-error\">\n                <p>\n                    {i18n.t('Something went wrong when loading the current user!')}\n                </p>\n                <p>{error.message}</p>\n            </div>;\n  }\n\n  return <HashRouter>\n            <UserContext.Provider value={user}>\n                <TaskContext.Provider value={{\n        tasks,\n        addTask,\n        jobOverview,\n        updateJobOverview\n      }}>\n                    <CssReset />\n\n                    <div className={styles.container}>\n                        <div className={styles.sidebar}>\n                            <Sidebar />\n                        </div>\n\n                        <div className={styles.content}>\n                            <Router />\n                        </div>\n                    </div>\n                </TaskContext.Provider>\n            </UserContext.Provider>\n        </HashRouter>;\n};\n\nexport default App;"],"sourceRoot":""}